{"version":3,"file":"aave-governance-ui-helpers.cjs.development.js","sources":["../src/helpers/chains.ts","../src/helpers/appConfig.ts","../src/helpers/bignumber.ts","../src/helpers/checkHash.ts","../src/helpers/eventsHelpres.ts","../src/types.ts","../src/helpers/formatProposal.ts","../src/helpers/getBlockNumberByTimestamp.ts","../src/helpers/getGovCoreConfigs.ts","../src/helpers/getHistoryEvents.ts","../src/helpers/getProposalData.ts","../src/helpers/getProposalEvents.ts","../src/helpers/getProposalMetadata.ts"],"sourcesContent":["export enum ChainIdByName {\n  Goerli = 5,\n  GoerliOptimism = 420,\n  AvalancheFuji = 43113,\n  Sepolia = 11155111,\n  Mumbai = 80001,\n  BnbTest = 97,\n}\n","// TODO: need integrate address book\n\nimport { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\nexport type CoreNetworkName = 'goerli' | 'sepolia'; // TODO: need add mainnet\n\ntype Config = {\n  contractAddress: string;\n  dataHelperContractAddress: string;\n};\n\nexport const govCoreConfig: Record<\n  CoreNetworkName,\n  Config & { votingPortals: Record<number, string> }\n> = {\n  // testnets\n  goerli: {\n    contractAddress: '0x586207Df62c7D5D1c9dBb8F61EdF77cc30925C4F',\n    dataHelperContractAddress: '0x160e2d1456B815d6a3d281218538dd6E2e3C841f',\n    votingPortals: {\n      [ChainIdByName.Goerli]: '0xFf376b6db4AF0d87Dba35860B3B87F526d7879cF',\n    },\n  },\n  sepolia: {\n    contractAddress: '0x84b3FE5eD74caC496BcB58d448A7c83c523F6E0E',\n    dataHelperContractAddress: '0x74bb7b600fA33E2A1945F8493D17db3b129513D2',\n    votingPortals: {\n      [ChainIdByName.Sepolia]: '0x5C77bF8505716904a1a73eB8c3909c0Da0DD49b3',\n    },\n  },\n};\n\nexport const payloadsControllerConfig: Record<\n  CoreNetworkName,\n  Record<\n    number,\n    Pick<Config, 'dataHelperContractAddress'> & {\n      contractAddresses: string[];\n      payloadAddress: string;\n    }\n  >\n> = {\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      dataHelperContractAddress: '0xbd2db358f3C82F2883132A6584e22F38A979e768',\n\n      // for create payload\n      contractAddresses: ['0x064361B3761CcDd17300146bf58a79d1E570382E'],\n      // TODO: (remove after release)\n      payloadAddress: '0xf6b9c3fCF7f91817E7bF0efF792BA692c7bd372A',\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      dataHelperContractAddress: '0x5c2AD703961c59Adb4412d402b8D694Eee48a822',\n\n      // for create payload\n      contractAddresses: ['0x7Bb94b2a8d9fD3f37345Ec5A0b46c234164b4f90'],\n      // TODO: (remove after release)\n      payloadAddress: '0xf19de078dbac9db382caf8015cb208667ec581c0',\n    },\n  },\n};\n\nconst votingMachineConfig: Record<\n  CoreNetworkName,\n  Record<number, Config & { dataWarehouseAddress: string }>\n> = {\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      contractAddress: '0xE8AD5ab6295c16D04257BC6Cd6D447ff4018FF89',\n      dataHelperContractAddress: '0xe10617A1ea760E174E82fBeb38a540d8ACe566f5',\n      dataWarehouseAddress: '0xC946cc6bb934bAf2A539BaB62c647aff09D2e2D8',\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      contractAddress: '0xB379f8a3E62Ff807E827F853B36688d1d7aD692f',\n      dataHelperContractAddress: '0x8b5661024Bc97c1Fd71B4eCafCA88c316c3D438B',\n      dataWarehouseAddress: '0xdF6C1affD18Ecb318e4468d96b588bbbEac180E2',\n    },\n  },\n};\n\nconst govCoreChainId: Record<CoreNetworkName, number> = {\n  // testnets\n  goerli: ChainIdByName.Goerli,\n  sepolia: ChainIdByName.Sepolia,\n};\n\nconst aditionalsAddresses: Record<CoreNetworkName, Record<string, string>> = {\n  // testnets\n  goerli: {\n    aaveAddress: '0xb6D88BfC5b145a558b279cf7692e6F02064889d0',\n    aAaveAddress: '0xD1ff82609FB63A0eee6FE7D2896d80d29491cCCd',\n    stkAAVEAddress: '0x1406A9Ea2B0ec8FD4bCa4F876DAae2a70a9856Ec',\n\n    // for delegation\n    delegationHelper: '0x1966133c190475E8385Dc1b4150B5f81c70DC578',\n  },\n  sepolia: {\n    aaveAddress: '0x64033B2270fd9D6bbFc35736d2aC812942cE75fE',\n    aAaveAddress: '0x7d9EB767eEc260d1bCe8C518276a894aE5535F04',\n    stkAAVEAddress: '0xA4FDAbdE9eF3045F0dcF9221bab436B784B7e42D',\n\n    // for delegation\n    delegationHelper: '0x1633Bd6772020a797fB09a3b17D6AD9a95b98f01',\n  },\n};\n\nexport const votingMachineChainIds: Record<CoreNetworkName, number[]> = {\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia],\n};\n\nexport const payloadsControllerChainIds: Record<CoreNetworkName, number[]> = {\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia],\n};\n\nconst gelatoApiKeys: Record<string, string> = {\n  testnet: 'qGvvlJMoyDKyuMxqJjDwFslpgiBKZCXNXpnSjIxsICY_',\n  mainnet: '', // TODO: need add\n};\n\nexport const appConfigInit = (\n  providers: Record<number, ethers.providers.JsonRpcBatchProvider>,\n  coreNetwork: CoreNetworkName,\n) => {\n  return {\n    providers,\n    govCoreChainId: govCoreChainId[coreNetwork],\n    govCoreConfig: govCoreConfig[coreNetwork],\n    votingMachineConfig: votingMachineConfig[coreNetwork],\n    votingMachineChainIds: votingMachineChainIds[coreNetwork],\n    payloadsControllerConfig: payloadsControllerConfig[coreNetwork],\n    payloadsControllerChainIds: payloadsControllerChainIds[coreNetwork],\n\n    additional: aditionalsAddresses[coreNetwork],\n    gelatoApiKeys,\n  };\n};\n","import { BigNumber } from 'bignumber.js';\n\nexport type BigNumberValue = string | number | BigNumber;\n\nexport function valueToBigNumber(amount: BigNumberValue): BigNumber {\n  if (amount instanceof BigNumber) {\n    return amount;\n  }\n\n  return new BigNumber(amount);\n}\n\nexport function normalize(n: BigNumberValue, decimals: number): string {\n  return normalizeBN(n, decimals).toString(10);\n}\n\nexport function normalizeBN(n: BigNumberValue, decimals: number): BigNumber {\n  return valueToBigNumber(n).shiftedBy(decimals * -1);\n}\n","import { ethers } from 'ethers';\n\nexport function checkHash(hash: string) {\n  return {\n    notZero: hash !== ethers.constants.HashZero,\n    zero: hash === ethers.constants.HashZero,\n  };\n}\n","export const blockLimit = 1023;\n\nexport function getBlocksForEvents(\n  currentBlock: number,\n  startBlockNumber: number,\n  endBlockNumber: number | undefined,\n  lastBlockNumber: number | undefined,\n): { startBlock: number; endBlock: number } {\n  const endBlock =\n    endBlockNumber && endBlockNumber > 0 && endBlockNumber < currentBlock\n      ? endBlockNumber\n      : !!lastBlockNumber &&\n        isFinite(lastBlockNumber) &&\n        lastBlockNumber > startBlockNumber &&\n        lastBlockNumber < currentBlock\n      ? lastBlockNumber + 1\n      : currentBlock > startBlockNumber + blockLimit\n      ? startBlockNumber + blockLimit\n      : currentBlock;\n\n  const startBlock =\n    !!lastBlockNumber &&\n    isFinite(lastBlockNumber) &&\n    lastBlockNumber > startBlockNumber &&\n    lastBlockNumber < currentBlock &&\n    lastBlockNumber < endBlock\n      ? lastBlockNumber\n      : startBlockNumber < currentBlock\n      ? startBlockNumber\n      : currentBlock - blockLimit;\n\n  return { startBlock, endBlock };\n}\n\nexport async function getEventsBySteps<T>(\n  startBlock: number,\n  endBlock: number,\n  blockLimit: number,\n  callbackFunc: (startBlock: number, endBlock: number) => Promise<T>,\n) {\n  const blockSteps = Math.ceil((endBlock - startBlock) / blockLimit);\n\n  const eventsCountArray = new Array(blockSteps);\n  for (let i = 0; i < blockSteps; i++) {\n    eventsCountArray[i] = i;\n  }\n\n  const results = await Promise.all(\n    eventsCountArray.map(async (count) => {\n      const startBlockNumber = startBlock + blockLimit * count;\n      const endBlockNumber = startBlock + (blockLimit * count + blockLimit);\n\n      return await callbackFunc(\n        startBlockNumber,\n        endBlock > endBlockNumber ? endBlockNumber : endBlock,\n      );\n    }),\n  );\n\n  return results.flat();\n}\n","export interface PayloadForCreation {\n  chain: number;\n  accessLevel: number;\n  payloadsController: string;\n  payloadId: number;\n}\n\nexport enum BasicProposalState {\n  Null,\n  Created,\n  Active,\n  Queued,\n  Executed,\n  Failed,\n  Cancelled,\n  Expired,\n}\n\nexport enum VotingMachineProposalState {\n  NotCreated,\n  Active,\n  Finished,\n  SentToGovernance,\n}\n\nexport enum PayloadState {\n  None,\n  Created,\n  Queued,\n  Executed,\n  Cancelled,\n  Expired,\n}\n\nexport enum ProposalState {\n  Created,\n  Active,\n  Succeed,\n  Defeated,\n  Executed,\n  Expired,\n  Canceled,\n}\n\nexport type VotersData = {\n  proposalId: number;\n  address: string;\n  support: boolean;\n  votingPower: number;\n  transactionHash: string;\n  blockNumber: number;\n  chainId: number;\n};\n\nexport type InitialProposal = {\n  id: number;\n  votingChainId: number;\n  snapshotBlockHash: string;\n};\n\nexport type VotingMachineData = {\n  id: number;\n  forVotes: string;\n  againstVotes: string;\n  startTime: number;\n  endTime: number;\n  votingClosedAndSentBlockNumber: number;\n  votingClosedAndSentTimestamp: number;\n  l1BlockHash: string;\n  strategy: string;\n  sentToGovernance: boolean;\n  createdBlock: number;\n  votedInfo: {\n    support: boolean;\n    votingPower: string;\n  };\n  votingAssets: string[];\n  hasRequiredRoots: boolean;\n};\n\nexport type Payload = {\n  id: number;\n  chainId: number;\n  maximumAccessLevelRequired: number;\n  state: PayloadState;\n  createdAt: number;\n  queuedAt: number;\n  executedAt: number;\n  cancelledAt: number;\n  expirationTime: number;\n  delay: number;\n  gracePeriod: number;\n  payloadsController: string;\n  actionAddresses: string[];\n};\n\n// type for create payload actions\nexport type PayloadAction = {\n  payloadAddress: string;\n  withDelegateCall: boolean;\n  accessLevel: number;\n  value: number;\n  signature: string;\n  callData?: string;\n};\n\nexport type VotingConfig = {\n  accessLevel: number;\n  quorum: number;\n  differential: number;\n  minPropositionPower: number;\n  coolDownBeforeVotingStart: number;\n  votingDuration: number;\n};\n\nexport type ContractsConstants = {\n  precisionDivider: string;\n  cooldownPeriod: number;\n  expirationTime: number;\n  cancellationFee: string;\n};\n\nexport type InitialPayload = {\n  id: number;\n  chainId: number;\n  payloadsController: string;\n};\n\nexport interface BasicProposal {\n  id: number;\n  votingDuration: number;\n  creationTime: number;\n  accessLevel: number;\n  basicState: BasicProposalState;\n  queuingTime: number;\n  ipfsHash: string;\n  initialPayloads: InitialPayload[];\n  votingMachineData: VotingMachineData;\n  snapshotBlockHash: string;\n  creator: string;\n  canceledAt: number;\n  votingActivationTime: number;\n  votingChainId: number;\n  prerender: boolean;\n}\n\nexport interface ProposalData\n  extends BasicProposal,\n    Pick<ProposalMetadata, 'title'> {\n  payloads: Payload[];\n  votingMachineState: VotingMachineProposalState;\n}\n\ntype BlockHash = string;\nexport type Balance = {\n  blockHash: string;\n  tokenName: string;\n  underlyingAsset: string;\n  value: string;\n  basicValue: string;\n  userBalance: string;\n  isWithDelegatedPower: boolean;\n};\n\nexport type VotingBalance = Record<BlockHash, Balance[]>;\n\nexport interface ProposalWithoutState {\n  data: ProposalData;\n  precisionDivider: string;\n  config: VotingConfig;\n  timings: {\n    cooldownPeriod: number;\n    expirationTime: number;\n    executionPayloadTime: number;\n  };\n  balances: Balance[];\n}\n\nexport interface Proposal extends ProposalWithoutState {\n  state: ProposalState;\n}\n\nexport interface ProposalWithLoadings {\n  loading: boolean;\n  balanceLoading: boolean;\n  proposal: Proposal;\n}\n\nexport interface ProposalWithId extends ProposalWithLoadings {\n  id: number;\n}\n\nexport enum ProposalStateWithName {\n  Created = 'Created',\n  Active = 'Voting',\n  Succeed = 'Passed',\n  Failed = 'Failed',\n  Defeated = 'Failed',\n  Executed = 'Executed',\n  Expired = 'Expired',\n  Canceled = 'Canceled',\n  ActiveAll = 'Active',\n}\n\nexport enum ProposalEstimatedState {\n  Active = 'Will open for voting',\n  Succeed = 'Will pass',\n  Defeated = 'Will fail',\n  ProposalExecuted = 'Proposal will be executed',\n  PayloadsExecuted = 'Payloads will be executed',\n  Expired = 'Will expire',\n}\n\nexport enum ProposalWaitForState {\n  WaitForActivateVoting = 'Pending voting activation',\n  WaitForCloseVoting = 'Pending voting closure',\n  WaitForQueueProposal = 'Proposal is time-locked',\n  WaitForExecuteProposal = 'Pending proposal execution',\n  WaitForQueuePayloads = 'Payloads are time-locked',\n  WaitForExecutePayloads = 'Pending payloads execution',\n}\n\nexport type ProposalMetadata = {\n  title: string;\n  description: string;\n  shortDescription: string;\n  ipfsHash: string;\n  originalIpfsHash: string;\n  aip: number;\n  discussions: string;\n  author: string;\n};\n\nexport interface FinishedProposalForList\n  extends Pick<ProposalMetadata, 'title'> {\n  id: number;\n  state: ProposalState;\n  finishedTimestamp: number;\n  ipfsHash: string;\n}\n\nexport interface CachedProposalDataItem {\n  proposal: {\n    data: {\n      id: number;\n      finishedTimestamp: number;\n      title: string;\n      ipfsHash: string;\n    };\n    state: ProposalState;\n  };\n}\n\nexport interface CachedProposalDataItemWithId extends CachedProposalDataItem {\n  id: number;\n}\n\nexport interface CachedDetails {\n  payloads: Payload[];\n  ipfs: ProposalMetadata;\n  proposal: BasicProposal;\n}\n","import { BigNumber } from 'bignumber.js';\nimport dayjs from 'dayjs';\n\nimport {\n  BasicProposalState,\n  PayloadState,\n  Proposal,\n  ProposalData as BasicProposal,\n  ProposalEstimatedState,\n  ProposalState,\n  ProposalWaitForState,\n  VotingMachineProposalState,\n} from '../types';\nimport { normalizeBN, valueToBigNumber } from './bignumber';\nimport { checkHash } from './checkHash';\n\nexport function normalizeVotes(forVotes: string, againstVotes: string) {\n  const forVotesN = normalizeBN(forVotes, 18).toNumber();\n  const againstVotesN = normalizeBN(againstVotes, 18).toNumber();\n\n  return { forVotes: forVotesN, againstVotes: againstVotesN };\n}\n\nexport function formatQuorum(\n  forVotes: string,\n  quorum: number,\n  precisionDivider: string,\n) {\n  const minQuorumVotes =\n    valueToBigNumber(quorum).multipliedBy(precisionDivider);\n  const normalizeMinQuorumVotes = normalizeBN(minQuorumVotes, 18).toNumber();\n\n  let quorumReached = false;\n  if (valueToBigNumber(forVotes).gte(minQuorumVotes)) {\n    quorumReached = true;\n  }\n\n  return {\n    minQuorumVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n  };\n}\n\nexport function formatDiff(\n  forVotes: string,\n  againstVotes: string,\n  differential: number,\n  precisionDivider: string,\n) {\n  const diff = valueToBigNumber(forVotes).minus(againstVotes);\n  const requiredDiff =\n    valueToBigNumber(differential).multipliedBy(precisionDivider);\n  const normalizeRequiredDiff = normalizeBN(requiredDiff, 18).toNumber();\n\n  return { diff, requiredDiff, normalizeRequiredDiff };\n}\n\ninterface BasicProposalWithConfigsData {\n  proposalData: BasicProposal;\n  quorum: number;\n  differential: number;\n  precisionDivider: string;\n  cooldownPeriod: number;\n  executionPayloadTime: number;\n}\n\nexport function getProposalStepsAndAmounts({\n  proposalData,\n  quorum,\n  differential,\n  precisionDivider,\n  cooldownPeriod,\n  executionPayloadTime,\n}: BasicProposalWithConfigsData) {\n  const now = dayjs().unix();\n\n  const isVotingStarted =\n    proposalData.votingMachineState > VotingMachineProposalState.NotCreated;\n  const isVotingEnded =\n    proposalData.votingMachineData.endTime > 0 &&\n    now > proposalData.votingMachineData.endTime;\n\n  const isVotingClosed =\n    proposalData.votingMachineData.votingClosedAndSentTimestamp > 0 &&\n    now > proposalData.votingMachineData.votingClosedAndSentTimestamp;\n\n  const { forVotes, againstVotes } = normalizeVotes(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n  );\n  const { normalizeMinQuorumVotes, quorumReached } = formatQuorum(\n    proposalData.votingMachineData.forVotes,\n    quorum,\n    precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n    differential,\n    precisionDivider,\n  );\n\n  const lastPayloadQueuedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.queuedAt || 0),\n  );\n  const lastPayloadExecutedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.executedAt || 0),\n  );\n  const lastPayloadCanceledAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.cancelledAt || 0),\n  );\n  const lastPayloadExpiredAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (!!payload?.executedAt) {\n        if (payload.queuedAt <= 0 && payload.state === PayloadState.Expired) {\n          return payload.expirationTime;\n        } else if (\n          payload.queuedAt > 0 &&\n          payload.state === PayloadState.Expired\n        ) {\n          return payload.queuedAt + payload.delay + payload.gracePeriod;\n        } else {\n          return 0;\n        }\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const predictPayloadExpiredTime = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (payload?.state && payload.state === PayloadState.Created) {\n        return payload.expirationTime;\n      } else if (payload?.state && payload.state === PayloadState.Queued) {\n        return payload.queuedAt + payload.delay + payload.gracePeriod;\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const allPayloadsExecuted = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Executed,\n  );\n  const allPayloadsCanceled = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Cancelled,\n  );\n  const allPayloadsExpired = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Expired,\n  );\n\n  const isCanceled =\n    proposalData.basicState === BasicProposalState.Cancelled ||\n    allPayloadsCanceled;\n\n  const isExpired =\n    proposalData.basicState === BasicProposalState.Expired ||\n    allPayloadsExpired;\n\n  const isVotingActive = isVotingStarted && !isVotingEnded && !isCanceled;\n\n  const isVotingFailed =\n    isVotingEnded &&\n    (againstVotes > forVotes + normalizeRequiredDiff ||\n      (againstVotes === 0 && forVotes === 0));\n\n  const isProposalQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    proposalData.votingMachineData.sentToGovernance &&\n    proposalData.queuingTime > 0 &&\n    now > proposalData.queuingTime + cooldownPeriod;\n\n  const isProposalExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled;\n\n  const isPayloadsQueued =\n    isProposalExecuted && now > lastPayloadQueuedAt + executionPayloadTime;\n\n  const isPayloadsExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled &&\n    allPayloadsExecuted &&\n    !isExpired;\n\n  let isProposalActive = true;\n  if (\n    proposalData.basicState === BasicProposalState.Null ||\n    proposalData.basicState === BasicProposalState.Created\n  ) {\n    isProposalActive = false;\n  } else if (isCanceled) {\n    isProposalActive = false;\n  } else if (isVotingFailed) {\n    isProposalActive = false;\n  } else if (isPayloadsExecuted) {\n    isProposalActive = false;\n  } else if (isExpired) {\n    isProposalActive = false;\n  }\n\n  return {\n    forVotes,\n    againstVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingStarted,\n    isVotingActive,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    lastPayloadQueuedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExecutedAt,\n    lastPayloadExpiredAt,\n    predictPayloadExpiredTime,\n    allPayloadsExecuted,\n    allPayloadsCanceled,\n    allPayloadsExpired,\n    isCanceled,\n    isExpired,\n    isProposalActive,\n    isProposalQueued,\n    isProposalExecuted,\n    isPayloadsQueued,\n    isPayloadsExecuted,\n  };\n}\n\nexport function getProposalState({ ...data }: BasicProposalWithConfigsData) {\n  const {\n    forVotes,\n    againstVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingActive,\n    isVotingEnded,\n    isVotingFailed,\n    isExpired,\n    allPayloadsExecuted,\n    isCanceled,\n    isPayloadsExecuted,\n  } = getProposalStepsAndAmounts(data);\n\n  if (\n    !isCanceled &&\n    data.proposalData.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    data.proposalData.basicState <= BasicProposalState.Active\n  ) {\n    return ProposalState.Created;\n  } else if (\n    isVotingActive &&\n    checkHash(data.proposalData.snapshotBlockHash).notZero\n  ) {\n    return ProposalState.Active;\n  } else if (\n    isVotingEnded &&\n    !isCanceled &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached &&\n    !allPayloadsExecuted &&\n    !isExpired\n  ) {\n    return ProposalState.Succeed;\n  } else if (isVotingFailed && !isCanceled) {\n    return ProposalState.Defeated;\n  } else if (isCanceled) {\n    return ProposalState.Canceled;\n  } else if (isPayloadsExecuted) {\n    return ProposalState.Executed;\n  } else {\n    return ProposalState.Expired;\n  }\n}\n\nfunction getStateTimestamp(proposal: Proposal) {\n  const {\n    isVotingEnded,\n    isVotingStarted,\n    isExpired,\n    lastPayloadExecutedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExpiredAt,\n    allPayloadsExpired,\n    isCanceled,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (proposal.state === ProposalState.Created && !isExpired && !isCanceled) {\n    return proposal.data.creationTime;\n  } else if (\n    proposal.data.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return (\n      proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n    );\n  } else if (\n    checkHash(proposal.data.snapshotBlockHash).notZero &&\n    !isVotingStarted &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingActivationTime;\n  } else if (!isVotingEnded && isVotingStarted && !isExpired && !isCanceled) {\n    return proposal.data.votingMachineData.startTime;\n  } else if (\n    isVotingStarted &&\n    isVotingEnded &&\n    proposal.state !== ProposalState.Executed &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingMachineData.endTime > 0\n      ? proposal.data.votingMachineData.endTime\n      : proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart;\n  } else if (proposal.state === ProposalState.Defeated) {\n    return proposal.data.votingMachineData.endTime;\n  } else if (proposal.state === ProposalState.Executed) {\n    return lastPayloadExecutedAt;\n  } else if (proposal.state === ProposalState.Canceled) {\n    return lastPayloadCanceledAt > proposal.data.canceledAt\n      ? lastPayloadCanceledAt\n      : proposal.data.canceledAt;\n  } else if (\n    proposal.data.basicState === BasicProposalState.Executed &&\n    allPayloadsExpired\n  ) {\n    return lastPayloadExpiredAt;\n  } else {\n    return proposal.data.creationTime + proposal.timings.expirationTime;\n  }\n}\n\nexport function getEstimatedState(\n  proposal: Proposal,\n  forVotesS: string,\n  againstVotesS: string,\n) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    lastPayloadQueuedAt,\n    predictPayloadExpiredTime,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const { forVotes, againstVotes } = normalizeVotes(forVotesS, againstVotesS);\n  const { quorumReached } = formatQuorum(\n    forVotesS,\n    proposal.config.quorum,\n    proposal.precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    forVotesS,\n    againstVotesS,\n    proposal.config.differential,\n    proposal.precisionDivider,\n  );\n\n  const isVotingDefeated =\n    againstVotes > forVotes + normalizeRequiredDiff ||\n    (againstVotes === 0 && forVotes === 0) ||\n    !quorumReached;\n\n  const isProposalWaitForQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingDefeated &&\n    proposal.data.votingMachineData.sentToGovernance &&\n    proposal.data.queuingTime > 0 &&\n    now < proposal.data.queuingTime + proposal.timings.cooldownPeriod;\n\n  const isPayloadsWaitForQueued =\n    proposal.data.basicState === BasicProposalState.Executed &&\n    now < lastPayloadQueuedAt + proposal.timings.executionPayloadTime;\n\n  const executedTimestamp =\n    proposal.data.queuingTime > 0 && lastPayloadQueuedAt === 0\n      ? proposal.data.queuingTime + proposal.timings.cooldownPeriod\n      : proposal.data.queuingTime > 0 && lastPayloadQueuedAt > 0\n      ? lastPayloadQueuedAt + proposal.timings.executionPayloadTime\n      : 0;\n\n  if (\n    now <=\n    proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Active,\n      timestampForEstimatedState:\n        proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart,\n    };\n  } else if (\n    isVotingStarted &&\n    !isVotingEnded &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Succeed,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isVotingDefeated && isVotingStarted && !isVotingEnded) {\n    return {\n      estimatedState: ProposalEstimatedState.Defeated,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isProposalWaitForQueued && !isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.ProposalExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else if (isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.PayloadsExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else {\n    return {\n      estimatedState: ProposalEstimatedState.Expired,\n      timestampForEstimatedState:\n        proposal.data.basicState === BasicProposalState.Executed\n          ? predictPayloadExpiredTime\n          : proposal.data.creationTime + proposal.timings.expirationTime,\n    };\n  }\n}\n\nexport function getWaitForState(proposal: Proposal) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    isProposalExecuted,\n    isProposalQueued,\n    isPayloadsQueued,\n    lastPayloadQueuedAt,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (!isVotingFailed) {\n    if (\n      now >\n        proposal.data.creationTime +\n          proposal.config.coolDownBeforeVotingStart &&\n      !isVotingStarted &&\n      !isVotingEnded &&\n      !isVotingClosed\n    ) {\n      return ProposalWaitForState.WaitForActivateVoting;\n    } else if (isVotingStarted && isVotingEnded && !isVotingClosed) {\n      return ProposalWaitForState.WaitForCloseVoting;\n    } else if (\n      isVotingStarted &&\n      isVotingEnded &&\n      isVotingClosed &&\n      proposal.data.votingMachineData.sentToGovernance &&\n      proposal.data.queuingTime <= 0\n    ) {\n      return ProposalWaitForState.WaitForQueueProposal;\n    } else if (\n      isProposalQueued &&\n      proposal.data.basicState !== BasicProposalState.Executed\n    ) {\n      return ProposalWaitForState.WaitForExecuteProposal;\n    } else if (isProposalExecuted && lastPayloadQueuedAt === 0) {\n      return ProposalWaitForState.WaitForQueuePayloads;\n    } else if (isPayloadsQueued) {\n      return ProposalWaitForState.WaitForExecutePayloads;\n    } else {\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nexport function formatProposal(proposal: Proposal) {\n  const {\n    forVotes,\n    normalizeMinQuorumVotes,\n    againstVotes,\n    normalizeRequiredDiff,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const stateTimestamp = getStateTimestamp(proposal);\n  const { estimatedState, timestampForEstimatedState } = getEstimatedState(\n    proposal,\n    proposal.data.votingMachineData.forVotes,\n    proposal.data.votingMachineData.againstVotes,\n  );\n  const waitForState = getWaitForState(proposal);\n\n  const allVotes = new BigNumber(proposal.data.votingMachineData.forVotes).plus(\n    proposal.data.votingMachineData.againstVotes,\n  );\n\n  const votingPowerBasic = proposal.balances\n    .map((balance) => valueToBigNumber(balance.basicValue).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingPower = proposal.balances\n    .map((balance) => valueToBigNumber(balance.value).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingTokens = proposal.balances;\n\n  const requiredForVotes =\n    normalizeMinQuorumVotes - againstVotes > normalizeRequiredDiff\n      ? normalizeMinQuorumVotes - againstVotes\n      : againstVotes + normalizeRequiredDiff;\n  const requiredAgainstVotes =\n    forVotes === 0 ? 0 : forVotes + normalizeRequiredDiff;\n\n  const forPercent = allVotes.gt(0)\n    ? new BigNumber(forVotes)\n        .dividedBy(requiredForVotes)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n  const againstPercent = allVotes.gt(0)\n    ? new BigNumber(againstVotes)\n        .dividedBy(requiredAgainstVotes > 0 ? requiredAgainstVotes : 1)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n\n  return {\n    forPercent,\n    forVotes,\n    againstPercent,\n    againstVotes,\n    minQuorumVotes: normalizeMinQuorumVotes,\n    requiredDiff: normalizeRequiredDiff,\n    requiredForVotes,\n    requiredAgainstVotes,\n    stateTimestamp,\n    estimatedState,\n    timestampForEstimatedState,\n    waitForState,\n    votingPowerBasic,\n    votingPower,\n    votedPower: normalizeBN(\n      proposal.data.votingMachineData.votedInfo.votingPower,\n      18,\n    ).toNumber(),\n    votingTokens,\n  };\n}\n","import { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\n// TODO: need added mainnets\nconst getAverageBlockTime = (chainId: number) => {\n  switch (chainId) {\n    case ChainIdByName.Sepolia:\n      return 15;\n    case ChainIdByName.AvalancheFuji:\n      return 5;\n    case ChainIdByName.Mumbai:\n      return 3;\n    case ChainIdByName.BnbTest:\n      return 3;\n    default:\n      return 15;\n  }\n};\n\nexport async function getBlockNumberByTimestamp(\n  chainId: number,\n  targetTimestamp: number,\n  provider: ethers.providers.JsonRpcBatchProvider,\n) {\n  const BLOCKS_DIFF = 100;\n  const MAX_ITERATIONS = 10;\n\n  let iterationCount = 0;\n  let averageBlockTime = getAverageBlockTime(chainId);\n\n  const currentBlockNumber = await provider.getBlockNumber();\n  let currentBlock = await provider.getBlock(currentBlockNumber);\n\n  if (targetTimestamp > currentBlock.timestamp) {\n    throw new Error('Target timestamp is in the future.');\n  }\n\n  // initial guess\n  let estimatedBlockNumber = Math.max(\n    0,\n    currentBlockNumber -\n      Math.floor((currentBlock.timestamp - targetTimestamp) / averageBlockTime),\n  );\n\n  let estimatedBlock = await provider.getBlock(estimatedBlockNumber);\n\n  let previousBlockTimestamp = currentBlock.timestamp;\n  let previousBlockNumber = currentBlockNumber;\n\n  do {\n    iterationCount++;\n  } while (    Math.abs(estimatedBlock.timestamp - targetTimestamp) >\n  BLOCKS_DIFF * averageBlockTime &&\niterationCount < MAX_ITERATIONS);\n\n  // until difference is less that blocks diff\n  while (\n    Math.abs(estimatedBlock.timestamp - targetTimestamp) >\n      BLOCKS_DIFF * averageBlockTime &&\n    iterationCount < MAX_ITERATIONS\n  ) {\n    // Calculate a new average block time based on the difference of the timestamps\n    averageBlockTime =\n      (estimatedBlock.timestamp - previousBlockTimestamp) /\n      (estimatedBlockNumber - previousBlockNumber);\n\n    previousBlockTimestamp = estimatedBlock.timestamp;\n    previousBlockNumber = estimatedBlock.number;\n\n    // Make a new guess\n    estimatedBlockNumber = Math.max(\n      0,\n      estimatedBlockNumber -\n        Math.floor(\n          (estimatedBlock.timestamp - targetTimestamp) / averageBlockTime,\n        ),\n    );\n\n    // Get block data\n    estimatedBlock = await provider.getBlock(estimatedBlockNumber);\n\n    iterationCount++;\n  }\n\n  if (iterationCount === MAX_ITERATIONS) {\n    throw new Error('Maximum iterations reached without converging.');\n  }\n\n  // if estimated block timestamp <= target\n  let minBlockNumber = estimatedBlock.number - 1;\n  let maxBlockNumber = estimatedBlock.number + BLOCKS_DIFF * 2;\n\n  // if estimated block timestamp > target\n  if (estimatedBlock.timestamp > targetTimestamp) {\n    minBlockNumber = estimatedBlock.number - BLOCKS_DIFF * 2;\n    maxBlockNumber = estimatedBlock.number;\n  }\n\n  return {\n    minBlockNumber,\n    maxBlockNumber,\n  };\n}\n","import { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { VotingConfig } from '../types';\n\nexport async function getGovCoreConfigs(\n  govCoreDataHelper: IGovernanceDataHelper,\n  govCoreContractAddress: string,\n) {\n  const accessLevels = [1, 2]; // access levels that we can’t get from contracts in any way, so far there are only two of them, we need to keep an eye on that suddenly there will be more of them\n  const constants = await govCoreDataHelper.getConstants(\n    govCoreContractAddress,\n    accessLevels,\n  );\n\n  const contractsConstants = {\n    precisionDivider: constants.precisionDivider.toString(),\n    cooldownPeriod: constants.cooldownPeriod.toNumber(),\n    expirationTime: constants.expirationTime.toNumber(),\n    cancellationFee: constants.cancellationFee.toString(),\n  };\n\n  const configs: VotingConfig[] = [];\n\n  for (let i = 0; i < accessLevels.length; i++) {\n    const votingConfig = constants.votingConfigs[i];\n\n    const config: VotingConfig = {\n      accessLevel: votingConfig.accessLevel,\n      votingDuration: votingConfig.config.votingDuration,\n      quorum: votingConfig.config.yesThreshold.toNumber() || 200,\n      differential: votingConfig.config.yesNoDifferential.toNumber() || 50,\n      coolDownBeforeVotingStart: votingConfig.config.coolDownBeforeVotingStart,\n      minPropositionPower: votingConfig.config.minPropositionPower.toNumber(),\n    };\n\n    configs.push(config);\n  }\n\n  return {\n    contractsConstants,\n    configs,\n  };\n}\n","// payloads created\nimport { IGovernanceCore } from '../contracts/IGovernanceCore';\nimport { IPayloadsControllerCore } from '../contracts/IPayloadsControllerCore';\nimport { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { blockLimit, getEventsBySteps } from './eventsHelpres';\n\nasync function getPayloadsCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsCreated(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal created\nasync function getProposalCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalCreated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal activate for voting\nasync function getProposalActivatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.VotingActivated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting activate on VM\nasync function getProposalActivatedOnVMEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalVoteStarted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivatedOnVM(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedOnVMEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting closed on VM and voting results sent\nasync function getProposalVotingClosedEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalResultsSent(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalVotingClosed(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalVotingClosedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal queued\nasync function getProposalQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalQueued(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads queued\nasync function getPayloadsQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsQueued(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads executed\nasync function getPayloadsExecutedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadExecuted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsExecuted(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsExecutedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import dayjs from 'dayjs';\nimport { ethers } from 'ethers';\n\nimport { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { IVotingMachineDataHelper } from '../contracts/IVotingMachineDataHelper';\nimport {\n  BasicProposal,\n  ProposalData,\n  VotingMachineProposalState,\n} from '../types';\n\nexport function getVotingMachineProposalState(proposal: BasicProposal) {\n  const now = dayjs().unix();\n  if (proposal.votingMachineData.startTime === 0) {\n    return VotingMachineProposalState.NotCreated;\n  } else if (now <= proposal.votingMachineData.endTime) {\n    return VotingMachineProposalState.Active;\n  } else if (proposal.votingMachineData.votingClosedAndSentBlockNumber === 0) {\n    return VotingMachineProposalState.Finished;\n  } else {\n    return VotingMachineProposalState.SentToGovernance;\n  }\n}\n\nexport function formatVotingMachineData(\n  id: number,\n  votingMachineData: IVotingMachineDataHelper.ProposalStructOutput,\n) {\n  return {\n    id: id,\n    forVotes: votingMachineData.proposalData.forVotes.toString(),\n    againstVotes: votingMachineData.proposalData.againstVotes.toString(),\n    startTime: votingMachineData.proposalData.startTime,\n    endTime: votingMachineData.proposalData.endTime,\n    votingClosedAndSentBlockNumber:\n      votingMachineData.proposalData.votingClosedAndSentBlockNumber.toNumber(),\n    votingClosedAndSentTimestamp:\n      votingMachineData.proposalData.votingClosedAndSentTimestamp,\n    l1BlockHash:\n      votingMachineData?.voteConfig.l1ProposalBlockHash ||\n      ethers.constants.HashZero,\n    strategy: votingMachineData.strategy,\n    sentToGovernance: votingMachineData.proposalData.sentToGovernance,\n    createdBlock: votingMachineData.proposalData.creationBlockNumber.toNumber(),\n    votedInfo: {\n      support: votingMachineData.votedInfo.support,\n      votingPower: votingMachineData.votedInfo.votingPower.toString(),\n    },\n    votingAssets: votingMachineData.votingAssets,\n    hasRequiredRoots: votingMachineData.hasRequiredRoots,\n  };\n}\n\nexport function updateVotingMachineData(\n  proposals: ProposalData[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n) {\n  const proposalsData: BasicProposal[] = [];\n\n  ids.forEach((id) => {\n    const govData = proposals.find((proposal) => proposal?.id === id);\n    if (govData) {\n      const votingMachineData =\n        votingMachineDataHelperData.find(\n          (proposal) => proposal.proposalData.id.toNumber() === govData.id,\n        ) || votingMachineDataHelperData[0];\n\n      const proposalData = {\n        id: govData.id,\n        votingDuration:\n          +votingMachineData?.voteConfig.votingDuration ||\n          govData.votingDuration,\n        creationTime: govData.creationTime,\n        accessLevel: govData.accessLevel,\n        basicState: govData.basicState,\n        queuingTime: govData.queuingTime,\n        ipfsHash: govData.ipfsHash,\n        initialPayloads: govData.initialPayloads,\n        snapshotBlockHash: govData.snapshotBlockHash,\n        creator: govData.creator,\n        canceledAt: govData.canceledAt,\n        votingActivationTime: govData.votingActivationTime,\n        votingChainId: govData.votingChainId,\n        votingMachineData: formatVotingMachineData(\n          govData.id,\n          votingMachineData,\n        ),\n        prerender: govData.prerender,\n      };\n\n      proposalsData.push(proposalData);\n    }\n  });\n\n  return proposalsData;\n}\n\nexport function getDetailedProposalsData(\n  govCoreDataHelperData: IGovernanceDataHelper.ProposalStructOutput[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n  prerender?: boolean,\n): BasicProposal[] {\n  const proposalsData: BasicProposal[] = [];\n\n  for (let i = 0; i < ids.length; i++) {\n    const govData = govCoreDataHelperData[i];\n\n    const votingMachineData =\n      votingMachineDataHelperData.find(\n        (proposal) =>\n          proposal.proposalData.id.toNumber() === govData.id.toNumber(),\n      ) || votingMachineDataHelperData[i];\n\n    const proposalData = {\n      id: govData.id.toNumber(),\n      votingDuration:\n        +votingMachineData?.voteConfig.votingDuration ||\n        +govData.proposalData.votingDuration,\n      creationTime: +govData.proposalData.creationTime,\n      accessLevel: +govData.proposalData.accessLevel,\n      basicState: +govData.proposalData.state,\n      queuingTime: +govData.proposalData.queuingTime,\n      ipfsHash: govData.proposalData.ipfsHash,\n      initialPayloads: govData.proposalData.payloads.map((payload) => {\n        return {\n          id: payload.payloadId,\n          chainId: payload.chain.toNumber(),\n          payloadsController: payload.payloadsController,\n        };\n      }),\n      snapshotBlockHash: govData.proposalData.snapshotBlockHash,\n      creator: govData.proposalData.creator,\n      canceledAt: govData.proposalData.cancelTimestamp,\n      votingActivationTime: govData.proposalData.votingActivationTime,\n      votingChainId: govData.votingChainId.toNumber(),\n      votingMachineData: formatVotingMachineData(\n        govData.id.toNumber(),\n        votingMachineData,\n      ),\n      prerender: !!prerender,\n    };\n\n    proposalsData.push(proposalData);\n  }\n\n  return proposalsData;\n}\n","import { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { normalizeBN } from './bignumber';\nimport { getEventsBySteps } from './eventsHelpres';\n\nasync function getVoteEvents(\n  votingMachine: IVotingMachineWithProofs,\n  startBlock: number,\n  endBlock: number,\n  chainId: number,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.VoteEmitted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      address: event.args.voter.toString(),\n      support: event.args.support,\n      votingPower: normalizeBN(\n        event.args.votingPower.toString(),\n        18,\n      ).toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      chainId,\n    }));\n}\n\nexport async function getVoters(\n  endBlock: number,\n  startBlock: number,\n  blockLimit: number,\n  votingMachine: IVotingMachineWithProofs,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getVoteEvents(\n      votingMachine,\n      startBlockNumber,\n      endBlockNumber,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import { ethers } from 'ethers';\nimport { base58 } from 'ethers/lib/utils';\nimport matter from 'gray-matter';\n\nimport { ProposalMetadata } from '../types';\n\nexport const ipfsGateway = 'https://ipfs.io/ipfs';\n\nexport function getLink(hash: string, gateway: string): string {\n  return `${gateway}/${hash}`;\n}\ntype MemorizeMetadata = Record<string, ProposalMetadata>;\n\nconst MEMORIZE: MemorizeMetadata = {};\n\nconst incorectedHashses = [\n  '0x0000000000000000000000000000000000000000000000000000000000000020',\n  ethers.constants.HashZero,\n];\n\nexport async function getProposalMetadata(\n  hash: string,\n  gateway = ipfsGateway,\n  setIpfsError?: (hash: string, text?: string) => void,\n  errorText?: string,\n): Promise<ProposalMetadata> {\n  const ipfsHash = hash.startsWith('0x')\n    ? base58.encode(Buffer.from(`1220${hash.slice(2)}`, 'hex'))\n    : hash;\n\n  if (MEMORIZE[ipfsHash]) return MEMORIZE[ipfsHash];\n\n  if (incorectedHashses.some((h) => hash === h)) {\n    if (!!setIpfsError) {\n      setIpfsError(hash, errorText);\n    } else {\n      throw Error('Fetch metadata form ipfs not working');\n    }\n  } else {\n    const ipfsResponse: Response = await fetch(getLink(ipfsHash, gateway));\n\n    if (!ipfsResponse.ok) {\n      if (!!setIpfsError) {\n        setIpfsError(hash);\n      } else {\n        throw Error('Fetch metadata form ipfs not working');\n      }\n    }\n\n    const clone = ipfsResponse.clone();\n    try {\n      const response: ProposalMetadata = await ipfsResponse.json();\n\n      const { content } = matter(response.description);\n\n      MEMORIZE[ipfsHash] = {\n        title: response.title,\n        aip: response.aip,\n        originalIpfsHash: hash,\n        author: response.author,\n        discussions: response.discussions,\n        shortDescription: response.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    } catch (e) {\n      const text = await clone.text();\n      const { content, data } = matter(text);\n      MEMORIZE[ipfsHash] = {\n        title: data.title,\n        aip: data.aip,\n        originalIpfsHash: hash,\n        author: data.author,\n        discussions: data.discussions,\n        shortDescription: data.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    }\n  }\n\n  return MEMORIZE[ipfsHash];\n}\n"],"names":["ChainIdByName","govCoreConfig","goerli","contractAddress","dataHelperContractAddress","votingPortals","_votingPortals","Goerli","sepolia","_votingPortals2","Sepolia","payloadsControllerConfig","_goerli","contractAddresses","payloadAddress","_sepolia","votingMachineConfig","_goerli2","dataWarehouseAddress","_sepolia2","govCoreChainId","aditionalsAddresses","aaveAddress","aAaveAddress","stkAAVEAddress","delegationHelper","votingMachineChainIds","payloadsControllerChainIds","gelatoApiKeys","testnet","mainnet","appConfigInit","providers","coreNetwork","additional","valueToBigNumber","amount","BigNumber","normalize","n","decimals","normalizeBN","toString","shiftedBy","checkHash","hash","notZero","ethers","constants","HashZero","zero","blockLimit","getBlocksForEvents","currentBlock","startBlockNumber","endBlockNumber","lastBlockNumber","endBlock","isFinite","startBlock","getEventsBySteps","_x","_x2","_x3","_x4","_getEventsBySteps","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","callbackFunc","blockSteps","eventsCountArray","i","results","wrap","_callee2$","_context2","prev","next","Math","ceil","Array","Promise","all","map","_ref","_callee","count","_callee$","_context","abrupt","sent","stop","_x5","flat","BasicProposalState","VotingMachineProposalState","PayloadState","ProposalState","ProposalStateWithName","ProposalEstimatedState","ProposalWaitForState","normalizeVotes","forVotes","againstVotes","forVotesN","toNumber","againstVotesN","formatQuorum","quorum","precisionDivider","minQuorumVotes","multipliedBy","normalizeMinQuorumVotes","quorumReached","gte","formatDiff","differential","diff","minus","requiredDiff","normalizeRequiredDiff","getProposalStepsAndAmounts","proposalData","cooldownPeriod","executionPayloadTime","now","dayjs","unix","isVotingStarted","votingMachineState","NotCreated","isVotingEnded","votingMachineData","endTime","isVotingClosed","votingClosedAndSentTimestamp","_normalizeVotes","_formatQuorum","_formatDiff","lastPayloadQueuedAt","max","payloads","payload","queuedAt","lastPayloadExecutedAt","executedAt","lastPayloadCanceledAt","cancelledAt","lastPayloadExpiredAt","state","Expired","expirationTime","delay","gracePeriod","predictPayloadExpiredTime","Created","Queued","allPayloadsExecuted","every","Executed","allPayloadsCanceled","Cancelled","allPayloadsExpired","isCanceled","basicState","isExpired","isVotingActive","isVotingFailed","isProposalQueued","sentToGovernance","queuingTime","isProposalExecuted","isPayloadsQueued","isPayloadsExecuted","isProposalActive","Null","getProposalState","_ref2","data","_extends","_objectDestructuringEmpty","_getProposalStepsAndA","Active","snapshotBlockHash","Succeed","Defeated","Canceled","getStateTimestamp","proposal","_getProposalStepsAndA2","config","timings","creationTime","coolDownBeforeVotingStart","votingActivationTime","startTime","canceledAt","getEstimatedState","forVotesS","againstVotesS","_getProposalStepsAndA3","_normalizeVotes2","_formatQuorum2","_formatDiff2","isVotingDefeated","isProposalWaitForQueued","isPayloadsWaitForQueued","executedTimestamp","estimatedState","timestampForEstimatedState","ProposalExecuted","PayloadsExecuted","getWaitForState","_getProposalStepsAndA4","WaitForActivateVoting","WaitForCloseVoting","WaitForQueueProposal","WaitForExecuteProposal","WaitForQueuePayloads","WaitForExecutePayloads","undefined","formatProposal","_getProposalStepsAndA5","stateTimestamp","_getEstimatedState","waitForState","allVotes","plus","votingPowerBasic","balances","balance","basicValue","reduce","sum","value","votingPower","votingTokens","requiredForVotes","requiredAgainstVotes","forPercent","gt","dividedBy","againstPercent","votedPower","votedInfo","getAverageBlockTime","chainId","AvalancheFuji","Mumbai","BnbTest","getBlockNumberByTimestamp","_getBlockNumberByTimestamp","targetTimestamp","provider","BLOCKS_DIFF","MAX_ITERATIONS","iterationCount","averageBlockTime","currentBlockNumber","estimatedBlockNumber","estimatedBlock","previousBlockTimestamp","previousBlockNumber","minBlockNumber","maxBlockNumber","getBlockNumber","getBlock","timestamp","Error","floor","abs","number","getGovCoreConfigs","_getGovCoreConfigs","govCoreDataHelper","govCoreContractAddress","accessLevels","contractsConstants","configs","votingConfig","getConstants","cancellationFee","length","votingConfigs","accessLevel","votingDuration","yesThreshold","yesNoDifferential","minPropositionPower","push","getPayloadsCreatedEvents","_getPayloadsCreatedEvents","payloadsController","payloadsControllerAddress","events","queryFilter","filters","PayloadCreated","sort","a","b","blockNumber","event","payloadId","args","transactionHash","getPayloadsCreated","_x6","_x7","_x8","_x9","_x10","_getPayloadsCreated","_callee3","_callee3$","_context3","_x61","_x62","getProposalCreatedEvents","_x11","_x12","_x13","_getProposalCreatedEvents","_callee4","govCore","_callee4$","_context4","ProposalCreated","proposalId","getProposalCreated","_x14","_x15","_x16","_getProposalCreated","_callee6","_callee6$","_context6","_callee5","_callee5$","_context5","_x63","_x64","getProposalActivatedEvents","_x17","_x18","_x19","_getProposalActivatedEvents","_callee7","_callee7$","_context7","VotingActivated","getProposalActivated","_x20","_x21","_x22","_getProposalActivated","_callee9","_callee9$","_context9","_ref3","_callee8","_callee8$","_context8","_x65","_x66","getProposalActivatedOnVMEvents","_x23","_x24","_x25","_getProposalActivatedOnVMEvents","_callee10","votingMachine","_callee10$","_context10","ProposalVoteStarted","getProposalActivatedOnVM","_x26","_x27","_x28","_getProposalActivatedOnVM","_callee12","_callee12$","_context12","_ref4","_callee11","_callee11$","_context11","_x67","_x68","getProposalVotingClosedEvents","_x29","_x30","_x31","_getProposalVotingClosedEvents","_callee13","_callee13$","_context13","ProposalResultsSent","getProposalVotingClosed","_x32","_x33","_x34","_getProposalVotingClosed","_callee15","_callee15$","_context15","_ref5","_callee14","_callee14$","_context14","_x69","_x70","getProposalQueuedEvents","_x35","_x36","_x37","_getProposalQueuedEvents","_callee16","_callee16$","_context16","ProposalQueued","getProposalQueued","_x38","_x39","_x40","_getProposalQueued","_callee18","_callee18$","_context18","_ref6","_callee17","_callee17$","_context17","_x71","_x72","getPayloadsQueuedEvents","_x41","_x42","_x43","_x44","_x45","_getPayloadsQueuedEvents","_callee19","_callee19$","_context19","PayloadQueued","getPayloadsQueued","_x46","_x47","_x48","_x49","_x50","_getPayloadsQueued","_callee21","_callee21$","_context21","_ref7","_callee20","_callee20$","_context20","_x73","_x74","getPayloadsExecutedEvents","_x51","_x52","_x53","_x54","_x55","_getPayloadsExecutedEvents","_callee22","_callee22$","_context22","PayloadExecuted","getPayloadsExecuted","_x56","_x57","_x58","_x59","_x60","_getPayloadsExecuted","_callee24","_callee24$","_context24","_ref8","_callee23","_callee23$","_context23","_x75","_x76","getVotingMachineProposalState","votingClosedAndSentBlockNumber","Finished","SentToGovernance","formatVotingMachineData","id","l1BlockHash","voteConfig","l1ProposalBlockHash","strategy","createdBlock","creationBlockNumber","support","votingAssets","hasRequiredRoots","updateVotingMachineData","proposals","votingMachineDataHelperData","ids","proposalsData","forEach","govData","find","ipfsHash","initialPayloads","creator","votingChainId","prerender","getDetailedProposalsData","govCoreDataHelperData","_loop","chain","cancelTimestamp","getVoteEvents","_getVoteEvents","VoteEmitted","address","voter","getVoters","_getVoters","ipfsGateway","getLink","gateway","MEMORIZE","incorectedHashses","getProposalMetadata","_getProposalMetadata","setIpfsError","errorText","ipfsResponse","clone","response","_matter","content","text","_matter2","_content","startsWith","base58","encode","Buffer","from","slice","some","h","fetch","ok","json","matter","description","title","aip","originalIpfsHash","author","discussions","shortDescription","t0"],"mappings":";;;;;;;;;;;;AAAA,WAAYA,aAAa;EACvBA,qDAAU;EACVA,uEAAoB;EACpBA,uEAAqB;EACrBA,8DAAkB;EAClBA,yDAAc;EACdA,wDAAY;AACd,CAAC,EAPWA,qBAAa,KAAbA,qBAAa;;;ACAzB,IAaaC,aAAa,GAGtB;;EAEFC,MAAM,EAAE;IACNC,eAAe,EAAE,4CAA4C;IAC7DC,yBAAyB,EAAE,4CAA4C;IACvEC,aAAa,GAAAC,cAAA,OAAAA,cAAA,CACVN,qBAAa,CAACO,MAAM,IAAG,4CAA4C,EAAAD,cAAA;GAEvE;EACDE,OAAO,EAAE;IACPL,eAAe,EAAE,4CAA4C;IAC7DC,yBAAyB,EAAE,4CAA4C;IACvEC,aAAa,GAAAI,eAAA,OAAAA,eAAA,CACVT,qBAAa,CAACU,OAAO,IAAG,4CAA4C,EAAAD,eAAA;;CAG1E;AAED,IAAaE,wBAAwB,GASjC;;EAEFT,MAAM,GAAAU,OAAA,OAAAA,OAAA,CACHZ,qBAAa,CAACO,MAAM,IAAG;IACtBH,yBAAyB,EAAE,4CAA4C;;IAGvES,iBAAiB,EAAE,CAAC,4CAA4C,CAAC;;IAEjEC,cAAc,EAAE;GACjB,EAAAF,OAAA,CACF;EACDJ,OAAO,GAAAO,QAAA,OAAAA,QAAA,CACJf,qBAAa,CAACU,OAAO,IAAG;IACvBN,yBAAyB,EAAE,4CAA4C;;IAGvES,iBAAiB,EAAE,CAAC,4CAA4C,CAAC;;IAEjEC,cAAc,EAAE;GACjB,EAAAC,QAAA;CAEJ;AAED,IAAMC,mBAAmB,GAGrB;;EAEFd,MAAM,GAAAe,QAAA,OAAAA,QAAA,CACHjB,qBAAa,CAACO,MAAM,IAAG;IACtBJ,eAAe,EAAE,4CAA4C;IAC7DC,yBAAyB,EAAE,4CAA4C;IACvEc,oBAAoB,EAAE;GACvB,EAAAD,QAAA,CACF;EACDT,OAAO,GAAAW,SAAA,OAAAA,SAAA,CACJnB,qBAAa,CAACU,OAAO,IAAG;IACvBP,eAAe,EAAE,4CAA4C;IAC7DC,yBAAyB,EAAE,4CAA4C;IACvEc,oBAAoB,EAAE;GACvB,EAAAC,SAAA;CAEJ;AAED,IAAMC,cAAc,GAAoC;;EAEtDlB,MAAM,EAAEF,qBAAa,CAACO,MAAM;EAC5BC,OAAO,EAAER,qBAAa,CAACU;CACxB;AAED,IAAMW,mBAAmB,GAAoD;;EAE3EnB,MAAM,EAAE;IACNoB,WAAW,EAAE,4CAA4C;IACzDC,YAAY,EAAE,4CAA4C;IAC1DC,cAAc,EAAE,4CAA4C;;IAG5DC,gBAAgB,EAAE;GACnB;EACDjB,OAAO,EAAE;IACPc,WAAW,EAAE,4CAA4C;IACzDC,YAAY,EAAE,4CAA4C;IAC1DC,cAAc,EAAE,4CAA4C;;IAG5DC,gBAAgB,EAAE;;CAErB;AAED,IAAaC,qBAAqB,GAAsC;EACtExB,MAAM,EAAE,CAACF,qBAAa,CAACO,MAAM,CAAC;EAC9BC,OAAO,EAAE,CAACR,qBAAa,CAACU,OAAO;CAChC;AAED,IAAaiB,0BAA0B,GAAsC;EAC3EzB,MAAM,EAAE,CAACF,qBAAa,CAACO,MAAM,CAAC;EAC9BC,OAAO,EAAE,CAACR,qBAAa,CAACU,OAAO;CAChC;AAED,IAAMkB,aAAa,GAA2B;EAC5CC,OAAO,EAAE,8CAA8C;EACvDC,OAAO,EAAE;CACV;AAED,IAAaC,aAAa,GAAG,SAAhBA,aAAaA,CACxBC,SAAgE,EAChEC,WAA4B;EAE5B,OAAO;IACLD,SAAS,EAATA,SAAS;IACTZ,cAAc,EAAEA,cAAc,CAACa,WAAW,CAAC;IAC3ChC,aAAa,EAAEA,aAAa,CAACgC,WAAW,CAAC;IACzCjB,mBAAmB,EAAEA,mBAAmB,CAACiB,WAAW,CAAC;IACrDP,qBAAqB,EAAEA,qBAAqB,CAACO,WAAW,CAAC;IACzDtB,wBAAwB,EAAEA,wBAAwB,CAACsB,WAAW,CAAC;IAC/DN,0BAA0B,EAAEA,0BAA0B,CAACM,WAAW,CAAC;IAEnEC,UAAU,EAAEb,mBAAmB,CAACY,WAAW,CAAC;IAC5CL,aAAa,EAAbA;GACD;AACH,CAAC;;SC7IeO,gBAAgBA,CAACC,MAAsB;EACrD,IAAIA,MAAM,YAAYC,sBAAS,EAAE;IAC/B,OAAOD,MAAM;;EAGf,OAAO,IAAIC,sBAAS,CAACD,MAAM,CAAC;AAC9B;AAEA,SAAgBE,SAASA,CAACC,CAAiB,EAAEC,QAAgB;EAC3D,OAAOC,WAAW,CAACF,CAAC,EAAEC,QAAQ,CAAC,CAACE,QAAQ,CAAC,EAAE,CAAC;AAC9C;AAEA,SAAgBD,WAAWA,CAACF,CAAiB,EAAEC,QAAgB;EAC7D,OAAOL,gBAAgB,CAACI,CAAC,CAAC,CAACI,SAAS,CAACH,QAAQ,GAAG,CAAC,CAAC,CAAC;AACrD;;SChBgBI,SAASA,CAACC,IAAY;EACpC,OAAO;IACLC,OAAO,EAAED,IAAI,KAAKE,aAAM,CAACC,SAAS,CAACC,QAAQ;IAC3CC,IAAI,EAAEL,IAAI,KAAKE,aAAM,CAACC,SAAS,CAACC;GACjC;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICPaE,UAAU,GAAG,IAAI;AAE9B,SAAgBC,kBAAkBA,CAChCC,YAAoB,EACpBC,gBAAwB,EACxBC,cAAkC,EAClCC,eAAmC;EAEnC,IAAMC,QAAQ,GACZF,cAAc,IAAIA,cAAc,GAAG,CAAC,IAAIA,cAAc,GAAGF,YAAY,GACjEE,cAAc,GACd,CAAC,CAACC,eAAe,IACjBE,QAAQ,CAACF,eAAe,CAAC,IACzBA,eAAe,GAAGF,gBAAgB,IAClCE,eAAe,GAAGH,YAAY,GAC9BG,eAAe,GAAG,CAAC,GACnBH,YAAY,GAAGC,gBAAgB,GAAGH,UAAU,GAC5CG,gBAAgB,GAAGH,UAAU,GAC7BE,YAAY;EAElB,IAAMM,UAAU,GACd,CAAC,CAACH,eAAe,IACjBE,QAAQ,CAACF,eAAe,CAAC,IACzBA,eAAe,GAAGF,gBAAgB,IAClCE,eAAe,GAAGH,YAAY,IAC9BG,eAAe,GAAGC,QAAQ,GACtBD,eAAe,GACfF,gBAAgB,GAAGD,YAAY,GAC/BC,gBAAgB,GAChBD,YAAY,GAAGF,UAAU;EAE/B,OAAO;IAAEQ,UAAU,EAAVA,UAAU;IAAEF,QAAQ,EAARA;GAAU;AACjC;AAEA,SAAsBG,gBAAgBA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AA0BrC,SAAAF;EAAAA,iBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CA1BM,SAAAC,SACLZ,UAAkB,EAClBF,QAAgB,EAChBN,UAAkB,EAClBqB,YAAkE;IAAA,IAAAC,UAAA,EAAAC,gBAAA,EAAAC,CAAA,EAAAC,OAAA;IAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAE5DR,UAAU,GAAGS,IAAI,CAACC,IAAI,CAAC,CAAC1B,QAAQ,GAAGE,UAAU,IAAIR,UAAU,CAAC;UAE5DuB,gBAAgB,GAAG,IAAIU,KAAK,CAACX,UAAU,CAAC;UAC9C,KAASE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;YACnCD,gBAAgB,CAACC,CAAC,CAAC,GAAGA,CAAC;;UACxBI,SAAA,CAAAE,IAAA;UAAA,OAEqBI,OAAO,CAACC,GAAG,CAC/BZ,gBAAgB,CAACa,GAAG;YAAA,IAAAC,IAAA,GAAApB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAmB,QAAOC,KAAK;cAAA,IAAApC,gBAAA,EAAAC,cAAA;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAc,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;kBAAA;oBACzB3B,gBAAgB,GAAGK,UAAU,GAAGR,UAAU,GAAGuC,KAAK;oBAClDnC,cAAc,GAAGI,UAAU,IAAIR,UAAU,GAAGuC,KAAK,GAAGvC,UAAU,CAAC;oBAAAyC,QAAA,CAAAX,IAAA;oBAAA,OAExDT,YAAY,CACvBlB,gBAAgB,EAChBG,QAAQ,GAAGF,cAAc,GAAGA,cAAc,GAAGE,QAAQ,CACtD;kBAAA;oBAAA,OAAAmC,QAAA,CAAAC,MAAA,WAAAD,QAAA,CAAAE,IAAA;kBAAA;kBAAA;oBAAA,OAAAF,QAAA,CAAAG,IAAA;;iBAAAN,OAAA;aACF;YAAA,iBAAAO,GAAA;cAAA,OAAAR,IAAA,CAAAtB,KAAA,OAAAC,SAAA;;cAAC,CACH;QAAA;UAVKS,OAAO,GAAAG,SAAA,CAAAe,IAAA;UAAA,OAAAf,SAAA,CAAAc,MAAA,WAYNjB,OAAO,CAACqB,IAAI,EAAE;QAAA;QAAA;UAAA,OAAAlB,SAAA,CAAAgB,IAAA;;OAAAxB,QAAA;GACtB;EAAA,OAAAN,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;;ACrDD,WAAY+B,kBAAkB;EAC5BA,2DAAI;EACJA,iEAAO;EACPA,+DAAM;EACNA,+DAAM;EACNA,mEAAQ;EACRA,+DAAM;EACNA,qEAAS;EACTA,iEAAO;AACT,CAAC,EATWA,0BAAkB,KAAlBA,0BAAkB;AAW9B,AAAA,WAAYC,0BAA0B;EACpCA,uFAAU;EACVA,+EAAM;EACNA,mFAAQ;EACRA,mGAAgB;AAClB,CAAC,EALWA,kCAA0B,KAA1BA,kCAA0B;AAOtC,AAAA,WAAYC,YAAY;EACtBA,+CAAI;EACJA,qDAAO;EACPA,mDAAM;EACNA,uDAAQ;EACRA,yDAAS;EACTA,qDAAO;AACT,CAAC,EAPWA,oBAAY,KAAZA,oBAAY;AASxB,AAAA,WAAYC,aAAa;EACvBA,uDAAO;EACPA,qDAAM;EACNA,uDAAO;EACPA,yDAAQ;EACRA,yDAAQ;EACRA,uDAAO;EACPA,yDAAQ;AACV,CAAC,EARWA,qBAAa,KAAbA,qBAAa;AA8JzB,AAAA,WAAYC,qBAAqB;EAC/BA,4CAAmB;EACnBA,0CAAiB;EACjBA,2CAAkB;EAClBA,0CAAiB;EACjBA,4CAAmB;EACnBA,8CAAqB;EACrBA,4CAAmB;EACnBA,8CAAqB;EACrBA,6CAAoB;AACtB,CAAC,EAVWA,6BAAqB,KAArBA,6BAAqB;AAYjC,AAAA,WAAYC,sBAAsB;EAChCA,yDAA+B;EAC/BA,+CAAqB;EACrBA,gDAAsB;EACtBA,wEAA8C;EAC9CA,wEAA8C;EAC9CA,iDAAuB;AACzB,CAAC,EAPWA,8BAAsB,KAAtBA,8BAAsB;AASlC,AAAA,WAAYC,oBAAoB;EAC9BA,2EAAmD;EACnDA,qEAA6C;EAC7CA,wEAAgD;EAChDA,6EAAqD;EACrDA,yEAAiD;EACjDA,6EAAqD;AACvD,CAAC,EAPWA,4BAAoB,KAApBA,4BAAoB;;SCrMhBC,cAAcA,CAACC,QAAgB,EAAEC,YAAoB;EACnE,IAAMC,SAAS,GAAGnE,WAAW,CAACiE,QAAQ,EAAE,EAAE,CAAC,CAACG,QAAQ,EAAE;EACtD,IAAMC,aAAa,GAAGrE,WAAW,CAACkE,YAAY,EAAE,EAAE,CAAC,CAACE,QAAQ,EAAE;EAE9D,OAAO;IAAEH,QAAQ,EAAEE,SAAS;IAAED,YAAY,EAAEG;GAAe;AAC7D;AAEA,SAAgBC,YAAYA,CAC1BL,QAAgB,EAChBM,MAAc,EACdC,gBAAwB;EAExB,IAAMC,cAAc,GAClB/E,gBAAgB,CAAC6E,MAAM,CAAC,CAACG,YAAY,CAACF,gBAAgB,CAAC;EACzD,IAAMG,uBAAuB,GAAG3E,WAAW,CAACyE,cAAc,EAAE,EAAE,CAAC,CAACL,QAAQ,EAAE;EAE1E,IAAIQ,aAAa,GAAG,KAAK;EACzB,IAAIlF,gBAAgB,CAACuE,QAAQ,CAAC,CAACY,GAAG,CAACJ,cAAc,CAAC,EAAE;IAClDG,aAAa,GAAG,IAAI;;EAGtB,OAAO;IACLH,cAAc,EAAdA,cAAc;IACdE,uBAAuB,EAAvBA,uBAAuB;IACvBC,aAAa,EAAbA;GACD;AACH;AAEA,SAAgBE,UAAUA,CACxBb,QAAgB,EAChBC,YAAoB,EACpBa,YAAoB,EACpBP,gBAAwB;EAExB,IAAMQ,IAAI,GAAGtF,gBAAgB,CAACuE,QAAQ,CAAC,CAACgB,KAAK,CAACf,YAAY,CAAC;EAC3D,IAAMgB,YAAY,GAChBxF,gBAAgB,CAACqF,YAAY,CAAC,CAACL,YAAY,CAACF,gBAAgB,CAAC;EAC/D,IAAMW,qBAAqB,GAAGnF,WAAW,CAACkF,YAAY,EAAE,EAAE,CAAC,CAACd,QAAQ,EAAE;EAEtE,OAAO;IAAEY,IAAI,EAAJA,IAAI;IAAEE,YAAY,EAAZA,YAAY;IAAEC,qBAAqB,EAArBA;GAAuB;AACtD;AAWA,SAAgBC,0BAA0BA,CAAArC,IAAA;MACxCsC,YAAY,GAAAtC,IAAA,CAAZsC,YAAY;IACZd,MAAM,GAAAxB,IAAA,CAANwB,MAAM;IACNQ,YAAY,GAAAhC,IAAA,CAAZgC,YAAY;IACZP,gBAAgB,GAAAzB,IAAA,CAAhByB,gBAAgB;IAChBc,cAAc,GAAAvC,IAAA,CAAduC,cAAc;IACdC,oBAAoB,GAAAxC,IAAA,CAApBwC,oBAAoB;EAEpB,IAAMC,GAAG,GAAGC,KAAK,EAAE,CAACC,IAAI,EAAE;EAE1B,IAAMC,eAAe,GACnBN,YAAY,CAACO,kBAAkB,GAAGlC,kCAA0B,CAACmC,UAAU;EACzE,IAAMC,aAAa,GACjBT,YAAY,CAACU,iBAAiB,CAACC,OAAO,GAAG,CAAC,IAC1CR,GAAG,GAAGH,YAAY,CAACU,iBAAiB,CAACC,OAAO;EAE9C,IAAMC,cAAc,GAClBZ,YAAY,CAACU,iBAAiB,CAACG,4BAA4B,GAAG,CAAC,IAC/DV,GAAG,GAAGH,YAAY,CAACU,iBAAiB,CAACG,4BAA4B;EAEnE,IAAAC,eAAA,GAAmCnC,cAAc,CAC/CqB,YAAY,CAACU,iBAAiB,CAAC9B,QAAQ,EACvCoB,YAAY,CAACU,iBAAiB,CAAC7B,YAAY,CAC5C;IAHOD,QAAQ,GAAAkC,eAAA,CAARlC,QAAQ;IAAEC,YAAY,GAAAiC,eAAA,CAAZjC,YAAY;EAI9B,IAAAkC,aAAA,GAAmD9B,YAAY,CAC7De,YAAY,CAACU,iBAAiB,CAAC9B,QAAQ,EACvCM,MAAM,EACNC,gBAAgB,CACjB;IAJOG,uBAAuB,GAAAyB,aAAA,CAAvBzB,uBAAuB;IAAEC,aAAa,GAAAwB,aAAA,CAAbxB,aAAa;EAK9C,IAAAyB,WAAA,GAAkCvB,UAAU,CAC1CO,YAAY,CAACU,iBAAiB,CAAC9B,QAAQ,EACvCoB,YAAY,CAACU,iBAAiB,CAAC7B,YAAY,EAC3Ca,YAAY,EACZP,gBAAgB,CACjB;IALOW,qBAAqB,GAAAkB,WAAA,CAArBlB,qBAAqB;EAO7B,IAAMmB,mBAAmB,GAAG7D,IAAI,CAAC8D,GAAG,CAAC9E,KAAK,CACxC,IAAI,EACJ4D,YAAY,CAACmB,QAAQ,CAAC1D,GAAG,CAAC,UAAC2D,OAAO;IAAA,OAAK,CAAAA,OAAO,oBAAPA,OAAO,CAAEC,QAAQ,KAAI,CAAC;IAAC,CAC/D;EACD,IAAMC,qBAAqB,GAAGlE,IAAI,CAAC8D,GAAG,CAAC9E,KAAK,CAC1C,IAAI,EACJ4D,YAAY,CAACmB,QAAQ,CAAC1D,GAAG,CAAC,UAAC2D,OAAO;IAAA,OAAK,CAAAA,OAAO,oBAAPA,OAAO,CAAEG,UAAU,KAAI,CAAC;IAAC,CACjE;EACD,IAAMC,qBAAqB,GAAGpE,IAAI,CAAC8D,GAAG,CAAC9E,KAAK,CAC1C,IAAI,EACJ4D,YAAY,CAACmB,QAAQ,CAAC1D,GAAG,CAAC,UAAC2D,OAAO;IAAA,OAAK,CAAAA,OAAO,oBAAPA,OAAO,CAAEK,WAAW,KAAI,CAAC;IAAC,CAClE;EACD,IAAMC,oBAAoB,GAAGtE,IAAI,CAAC8D,GAAG,CAAC9E,KAAK,CACzC,IAAI,EACJ4D,YAAY,CAACmB,QAAQ,CAAC1D,GAAG,CAAC,UAAC2D,OAAO;IAChC,IAAI,CAAC,EAACA,OAAO,YAAPA,OAAO,CAAEG,UAAU,GAAE;MACzB,IAAIH,OAAO,CAACC,QAAQ,IAAI,CAAC,IAAID,OAAO,CAACO,KAAK,KAAKrD,oBAAY,CAACsD,OAAO,EAAE;QACnE,OAAOR,OAAO,CAACS,cAAc;OAC9B,MAAM,IACLT,OAAO,CAACC,QAAQ,GAAG,CAAC,IACpBD,OAAO,CAACO,KAAK,KAAKrD,oBAAY,CAACsD,OAAO,EACtC;QACA,OAAOR,OAAO,CAACC,QAAQ,GAAGD,OAAO,CAACU,KAAK,GAAGV,OAAO,CAACW,WAAW;OAC9D,MAAM;QACL,OAAO,CAAC;;KAEX,MAAM;MACL,OAAO,CAAC;;GAEX,CAAC,CACH;EAED,IAAMC,yBAAyB,GAAG5E,IAAI,CAAC8D,GAAG,CAAC9E,KAAK,CAC9C,IAAI,EACJ4D,YAAY,CAACmB,QAAQ,CAAC1D,GAAG,CAAC,UAAC2D,OAAO;IAChC,IAAIA,OAAO,YAAPA,OAAO,CAAEO,KAAK,IAAIP,OAAO,CAACO,KAAK,KAAKrD,oBAAY,CAAC2D,OAAO,EAAE;MAC5D,OAAOb,OAAO,CAACS,cAAc;KAC9B,MAAM,IAAIT,OAAO,YAAPA,OAAO,CAAEO,KAAK,IAAIP,OAAO,CAACO,KAAK,KAAKrD,oBAAY,CAAC4D,MAAM,EAAE;MAClE,OAAOd,OAAO,CAACC,QAAQ,GAAGD,OAAO,CAACU,KAAK,GAAGV,OAAO,CAACW,WAAW;KAC9D,MAAM;MACL,OAAO,CAAC;;GAEX,CAAC,CACH;EAED,IAAMI,mBAAmB,GAAGnC,YAAY,CAACmB,QAAQ,CAACiB,KAAK,CACrD,UAAChB,OAAO;IAAA,OAAK,CAAAA,OAAO,oBAAPA,OAAO,CAAEO,KAAK,KAAIP,OAAO,CAACO,KAAK,KAAKrD,oBAAY,CAAC+D,QAAQ;IACvE;EACD,IAAMC,mBAAmB,GAAGtC,YAAY,CAACmB,QAAQ,CAACiB,KAAK,CACrD,UAAChB,OAAO;IAAA,OAAK,CAAAA,OAAO,oBAAPA,OAAO,CAAEO,KAAK,KAAIP,OAAO,CAACO,KAAK,KAAKrD,oBAAY,CAACiE,SAAS;IACxE;EACD,IAAMC,kBAAkB,GAAGxC,YAAY,CAACmB,QAAQ,CAACiB,KAAK,CACpD,UAAChB,OAAO;IAAA,OAAK,CAAAA,OAAO,oBAAPA,OAAO,CAAEO,KAAK,KAAIP,OAAO,CAACO,KAAK,KAAKrD,oBAAY,CAACsD,OAAO;IACtE;EAED,IAAMa,UAAU,GACdzC,YAAY,CAAC0C,UAAU,KAAKtE,0BAAkB,CAACmE,SAAS,IACxDD,mBAAmB;EAErB,IAAMK,SAAS,GACb3C,YAAY,CAAC0C,UAAU,KAAKtE,0BAAkB,CAACwD,OAAO,IACtDY,kBAAkB;EAEpB,IAAMI,cAAc,GAAGtC,eAAe,IAAI,CAACG,aAAa,IAAI,CAACgC,UAAU;EAEvE,IAAMI,cAAc,GAClBpC,aAAa,KACZ5B,YAAY,GAAGD,QAAQ,GAAGkB,qBAAqB,IAC7CjB,YAAY,KAAK,CAAC,IAAID,QAAQ,KAAK,CAAE,CAAC;EAE3C,IAAMkE,gBAAgB,GACpBxC,eAAe,IACfG,aAAa,IACbG,cAAc,IACdZ,YAAY,CAACU,iBAAiB,CAACqC,gBAAgB,IAC/C/C,YAAY,CAACgD,WAAW,GAAG,CAAC,IAC5B7C,GAAG,GAAGH,YAAY,CAACgD,WAAW,GAAG/C,cAAc;EAEjD,IAAMgD,kBAAkB,GACtBxC,aAAa,IACbG,cAAc,IACd,CAACiC,cAAc,IACf7C,YAAY,CAAC0C,UAAU,KAAKtE,0BAAkB,CAACiE,QAAQ,IACvD,CAACI,UAAU;EAEb,IAAMS,gBAAgB,GACpBD,kBAAkB,IAAI9C,GAAG,GAAGc,mBAAmB,GAAGf,oBAAoB;EAExE,IAAMiD,kBAAkB,GACtB1C,aAAa,IACbG,cAAc,IACd,CAACiC,cAAc,IACf7C,YAAY,CAAC0C,UAAU,KAAKtE,0BAAkB,CAACiE,QAAQ,IACvD,CAACI,UAAU,IACXN,mBAAmB,IACnB,CAACQ,SAAS;EAEZ,IAAIS,gBAAgB,GAAG,IAAI;EAC3B,IACEpD,YAAY,CAAC0C,UAAU,KAAKtE,0BAAkB,CAACiF,IAAI,IACnDrD,YAAY,CAAC0C,UAAU,KAAKtE,0BAAkB,CAAC6D,OAAO,EACtD;IACAmB,gBAAgB,GAAG,KAAK;GACzB,MAAM,IAAIX,UAAU,EAAE;IACrBW,gBAAgB,GAAG,KAAK;GACzB,MAAM,IAAIP,cAAc,EAAE;IACzBO,gBAAgB,GAAG,KAAK;GACzB,MAAM,IAAID,kBAAkB,EAAE;IAC7BC,gBAAgB,GAAG,KAAK;GACzB,MAAM,IAAIT,SAAS,EAAE;IACpBS,gBAAgB,GAAG,KAAK;;EAG1B,OAAO;IACLxE,QAAQ,EAARA,QAAQ;IACRC,YAAY,EAAZA,YAAY;IACZS,uBAAuB,EAAvBA,uBAAuB;IACvBC,aAAa,EAAbA,aAAa;IACbO,qBAAqB,EAArBA,qBAAqB;IACrBQ,eAAe,EAAfA,eAAe;IACfsC,cAAc,EAAdA,cAAc;IACdnC,aAAa,EAAbA,aAAa;IACbG,cAAc,EAAdA,cAAc;IACdiC,cAAc,EAAdA,cAAc;IACd5B,mBAAmB,EAAnBA,mBAAmB;IACnBO,qBAAqB,EAArBA,qBAAqB;IACrBF,qBAAqB,EAArBA,qBAAqB;IACrBI,oBAAoB,EAApBA,oBAAoB;IACpBM,yBAAyB,EAAzBA,yBAAyB;IACzBG,mBAAmB,EAAnBA,mBAAmB;IACnBG,mBAAmB,EAAnBA,mBAAmB;IACnBE,kBAAkB,EAAlBA,kBAAkB;IAClBC,UAAU,EAAVA,UAAU;IACVE,SAAS,EAATA,SAAS;IACTS,gBAAgB,EAAhBA,gBAAgB;IAChBN,gBAAgB,EAAhBA,gBAAgB;IAChBG,kBAAkB,EAAlBA,kBAAkB;IAClBC,gBAAgB,EAAhBA,gBAAgB;IAChBC,kBAAkB,EAAlBA;GACD;AACH;AAEA,SAAgBG,gBAAgBA,CAAAC,KAAA;MAAMC,IAAI,GAAAC,QAAA,MAAAC,yBAAA,CAAAH,KAAA,GAAAA,KAAA;EACxC,IAAAI,qBAAA,GAYI5D,0BAA0B,CAACyD,IAAI,CAAC;IAXlC5E,QAAQ,GAAA+E,qBAAA,CAAR/E,QAAQ;IACRC,YAAY,GAAA8E,qBAAA,CAAZ9E,YAAY;IACZU,aAAa,GAAAoE,qBAAA,CAAbpE,aAAa;IACbO,qBAAqB,GAAA6D,qBAAA,CAArB7D,qBAAqB;IACrB8C,cAAc,GAAAe,qBAAA,CAAdf,cAAc;IACdnC,aAAa,GAAAkD,qBAAA,CAAblD,aAAa;IACboC,cAAc,GAAAc,qBAAA,CAAdd,cAAc;IACdF,SAAS,GAAAgB,qBAAA,CAAThB,SAAS;IACTR,mBAAmB,GAAAwB,qBAAA,CAAnBxB,mBAAmB;IACnBM,UAAU,GAAAkB,qBAAA,CAAVlB,UAAU;IACVU,kBAAkB,GAAAQ,qBAAA,CAAlBR,kBAAkB;EAGpB,IACE,CAACV,UAAU,IACXe,IAAI,CAACxD,YAAY,CAACO,kBAAkB,KAClClC,kCAA0B,CAACmC,UAAU,IACvCgD,IAAI,CAACxD,YAAY,CAAC0C,UAAU,IAAItE,0BAAkB,CAACwF,MAAM,EACzD;IACA,OAAOrF,qBAAa,CAAC0D,OAAO;GAC7B,MAAM,IACLW,cAAc,IACd9H,SAAS,CAAC0I,IAAI,CAACxD,YAAY,CAAC6D,iBAAiB,CAAC,CAAC7I,OAAO,EACtD;IACA,OAAOuD,qBAAa,CAACqF,MAAM;GAC5B,MAAM,IACLnD,aAAa,IACb,CAACgC,UAAU,IACX7D,QAAQ,GAAGC,YAAY,GAAGiB,qBAAqB,IAC/CP,aAAa,IACb,CAAC4C,mBAAmB,IACpB,CAACQ,SAAS,EACV;IACA,OAAOpE,qBAAa,CAACuF,OAAO;GAC7B,MAAM,IAAIjB,cAAc,IAAI,CAACJ,UAAU,EAAE;IACxC,OAAOlE,qBAAa,CAACwF,QAAQ;GAC9B,MAAM,IAAItB,UAAU,EAAE;IACrB,OAAOlE,qBAAa,CAACyF,QAAQ;GAC9B,MAAM,IAAIb,kBAAkB,EAAE;IAC7B,OAAO5E,qBAAa,CAAC8D,QAAQ;GAC9B,MAAM;IACL,OAAO9D,qBAAa,CAACqD,OAAO;;AAEhC;AAEA,SAASqC,iBAAiBA,CAACC,QAAkB;EAC3C,IAAAC,sBAAA,GASIpE,0BAA0B,CAAC;MAC7BC,YAAY,EAAEkE,QAAQ,CAACV,IAAI;MAC3BtE,MAAM,EAAEgF,QAAQ,CAACE,MAAM,CAAClF,MAAM;MAC9BQ,YAAY,EAAEwE,QAAQ,CAACE,MAAM,CAAC1E,YAAY;MAC1CP,gBAAgB,EAAE+E,QAAQ,CAAC/E,gBAAgB;MAC3Cc,cAAc,EAAEiE,QAAQ,CAACG,OAAO,CAACpE,cAAc;MAC/CC,oBAAoB,EAAEgE,QAAQ,CAACG,OAAO,CAACnE;KACxC,CAAC;IAfAO,aAAa,GAAA0D,sBAAA,CAAb1D,aAAa;IACbH,eAAe,GAAA6D,sBAAA,CAAf7D,eAAe;IACfqC,SAAS,GAAAwB,sBAAA,CAATxB,SAAS;IACTrB,qBAAqB,GAAA6C,sBAAA,CAArB7C,qBAAqB;IACrBE,qBAAqB,GAAA2C,sBAAA,CAArB3C,qBAAqB;IACrBE,oBAAoB,GAAAyC,sBAAA,CAApBzC,oBAAoB;IACpBc,kBAAkB,GAAA2B,sBAAA,CAAlB3B,kBAAkB;IAClBC,UAAU,GAAA0B,sBAAA,CAAV1B,UAAU;EAUZ,IAAIyB,QAAQ,CAACvC,KAAK,KAAKpD,qBAAa,CAAC0D,OAAO,IAAI,CAACU,SAAS,IAAI,CAACF,UAAU,EAAE;IACzE,OAAOyB,QAAQ,CAACV,IAAI,CAACc,YAAY;GAClC,MAAM,IACLJ,QAAQ,CAACV,IAAI,CAACjD,kBAAkB,KAC9BlC,kCAA0B,CAACmC,UAAU,IACvC,CAACmC,SAAS,IACV,CAACF,UAAU,EACX;IACA,OACEyB,QAAQ,CAACV,IAAI,CAACc,YAAY,GAAGJ,QAAQ,CAACE,MAAM,CAACG,yBAAyB;GAEzE,MAAM,IACLzJ,SAAS,CAACoJ,QAAQ,CAACV,IAAI,CAACK,iBAAiB,CAAC,CAAC7I,OAAO,IAClD,CAACsF,eAAe,IAChB,CAACqC,SAAS,IACV,CAACF,UAAU,EACX;IACA,OAAOyB,QAAQ,CAACV,IAAI,CAACgB,oBAAoB;GAC1C,MAAM,IAAI,CAAC/D,aAAa,IAAIH,eAAe,IAAI,CAACqC,SAAS,IAAI,CAACF,UAAU,EAAE;IACzE,OAAOyB,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAAC+D,SAAS;GACjD,MAAM,IACLnE,eAAe,IACfG,aAAa,IACbyD,QAAQ,CAACvC,KAAK,KAAKpD,qBAAa,CAAC8D,QAAQ,IACzC,CAACM,SAAS,IACV,CAACF,UAAU,EACX;IACA,OAAOyB,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACC,OAAO,GAAG,CAAC,GAC9CuD,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACC,OAAO,GACvCuD,QAAQ,CAACV,IAAI,CAACc,YAAY,GAAGJ,QAAQ,CAACE,MAAM,CAACG,yBAAyB;GAC3E,MAAM,IAAIL,QAAQ,CAACvC,KAAK,KAAKpD,qBAAa,CAACwF,QAAQ,EAAE;IACpD,OAAOG,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACC,OAAO;GAC/C,MAAM,IAAIuD,QAAQ,CAACvC,KAAK,KAAKpD,qBAAa,CAAC8D,QAAQ,EAAE;IACpD,OAAOf,qBAAqB;GAC7B,MAAM,IAAI4C,QAAQ,CAACvC,KAAK,KAAKpD,qBAAa,CAACyF,QAAQ,EAAE;IACpD,OAAOxC,qBAAqB,GAAG0C,QAAQ,CAACV,IAAI,CAACkB,UAAU,GACnDlD,qBAAqB,GACrB0C,QAAQ,CAACV,IAAI,CAACkB,UAAU;GAC7B,MAAM,IACLR,QAAQ,CAACV,IAAI,CAACd,UAAU,KAAKtE,0BAAkB,CAACiE,QAAQ,IACxDG,kBAAkB,EAClB;IACA,OAAOd,oBAAoB;GAC5B,MAAM;IACL,OAAOwC,QAAQ,CAACV,IAAI,CAACc,YAAY,GAAGJ,QAAQ,CAACG,OAAO,CAACxC,cAAc;;AAEvE;AAEA,SAAgB8C,iBAAiBA,CAC/BT,QAAkB,EAClBU,SAAiB,EACjBC,aAAqB;EAErB,IAAM1E,GAAG,GAAGC,KAAK,EAAE,CAACC,IAAI,EAAE;EAE1B,IAAAyE,sBAAA,GAMI/E,0BAA0B,CAAC;MAC7BC,YAAY,EAAEkE,QAAQ,CAACV,IAAI;MAC3BtE,MAAM,EAAEgF,QAAQ,CAACE,MAAM,CAAClF,MAAM;MAC9BQ,YAAY,EAAEwE,QAAQ,CAACE,MAAM,CAAC1E,YAAY;MAC1CP,gBAAgB,EAAE+E,QAAQ,CAAC/E,gBAAgB;MAC3Cc,cAAc,EAAEiE,QAAQ,CAACG,OAAO,CAACpE,cAAc;MAC/CC,oBAAoB,EAAEgE,QAAQ,CAACG,OAAO,CAACnE;KACxC,CAAC;IAZAI,eAAe,GAAAwE,sBAAA,CAAfxE,eAAe;IACfG,aAAa,GAAAqE,sBAAA,CAAbrE,aAAa;IACbG,cAAc,GAAAkE,sBAAA,CAAdlE,cAAc;IACdK,mBAAmB,GAAA6D,sBAAA,CAAnB7D,mBAAmB;IACnBe,yBAAyB,GAAA8C,sBAAA,CAAzB9C,yBAAyB;EAU3B,IAAA+C,gBAAA,GAAmCpG,cAAc,CAACiG,SAAS,EAAEC,aAAa,CAAC;IAAnEjG,QAAQ,GAAAmG,gBAAA,CAARnG,QAAQ;IAAEC,YAAY,GAAAkG,gBAAA,CAAZlG,YAAY;EAC9B,IAAAmG,cAAA,GAA0B/F,YAAY,CACpC2F,SAAS,EACTV,QAAQ,CAACE,MAAM,CAAClF,MAAM,EACtBgF,QAAQ,CAAC/E,gBAAgB,CAC1B;IAJOI,aAAa,GAAAyF,cAAA,CAAbzF,aAAa;EAKrB,IAAA0F,YAAA,GAAkCxF,UAAU,CAC1CmF,SAAS,EACTC,aAAa,EACbX,QAAQ,CAACE,MAAM,CAAC1E,YAAY,EAC5BwE,QAAQ,CAAC/E,gBAAgB,CAC1B;IALOW,qBAAqB,GAAAmF,YAAA,CAArBnF,qBAAqB;EAO7B,IAAMoF,gBAAgB,GACpBrG,YAAY,GAAGD,QAAQ,GAAGkB,qBAAqB,IAC9CjB,YAAY,KAAK,CAAC,IAAID,QAAQ,KAAK,CAAE,IACtC,CAACW,aAAa;EAEhB,IAAM4F,uBAAuB,GAC3B7E,eAAe,IACfG,aAAa,IACbG,cAAc,IACd,CAACsE,gBAAgB,IACjBhB,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACqC,gBAAgB,IAChDmB,QAAQ,CAACV,IAAI,CAACR,WAAW,GAAG,CAAC,IAC7B7C,GAAG,GAAG+D,QAAQ,CAACV,IAAI,CAACR,WAAW,GAAGkB,QAAQ,CAACG,OAAO,CAACpE,cAAc;EAEnE,IAAMmF,uBAAuB,GAC3BlB,QAAQ,CAACV,IAAI,CAACd,UAAU,KAAKtE,0BAAkB,CAACiE,QAAQ,IACxDlC,GAAG,GAAGc,mBAAmB,GAAGiD,QAAQ,CAACG,OAAO,CAACnE,oBAAoB;EAEnE,IAAMmF,iBAAiB,GACrBnB,QAAQ,CAACV,IAAI,CAACR,WAAW,GAAG,CAAC,IAAI/B,mBAAmB,KAAK,CAAC,GACtDiD,QAAQ,CAACV,IAAI,CAACR,WAAW,GAAGkB,QAAQ,CAACG,OAAO,CAACpE,cAAc,GAC3DiE,QAAQ,CAACV,IAAI,CAACR,WAAW,GAAG,CAAC,IAAI/B,mBAAmB,GAAG,CAAC,GACxDA,mBAAmB,GAAGiD,QAAQ,CAACG,OAAO,CAACnE,oBAAoB,GAC3D,CAAC;EAEP,IACEC,GAAG,IACH+D,QAAQ,CAACV,IAAI,CAACc,YAAY,GAAGJ,QAAQ,CAACE,MAAM,CAACG,yBAAyB,EACtE;IACA,OAAO;MACLe,cAAc,EAAE7G,8BAAsB,CAACmF,MAAM;MAC7C2B,0BAA0B,EACxBrB,QAAQ,CAACV,IAAI,CAACc,YAAY,GAAGJ,QAAQ,CAACE,MAAM,CAACG;KAChD;GACF,MAAM,IACLjE,eAAe,IACf,CAACG,aAAa,IACd7B,QAAQ,GAAGC,YAAY,GAAGiB,qBAAqB,IAC/CP,aAAa,EACb;IACA,OAAO;MACL+F,cAAc,EAAE7G,8BAAsB,CAACqF,OAAO;MAC9CyB,0BAA0B,EAAErB,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACC;KAC7D;GACF,MAAM,IAAIuE,gBAAgB,IAAI5E,eAAe,IAAI,CAACG,aAAa,EAAE;IAChE,OAAO;MACL6E,cAAc,EAAE7G,8BAAsB,CAACsF,QAAQ;MAC/CwB,0BAA0B,EAAErB,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACC;KAC7D;GACF,MAAM,IAAIwE,uBAAuB,IAAI,CAACC,uBAAuB,EAAE;IAC9D,OAAO;MACLE,cAAc,EAAE7G,8BAAsB,CAAC+G,gBAAgB;MACvDD,0BAA0B,EAAEF;KAC7B;GACF,MAAM,IAAID,uBAAuB,EAAE;IAClC,OAAO;MACLE,cAAc,EAAE7G,8BAAsB,CAACgH,gBAAgB;MACvDF,0BAA0B,EAAEF;KAC7B;GACF,MAAM;IACL,OAAO;MACLC,cAAc,EAAE7G,8BAAsB,CAACmD,OAAO;MAC9C2D,0BAA0B,EACxBrB,QAAQ,CAACV,IAAI,CAACd,UAAU,KAAKtE,0BAAkB,CAACiE,QAAQ,GACpDL,yBAAyB,GACzBkC,QAAQ,CAACV,IAAI,CAACc,YAAY,GAAGJ,QAAQ,CAACG,OAAO,CAACxC;KACrD;;AAEL;AAEA,SAAgB6D,eAAeA,CAACxB,QAAkB;EAChD,IAAM/D,GAAG,GAAGC,KAAK,EAAE,CAACC,IAAI,EAAE;EAE1B,IAAAsF,sBAAA,GASI5F,0BAA0B,CAAC;MAC7BC,YAAY,EAAEkE,QAAQ,CAACV,IAAI;MAC3BtE,MAAM,EAAEgF,QAAQ,CAACE,MAAM,CAAClF,MAAM;MAC9BQ,YAAY,EAAEwE,QAAQ,CAACE,MAAM,CAAC1E,YAAY;MAC1CP,gBAAgB,EAAE+E,QAAQ,CAAC/E,gBAAgB;MAC3Cc,cAAc,EAAEiE,QAAQ,CAACG,OAAO,CAACpE,cAAc;MAC/CC,oBAAoB,EAAEgE,QAAQ,CAACG,OAAO,CAACnE;KACxC,CAAC;IAfAI,eAAe,GAAAqF,sBAAA,CAAfrF,eAAe;IACfG,aAAa,GAAAkF,sBAAA,CAAblF,aAAa;IACbG,cAAc,GAAA+E,sBAAA,CAAd/E,cAAc;IACdiC,cAAc,GAAA8C,sBAAA,CAAd9C,cAAc;IACdI,kBAAkB,GAAA0C,sBAAA,CAAlB1C,kBAAkB;IAClBH,gBAAgB,GAAA6C,sBAAA,CAAhB7C,gBAAgB;IAChBI,gBAAgB,GAAAyC,sBAAA,CAAhBzC,gBAAgB;IAChBjC,mBAAmB,GAAA0E,sBAAA,CAAnB1E,mBAAmB;EAUrB,IAAI,CAAC4B,cAAc,EAAE;IACnB,IACE1C,GAAG,GACD+D,QAAQ,CAACV,IAAI,CAACc,YAAY,GACxBJ,QAAQ,CAACE,MAAM,CAACG,yBAAyB,IAC7C,CAACjE,eAAe,IAChB,CAACG,aAAa,IACd,CAACG,cAAc,EACf;MACA,OAAOlC,4BAAoB,CAACkH,qBAAqB;KAClD,MAAM,IAAItF,eAAe,IAAIG,aAAa,IAAI,CAACG,cAAc,EAAE;MAC9D,OAAOlC,4BAAoB,CAACmH,kBAAkB;KAC/C,MAAM,IACLvF,eAAe,IACfG,aAAa,IACbG,cAAc,IACdsD,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACqC,gBAAgB,IAChDmB,QAAQ,CAACV,IAAI,CAACR,WAAW,IAAI,CAAC,EAC9B;MACA,OAAOtE,4BAAoB,CAACoH,oBAAoB;KACjD,MAAM,IACLhD,gBAAgB,IAChBoB,QAAQ,CAACV,IAAI,CAACd,UAAU,KAAKtE,0BAAkB,CAACiE,QAAQ,EACxD;MACA,OAAO3D,4BAAoB,CAACqH,sBAAsB;KACnD,MAAM,IAAI9C,kBAAkB,IAAIhC,mBAAmB,KAAK,CAAC,EAAE;MAC1D,OAAOvC,4BAAoB,CAACsH,oBAAoB;KACjD,MAAM,IAAI9C,gBAAgB,EAAE;MAC3B,OAAOxE,4BAAoB,CAACuH,sBAAsB;KACnD,MAAM;MACL,OAAOC,SAAS;;GAEnB,MAAM;IACL,OAAOA,SAAS;;AAEpB;AAEA,SAAgBC,cAAcA,CAACjC,QAAkB;EAC/C,IAAAkC,sBAAA,GAKIrG,0BAA0B,CAAC;MAC7BC,YAAY,EAAEkE,QAAQ,CAACV,IAAI;MAC3BtE,MAAM,EAAEgF,QAAQ,CAACE,MAAM,CAAClF,MAAM;MAC9BQ,YAAY,EAAEwE,QAAQ,CAACE,MAAM,CAAC1E,YAAY;MAC1CP,gBAAgB,EAAE+E,QAAQ,CAAC/E,gBAAgB;MAC3Cc,cAAc,EAAEiE,QAAQ,CAACG,OAAO,CAACpE,cAAc;MAC/CC,oBAAoB,EAAEgE,QAAQ,CAACG,OAAO,CAACnE;KACxC,CAAC;IAXAtB,QAAQ,GAAAwH,sBAAA,CAARxH,QAAQ;IACRU,uBAAuB,GAAA8G,sBAAA,CAAvB9G,uBAAuB;IACvBT,YAAY,GAAAuH,sBAAA,CAAZvH,YAAY;IACZiB,qBAAqB,GAAAsG,sBAAA,CAArBtG,qBAAqB;EAUvB,IAAMuG,cAAc,GAAGpC,iBAAiB,CAACC,QAAQ,CAAC;EAClD,IAAAoC,kBAAA,GAAuD3B,iBAAiB,CACtET,QAAQ,EACRA,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAAC9B,QAAQ,EACxCsF,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAAC7B,YAAY,CAC7C;IAJOyG,cAAc,GAAAgB,kBAAA,CAAdhB,cAAc;IAAEC,0BAA0B,GAAAe,kBAAA,CAA1Bf,0BAA0B;EAKlD,IAAMgB,YAAY,GAAGb,eAAe,CAACxB,QAAQ,CAAC;EAE9C,IAAMsC,QAAQ,GAAG,IAAIjM,sBAAS,CAAC2J,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAAC9B,QAAQ,CAAC,CAAC6H,IAAI,CAC3EvC,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAAC7B,YAAY,CAC7C;EAED,IAAM6H,gBAAgB,GAAGxC,QAAQ,CAACyC,QAAQ,CACvClJ,GAAG,CAAC,UAACmJ,OAAO;IAAA,OAAKvM,gBAAgB,CAACuM,OAAO,CAACC,UAAU,CAAC,CAAC9H,QAAQ,EAAE;IAAC,CACjE+H,MAAM,CAAC,UAACC,GAAG,EAAEC,KAAK;IAAA,OAAKD,GAAG,GAAGC,KAAK;KAAE,CAAC,CAAC;EAEzC,IAAMC,WAAW,GAAG/C,QAAQ,CAACyC,QAAQ,CAClClJ,GAAG,CAAC,UAACmJ,OAAO;IAAA,OAAKvM,gBAAgB,CAACuM,OAAO,CAACI,KAAK,CAAC,CAACjI,QAAQ,EAAE;IAAC,CAC5D+H,MAAM,CAAC,UAACC,GAAG,EAAEC,KAAK;IAAA,OAAKD,GAAG,GAAGC,KAAK;KAAE,CAAC,CAAC;EAEzC,IAAME,YAAY,GAAGhD,QAAQ,CAACyC,QAAQ;EAEtC,IAAMQ,gBAAgB,GACpB7H,uBAAuB,GAAGT,YAAY,GAAGiB,qBAAqB,GAC1DR,uBAAuB,GAAGT,YAAY,GACtCA,YAAY,GAAGiB,qBAAqB;EAC1C,IAAMsH,oBAAoB,GACxBxI,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAGA,QAAQ,GAAGkB,qBAAqB;EAEvD,IAAMuH,UAAU,GAAGb,QAAQ,CAACc,EAAE,CAAC,CAAC,CAAC,GAC7B,IAAI/M,sBAAS,CAACqE,QAAQ,CAAC,CACpB2I,SAAS,CAACJ,gBAAgB,CAAC,CAC3B9H,YAAY,CAAC,GAAG,CAAC,CACjBN,QAAQ,EAAE,GACb,CAAC;EACL,IAAMyI,cAAc,GAAGhB,QAAQ,CAACc,EAAE,CAAC,CAAC,CAAC,GACjC,IAAI/M,sBAAS,CAACsE,YAAY,CAAC,CACxB0I,SAAS,CAACH,oBAAoB,GAAG,CAAC,GAAGA,oBAAoB,GAAG,CAAC,CAAC,CAC9D/H,YAAY,CAAC,GAAG,CAAC,CACjBN,QAAQ,EAAE,GACb,CAAC;EAEL,OAAO;IACLsI,UAAU,EAAVA,UAAU;IACVzI,QAAQ,EAARA,QAAQ;IACR4I,cAAc,EAAdA,cAAc;IACd3I,YAAY,EAAZA,YAAY;IACZO,cAAc,EAAEE,uBAAuB;IACvCO,YAAY,EAAEC,qBAAqB;IACnCqH,gBAAgB,EAAhBA,gBAAgB;IAChBC,oBAAoB,EAApBA,oBAAoB;IACpBf,cAAc,EAAdA,cAAc;IACdf,cAAc,EAAdA,cAAc;IACdC,0BAA0B,EAA1BA,0BAA0B;IAC1BgB,YAAY,EAAZA,YAAY;IACZG,gBAAgB,EAAhBA,gBAAgB;IAChBO,WAAW,EAAXA,WAAW;IACXQ,UAAU,EAAE9M,WAAW,CACrBuJ,QAAQ,CAACV,IAAI,CAAC9C,iBAAiB,CAACgH,SAAS,CAACT,WAAW,EACrD,EAAE,CACH,CAAClI,QAAQ,EAAE;IACZmI,YAAY,EAAZA;GACD;AACH;;ACplBA;AACA,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,OAAe;EAC1C,QAAQA,OAAO;IACb,KAAK1P,qBAAa,CAACU,OAAO;MACxB,OAAO,EAAE;IACX,KAAKV,qBAAa,CAAC2P,aAAa;MAC9B,OAAO,CAAC;IACV,KAAK3P,qBAAa,CAAC4P,MAAM;MACvB,OAAO,CAAC;IACV,KAAK5P,qBAAa,CAAC6P,OAAO;MACxB,OAAO,CAAC;IACV;MACE,OAAO,EAAE;;AAEf,CAAC;AAED,SAAsBC,yBAAyBA,CAAAjM,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAgM,0BAAA,CAAA7L,KAAA,OAAAC,SAAA;AAAA;AAmF9C,SAAA4L;EAAAA,0BAAA,GAAA3L,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAnFM,SAAAmB,QACLiK,OAAe,EACfM,eAAuB,EACvBC,QAA+C;IAAA,IAAAC,WAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,gBAAA,EAAAC,kBAAA,EAAAjN,YAAA,EAAAkN,oBAAA,EAAAC,cAAA,EAAAC,sBAAA,EAAAC,mBAAA,EAAAC,cAAA,EAAAC,cAAA;IAAA,OAAAvM,mBAAA,GAAAQ,IAAA,UAAAc,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;QAAA;UAEzCiL,WAAW,GAAG,GAAG;UACjBC,cAAc,GAAG,EAAE;UAErBC,cAAc,GAAG,CAAC;UAClBC,gBAAgB,GAAGZ,mBAAmB,CAACC,OAAO,CAAC;UAAA9J,QAAA,CAAAX,IAAA;UAAA,OAElBgL,QAAQ,CAACY,cAAc,EAAE;QAAA;UAApDP,kBAAkB,GAAA1K,QAAA,CAAAE,IAAA;UAAAF,QAAA,CAAAX,IAAA;UAAA,OACCgL,QAAQ,CAACa,QAAQ,CAACR,kBAAkB,CAAC;QAAA;UAA1DjN,YAAY,GAAAuC,QAAA,CAAAE,IAAA;UAAA,MAEZkK,eAAe,GAAG3M,YAAY,CAAC0N,SAAS;YAAAnL,QAAA,CAAAX,IAAA;YAAA;;UAAA,MACpC,IAAI+L,KAAK,CAAC,oCAAoC,CAAC;QAAA;;UAInDT,oBAAoB,GAAGrL,IAAI,CAAC8D,GAAG,CACjC,CAAC,EACDsH,kBAAkB,GAChBpL,IAAI,CAAC+L,KAAK,CAAC,CAAC5N,YAAY,CAAC0N,SAAS,GAAGf,eAAe,IAAIK,gBAAgB,CAAC,CAC5E;UAAAzK,QAAA,CAAAX,IAAA;UAAA,OAE0BgL,QAAQ,CAACa,QAAQ,CAACP,oBAAoB,CAAC;QAAA;UAA9DC,cAAc,GAAA5K,QAAA,CAAAE,IAAA;UAEd2K,sBAAsB,GAAGpN,YAAY,CAAC0N,SAAS;UAC/CL,mBAAmB,GAAGJ,kBAAkB;UAE5C,GAAG;YACDF,cAAc,EAAE;WACjB,QAAYlL,IAAI,CAACgM,GAAG,CAACV,cAAc,CAACO,SAAS,GAAGf,eAAe,CAAC,GACjEE,WAAW,GAAGG,gBAAgB,IAChCD,cAAc,GAAGD,cAAc;;QAE7B;UAAA,MAEEjL,IAAI,CAACgM,GAAG,CAACV,cAAc,CAACO,SAAS,GAAGf,eAAe,CAAC,GAClDE,WAAW,GAAGG,gBAAgB,IAChCD,cAAc,GAAGD,cAAc;YAAAvK,QAAA,CAAAX,IAAA;YAAA;;;UAG/BoL,gBAAgB,GACd,CAACG,cAAc,CAACO,SAAS,GAAGN,sBAAsB,KACjDF,oBAAoB,GAAGG,mBAAmB,CAAC;UAE9CD,sBAAsB,GAAGD,cAAc,CAACO,SAAS;UACjDL,mBAAmB,GAAGF,cAAc,CAACW,MAAM;;UAG3CZ,oBAAoB,GAAGrL,IAAI,CAAC8D,GAAG,CAC7B,CAAC,EACDuH,oBAAoB,GAClBrL,IAAI,CAAC+L,KAAK,CACR,CAACT,cAAc,CAACO,SAAS,GAAGf,eAAe,IAAIK,gBAAgB,CAChE,CACJ;;UAEDzK,QAAA,CAAAX,IAAA;UAAA,OACuBgL,QAAQ,CAACa,QAAQ,CAACP,oBAAoB,CAAC;QAAA;UAA9DC,cAAc,GAAA5K,QAAA,CAAAE,IAAA;UAEdsK,cAAc,EAAE;UAACxK,QAAA,CAAAX,IAAA;UAAA;QAAA;UAAA,MAGfmL,cAAc,KAAKD,cAAc;YAAAvK,QAAA,CAAAX,IAAA;YAAA;;UAAA,MAC7B,IAAI+L,KAAK,CAAC,gDAAgD,CAAC;QAAA;;UAI/DL,cAAc,GAAGH,cAAc,CAACW,MAAM,GAAG,CAAC;UAC1CP,cAAc,GAAGJ,cAAc,CAACW,MAAM,GAAGjB,WAAW,GAAG,CAAC;UAG5D,IAAIM,cAAc,CAACO,SAAS,GAAGf,eAAe,EAAE;YAC9CW,cAAc,GAAGH,cAAc,CAACW,MAAM,GAAGjB,WAAW,GAAG,CAAC;YACxDU,cAAc,GAAGJ,cAAc,CAACW,MAAM;;UACvC,OAAAvL,QAAA,CAAAC,MAAA,WAEM;YACL8K,cAAc,EAAdA,cAAc;YACdC,cAAc,EAAdA;WACD;QAAA;QAAA;UAAA,OAAAhL,QAAA,CAAAG,IAAA;;OAAAN,OAAA;GACF;EAAA,OAAAsK,0BAAA,CAAA7L,KAAA,OAAAC,SAAA;AAAA;;SCpGqBiN,iBAAiBA,CAAAvN,EAAA,EAAAC,GAAA;EAAA,OAAAuN,kBAAA,CAAAnN,KAAA,OAAAC,SAAA;AAAA;AAsCtC,SAAAkN;EAAAA,kBAAA,GAAAjN,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAtCM,SAAAmB,QACL6L,iBAAwC,EACxCC,sBAA8B;IAAA,IAAAC,YAAA,EAAAxO,SAAA,EAAAyO,kBAAA,EAAAC,OAAA,EAAA/M,CAAA,EAAAgN,YAAA,EAAAzF,MAAA;IAAA,OAAA7H,mBAAA,GAAAQ,IAAA,UAAAc,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;QAAA;UAExBuM,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UAAE5L,QAAA,CAAAX,IAAA;UAAA,OACLqM,iBAAiB,CAACM,YAAY,CACpDL,sBAAsB,EACtBC,YAAY,CACb;QAAA;UAHKxO,SAAS,GAAA4C,QAAA,CAAAE,IAAA;UAKT2L,kBAAkB,GAAG;YACzBxK,gBAAgB,EAAEjE,SAAS,CAACiE,gBAAgB,CAACvE,QAAQ,EAAE;YACvDqF,cAAc,EAAE/E,SAAS,CAAC+E,cAAc,CAAClB,QAAQ,EAAE;YACnD8C,cAAc,EAAE3G,SAAS,CAAC2G,cAAc,CAAC9C,QAAQ,EAAE;YACnDgL,eAAe,EAAE7O,SAAS,CAAC6O,eAAe,CAACnP,QAAQ;WACpD;UAEKgP,OAAO,GAAmB,EAAE;UAElC,KAAS/M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6M,YAAY,CAACM,MAAM,EAAEnN,CAAC,EAAE,EAAE;YACtCgN,YAAY,GAAG3O,SAAS,CAAC+O,aAAa,CAACpN,CAAC,CAAC;YAEzCuH,MAAM,GAAiB;cAC3B8F,WAAW,EAAEL,YAAY,CAACK,WAAW;cACrCC,cAAc,EAAEN,YAAY,CAACzF,MAAM,CAAC+F,cAAc;cAClDjL,MAAM,EAAE2K,YAAY,CAACzF,MAAM,CAACgG,YAAY,CAACrL,QAAQ,EAAE,IAAI,GAAG;cAC1DW,YAAY,EAAEmK,YAAY,CAACzF,MAAM,CAACiG,iBAAiB,CAACtL,QAAQ,EAAE,IAAI,EAAE;cACpEwF,yBAAyB,EAAEsF,YAAY,CAACzF,MAAM,CAACG,yBAAyB;cACxE+F,mBAAmB,EAAET,YAAY,CAACzF,MAAM,CAACkG,mBAAmB,CAACvL,QAAQ;aACtE;YAED6K,OAAO,CAACW,IAAI,CAACnG,MAAM,CAAC;;UACrB,OAAAtG,QAAA,CAAAC,MAAA,WAEM;YACL4L,kBAAkB,EAAlBA,kBAAkB;YAClBC,OAAO,EAAPA;WACD;QAAA;QAAA;UAAA,OAAA9L,QAAA,CAAAG,IAAA;;OAAAN,OAAA;GACF;EAAA,OAAA4L,kBAAA,CAAAnN,KAAA,OAAAC,SAAA;AAAA;;ACrC8D,SAEhDmO,wBAAwBA,CAAAzO,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAgC,GAAA;EAAA,OAAAuM,yBAAA,CAAArO,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAoO;EAAAA,yBAAA,GAAAnO,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAvC,SAAAmB,QACE9B,UAAkB,EAClBF,QAAgB,EAChB+O,kBAA2C,EAC3CC,yBAAiC,EACjC/C,OAAe;IAAA,IAAAgD,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAAc,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;QAAA;UAAAW,QAAA,CAAAX,IAAA;UAAA,OAEMuN,kBAAkB,CAACG,WAAW,CACjDH,kBAAkB,CAACI,OAAO,CAACC,cAAc,EAAE,EAC3ClP,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAA9M,QAAA,CAAAE,IAAA;UAAA,OAAAF,QAAA,CAAAC,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACfC,SAAS,EAAED,KAAK,CAACE,IAAI,CAACD,SAAS;cAC/BzD,OAAO,EAAPA,OAAO;cACP2D,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD,WAAW;cAC9BT,kBAAkB,EAAEC;aACrB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAA7M,QAAA,CAAAG,IAAA;;OAAAN,OAAA;GACN;EAAA,OAAA8M,yBAAA,CAAArO,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsBmP,kBAAkBA,CAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA;EAAA,OAAAC,mBAAA,CAAA1P,KAAA,OAAAC,SAAA;AAAA;AAuBxC;AAAA,SAAAyP;EAAAA,mBAAA,GAAAxP,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAvBO,SAAAuP,SACLlQ,UAAkB,EAClBF,QAAgB,EAChB+O,kBAA2C,EAC3CC,yBAAiC,EACjC/C,OAAe;IAAA,IAAAlL,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAAiP,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/O,IAAA,GAAA+O,SAAA,CAAA9O,IAAA;QAAA;UAETT,YAAY;YAAA,IAAAgB,IAAA,GAAApB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,SACnBjB,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAC,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;kBAAA;oBAAAF,SAAA,CAAAE,IAAA;oBAAA,OAETqN,wBAAwB,CACnChP,gBAAgB,EAChBC,cAAc,EACdiP,kBAAkB,EAClBC,yBAAyB,EACzB/C,OAAO,CACR;kBAAA;oBAAA,OAAA3K,SAAA,CAAAc,MAAA,WAAAd,SAAA,CAAAe,IAAA;kBAAA;kBAAA;oBAAA,OAAAf,SAAA,CAAAgB,IAAA;;iBAAAxB,QAAA;aACF;YAAA,gBAXKC,YAAYA,CAAAwP,IAAA,EAAAC,IAAA;cAAA,OAAAzO,IAAA,CAAAtB,KAAA,OAAAC,SAAA;;;UAAA,OAAA4P,SAAA,CAAAlO,MAAA,WAaXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAuP,SAAA,CAAAhO,IAAA;;OAAA8N,QAAA;GACxE;EAAA,OAAAD,mBAAA,CAAA1P,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGc+P,wBAAwBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,yBAAA,CAAApQ,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAmQ;EAAAA,yBAAA,GAAAlQ,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAvC,SAAAiQ,SACE5Q,UAAkB,EAClBF,QAAgB,EAChB+Q,OAAwB;IAAA,IAAA9B,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAA4P,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA1P,IAAA,GAAA0P,SAAA,CAAAzP,IAAA;QAAA;UAAAyP,SAAA,CAAAzP,IAAA;UAAA,OAEHuP,OAAO,CAAC7B,WAAW,CACtC6B,OAAO,CAAC5B,OAAO,CAAC+B,eAAe,EAAE,EACjChR,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAAgC,SAAA,CAAA5O,IAAA;UAAA,OAAA4O,SAAA,CAAA7O,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACf0B,UAAU,EAAE1B,KAAK,CAACE,IAAI,CAACwB,UAAU,CAAC/N,QAAQ,EAAE;cAC5CwM,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD;aACpB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAAyB,SAAA,CAAA3O,IAAA;;OAAAwO,QAAA;GACN;EAAA,OAAAD,yBAAA,CAAApQ,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsB0Q,kBAAkBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,mBAAA,CAAA/Q,KAAA,OAAAC,SAAA;AAAA;AAmBxC;AAAA,SAAA8Q;EAAAA,mBAAA,GAAA7Q,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAnBO,SAAA4Q,SACLvR,UAAkB,EAClBF,QAAgB,EAChB+Q,OAAwB;IAAA,IAAAhQ,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAAsQ,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApQ,IAAA,GAAAoQ,SAAA,CAAAnQ,IAAA;QAAA;UAElBT,YAAY;YAAA,IAAA6G,KAAA,GAAAjH,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA+Q,SACnB/R,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAyQ,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAvQ,IAAA,GAAAuQ,SAAA,CAAAtQ,IAAA;kBAAA;oBAAAsQ,SAAA,CAAAtQ,IAAA;oBAAA,OAETiP,wBAAwB,CACnC5Q,gBAAgB,EAChBC,cAAc,EACdiR,OAAO,CACR;kBAAA;oBAAA,OAAAe,SAAA,CAAA1P,MAAA,WAAA0P,SAAA,CAAAzP,IAAA;kBAAA;kBAAA;oBAAA,OAAAyP,SAAA,CAAAxP,IAAA;;iBAAAsP,QAAA;aACF;YAAA,gBATK7Q,YAAYA,CAAAgR,IAAA,EAAAC,IAAA;cAAA,OAAApK,KAAA,CAAAnH,KAAA,OAAAC,SAAA;;;UAAA,OAAAiR,SAAA,CAAAvP,MAAA,WAWXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAA4Q,SAAA,CAAArP,IAAA;;OAAAmP,QAAA;GACxE;EAAA,OAAAD,mBAAA,CAAA/Q,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGcuR,0BAA0BA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,2BAAA,CAAA5R,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAA2R;EAAAA,2BAAA,GAAA1R,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAzC,SAAAyR,SACEpS,UAAkB,EAClBF,QAAgB,EAChB+Q,OAAwB;IAAA,IAAA9B,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAAmR,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAjR,IAAA,GAAAiR,SAAA,CAAAhR,IAAA;QAAA;UAAAgR,SAAA,CAAAhR,IAAA;UAAA,OAEHuP,OAAO,CAAC7B,WAAW,CACtC6B,OAAO,CAAC5B,OAAO,CAACsD,eAAe,EAAE,EACjCvS,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAAuD,SAAA,CAAAnQ,IAAA;UAAA,OAAAmQ,SAAA,CAAApQ,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACf0B,UAAU,EAAE1B,KAAK,CAACE,IAAI,CAACwB,UAAU,CAAC/N,QAAQ,EAAE;cAC5CwM,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD;aACpB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAAgD,SAAA,CAAAlQ,IAAA;;OAAAgQ,QAAA;GACN;EAAA,OAAAD,2BAAA,CAAA5R,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsBgS,oBAAoBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,qBAAA,CAAArS,KAAA,OAAAC,SAAA;AAAA;AAmB1C;AAAA,SAAAoS;EAAAA,qBAAA,GAAAnS,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAnBO,SAAAkS,SACL7S,UAAkB,EAClBF,QAAgB,EAChB+Q,OAAwB;IAAA,IAAAhQ,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAA4R,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA1R,IAAA,GAAA0R,SAAA,CAAAzR,IAAA;QAAA;UAElBT,YAAY;YAAA,IAAAmS,KAAA,GAAAvS,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAsS,SACnBtT,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAgS,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAA9R,IAAA,GAAA8R,SAAA,CAAA7R,IAAA;kBAAA;oBAAA6R,SAAA,CAAA7R,IAAA;oBAAA,OAETyQ,0BAA0B,CACrCpS,gBAAgB,EAChBC,cAAc,EACdiR,OAAO,CACR;kBAAA;oBAAA,OAAAsC,SAAA,CAAAjR,MAAA,WAAAiR,SAAA,CAAAhR,IAAA;kBAAA;kBAAA;oBAAA,OAAAgR,SAAA,CAAA/Q,IAAA;;iBAAA6Q,QAAA;aACF;YAAA,gBATKpS,YAAYA,CAAAuS,IAAA,EAAAC,IAAA;cAAA,OAAAL,KAAA,CAAAzS,KAAA,OAAAC,SAAA;;;UAAA,OAAAuS,SAAA,CAAA7Q,MAAA,WAWXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAkS,SAAA,CAAA3Q,IAAA;;OAAAyQ,QAAA;GACxE;EAAA,OAAAD,qBAAA,CAAArS,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGc8S,8BAA8BA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,+BAAA,CAAAnT,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAkT;EAAAA,+BAAA,GAAAjT,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA7C,SAAAgT,UACE3T,UAAkB,EAClBF,QAAgB,EAChB8T,aAAuC;IAAA,IAAA7E,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAA2S,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAzS,IAAA,GAAAyS,UAAA,CAAAxS,IAAA;QAAA;UAAAwS,UAAA,CAAAxS,IAAA;UAAA,OAElBsS,aAAa,CAAC5E,WAAW,CAC5C4E,aAAa,CAAC3E,OAAO,CAAC8E,mBAAmB,EAAE,EAC3C/T,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAA+E,UAAA,CAAA3R,IAAA;UAAA,OAAA2R,UAAA,CAAA5R,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACf0B,UAAU,EAAE1B,KAAK,CAACE,IAAI,CAACwB,UAAU,CAAC/N,QAAQ,EAAE;cAC5CwM,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD;aACpB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAAwE,UAAA,CAAA1R,IAAA;;OAAAuR,SAAA;GACN;EAAA,OAAAD,+BAAA,CAAAnT,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsBwT,wBAAwBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,yBAAA,CAAA7T,KAAA,OAAAC,SAAA;AAAA;AAmB9C;AAAA,SAAA4T;EAAAA,yBAAA,GAAA3T,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAnBO,SAAA0T,UACLrU,UAAkB,EAClBF,QAAgB,EAChB8T,aAAuC;IAAA,IAAA/S,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAAoT,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAlT,IAAA,GAAAkT,UAAA,CAAAjT,IAAA;QAAA;UAEjCT,YAAY;YAAA,IAAA2T,KAAA,GAAA/T,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA8T,UACnB9U,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAwT,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAAtT,IAAA,GAAAsT,UAAA,CAAArT,IAAA;kBAAA;oBAAAqT,UAAA,CAAArT,IAAA;oBAAA,OAETgS,8BAA8B,CACzC3T,gBAAgB,EAChBC,cAAc,EACdgU,aAAa,CACd;kBAAA;oBAAA,OAAAe,UAAA,CAAAzS,MAAA,WAAAyS,UAAA,CAAAxS,IAAA;kBAAA;kBAAA;oBAAA,OAAAwS,UAAA,CAAAvS,IAAA;;iBAAAqS,SAAA;aACF;YAAA,gBATK5T,YAAYA,CAAA+T,IAAA,EAAAC,IAAA;cAAA,OAAAL,KAAA,CAAAjU,KAAA,OAAAC,SAAA;;;UAAA,OAAA+T,UAAA,CAAArS,MAAA,WAWXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAA0T,UAAA,CAAAnS,IAAA;;OAAAiS,SAAA;GACxE;EAAA,OAAAD,yBAAA,CAAA7T,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGcsU,6BAA6BA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,8BAAA,CAAA3U,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAA0U;EAAAA,8BAAA,GAAAzU,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA5C,SAAAwU,UACEnV,UAAkB,EAClBF,QAAgB,EAChB8T,aAAuC;IAAA,IAAA7E,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAAkU,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAhU,IAAA,GAAAgU,UAAA,CAAA/T,IAAA;QAAA;UAAA+T,UAAA,CAAA/T,IAAA;UAAA,OAElBsS,aAAa,CAAC5E,WAAW,CAC5C4E,aAAa,CAAC3E,OAAO,CAACqG,mBAAmB,EAAE,EAC3CtV,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAAsG,UAAA,CAAAlT,IAAA;UAAA,OAAAkT,UAAA,CAAAnT,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACf0B,UAAU,EAAE1B,KAAK,CAACE,IAAI,CAACwB,UAAU,CAAC/N,QAAQ,EAAE;cAC5CwM,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD;aACpB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAA+F,UAAA,CAAAjT,IAAA;;OAAA+S,SAAA;GACN;EAAA,OAAAD,8BAAA,CAAA3U,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsB+U,uBAAuBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,wBAAA,CAAApV,KAAA,OAAAC,SAAA;AAAA;AAmB7C;AAAA,SAAAmV;EAAAA,wBAAA,GAAAlV,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAnBO,SAAAiV,UACL5V,UAAkB,EAClBF,QAAgB,EAChB8T,aAAuC;IAAA,IAAA/S,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAA2U,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAzU,IAAA,GAAAyU,UAAA,CAAAxU,IAAA;QAAA;UAEjCT,YAAY;YAAA,IAAAkV,KAAA,GAAAtV,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAqV,UACnBrW,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAA+U,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAA7U,IAAA,GAAA6U,UAAA,CAAA5U,IAAA;kBAAA;oBAAA4U,UAAA,CAAA5U,IAAA;oBAAA,OAETwT,6BAA6B,CACxCnV,gBAAgB,EAChBC,cAAc,EACdgU,aAAa,CACd;kBAAA;oBAAA,OAAAsC,UAAA,CAAAhU,MAAA,WAAAgU,UAAA,CAAA/T,IAAA;kBAAA;kBAAA;oBAAA,OAAA+T,UAAA,CAAA9T,IAAA;;iBAAA4T,SAAA;aACF;YAAA,gBATKnV,YAAYA,CAAAsV,IAAA,EAAAC,IAAA;cAAA,OAAAL,KAAA,CAAAxV,KAAA,OAAAC,SAAA;;;UAAA,OAAAsV,UAAA,CAAA5T,MAAA,WAWXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAiV,UAAA,CAAA1T,IAAA;;OAAAwT,SAAA;GACxE;EAAA,OAAAD,wBAAA,CAAApV,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGc6V,uBAAuBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,wBAAA,CAAAlW,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAiW;EAAAA,wBAAA,GAAAhW,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtC,SAAA+V,UACE1W,UAAkB,EAClBF,QAAgB,EAChB+Q,OAAwB;IAAA,IAAA9B,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAAyV,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAvV,IAAA,GAAAuV,UAAA,CAAAtV,IAAA;QAAA;UAAAsV,UAAA,CAAAtV,IAAA;UAAA,OAEHuP,OAAO,CAAC7B,WAAW,CACtC6B,OAAO,CAAC5B,OAAO,CAAC4H,cAAc,EAAE,EAChC7W,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAA6H,UAAA,CAAAzU,IAAA;UAAA,OAAAyU,UAAA,CAAA1U,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACf0B,UAAU,EAAE1B,KAAK,CAACE,IAAI,CAACwB,UAAU,CAAC/N,QAAQ,EAAE;cAC5CwM,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD;aACpB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAAsH,UAAA,CAAAxU,IAAA;;OAAAsU,SAAA;GACN;EAAA,OAAAD,wBAAA,CAAAlW,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsBsW,iBAAiBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,kBAAA,CAAA3W,KAAA,OAAAC,SAAA;AAAA;AAmBvC;AAAA,SAAA0W;EAAAA,kBAAA,GAAAzW,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAnBO,SAAAwW,UACLnX,UAAkB,EAClBF,QAAgB,EAChB+Q,OAAwB;IAAA,IAAAhQ,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAAkW,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAhW,IAAA,GAAAgW,UAAA,CAAA/V,IAAA;QAAA;UAElBT,YAAY;YAAA,IAAAyW,KAAA,GAAA7W,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA4W,UACnB5X,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAsW,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAApW,IAAA,GAAAoW,UAAA,CAAAnW,IAAA;kBAAA;oBAAAmW,UAAA,CAAAnW,IAAA;oBAAA,OAET+U,uBAAuB,CAClC1W,gBAAgB,EAChBC,cAAc,EACdiR,OAAO,CACR;kBAAA;oBAAA,OAAA4G,UAAA,CAAAvV,MAAA,WAAAuV,UAAA,CAAAtV,IAAA;kBAAA;kBAAA;oBAAA,OAAAsV,UAAA,CAAArV,IAAA;;iBAAAmV,SAAA;aACF;YAAA,gBATK1W,YAAYA,CAAA6W,IAAA,EAAAC,IAAA;cAAA,OAAAL,KAAA,CAAA/W,KAAA,OAAAC,SAAA;;;UAAA,OAAA6W,UAAA,CAAAnV,MAAA,WAWXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAwW,UAAA,CAAAjV,IAAA;;OAAA+U,SAAA;GACxE;EAAA,OAAAD,kBAAA,CAAA3W,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGcoX,uBAAuBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,wBAAA,CAAA3X,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAA0X;EAAAA,wBAAA,GAAAzX,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtC,SAAAwX,UACEnY,UAAkB,EAClBF,QAAgB,EAChB+O,kBAA2C,EAC3CC,yBAAiC,EACjC/C,OAAe;IAAA,IAAAgD,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAAkX,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAhX,IAAA,GAAAgX,UAAA,CAAA/W,IAAA;QAAA;UAAA+W,UAAA,CAAA/W,IAAA;UAAA,OAEMuN,kBAAkB,CAACG,WAAW,CACjDH,kBAAkB,CAACI,OAAO,CAACqJ,aAAa,EAAE,EAC1CtY,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAAsJ,UAAA,CAAAlW,IAAA;UAAA,OAAAkW,UAAA,CAAAnW,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACfC,SAAS,EAAED,KAAK,CAACE,IAAI,CAACD,SAAS;cAC/BzD,OAAO,EAAPA,OAAO;cACP2D,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD,WAAW;cAC9BT,kBAAkB,EAAEC;aACrB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAAuJ,UAAA,CAAAjW,IAAA;;OAAA+V,SAAA;GACN;EAAA,OAAAD,wBAAA,CAAA3X,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsB+X,iBAAiBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,kBAAA,CAAAtY,KAAA,OAAAC,SAAA;AAAA;AAuBvC;AAAA,SAAAqY;EAAAA,kBAAA,GAAApY,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAvBO,SAAAmY,UACL9Y,UAAkB,EAClBF,QAAgB,EAChB+O,kBAA2C,EAC3CC,yBAAiC,EACjC/C,OAAe;IAAA,IAAAlL,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAA6X,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA3X,IAAA,GAAA2X,UAAA,CAAA1X,IAAA;QAAA;UAETT,YAAY;YAAA,IAAAoY,KAAA,GAAAxY,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAuY,UACnBvZ,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAiY,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAA/X,IAAA,GAAA+X,UAAA,CAAA9X,IAAA;kBAAA;oBAAA8X,UAAA,CAAA9X,IAAA;oBAAA,OAETsW,uBAAuB,CAClCjY,gBAAgB,EAChBC,cAAc,EACdiP,kBAAkB,EAClBC,yBAAyB,EACzB/C,OAAO,CACR;kBAAA;oBAAA,OAAAqN,UAAA,CAAAlX,MAAA,WAAAkX,UAAA,CAAAjX,IAAA;kBAAA;kBAAA;oBAAA,OAAAiX,UAAA,CAAAhX,IAAA;;iBAAA8W,SAAA;aACF;YAAA,gBAXKrY,YAAYA,CAAAwY,IAAA,EAAAC,IAAA;cAAA,OAAAL,KAAA,CAAA1Y,KAAA,OAAAC,SAAA;;;UAAA,OAAAwY,UAAA,CAAA9W,MAAA,WAaXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAmY,UAAA,CAAA5W,IAAA;;OAAA0W,SAAA;GACxE;EAAA,OAAAD,kBAAA,CAAAtY,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGc+Y,yBAAyBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,0BAAA,CAAAtZ,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAqZ;EAAAA,0BAAA,GAAApZ,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAxC,SAAAmZ,UACE9Z,UAAkB,EAClBF,QAAgB,EAChB+O,kBAA2C,EAC3CC,yBAAiC,EACjC/C,OAAe;IAAA,IAAAgD,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAA6Y,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAA3Y,IAAA,GAAA2Y,UAAA,CAAA1Y,IAAA;QAAA;UAAA0Y,UAAA,CAAA1Y,IAAA;UAAA,OAEMuN,kBAAkB,CAACG,WAAW,CACjDH,kBAAkB,CAACI,OAAO,CAACgL,eAAe,EAAE,EAC5Cja,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAAiL,UAAA,CAAA7X,IAAA;UAAA,OAAA6X,UAAA,CAAA9X,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACfC,SAAS,EAAED,KAAK,CAACE,IAAI,CAACD,SAAS;cAC/BzD,OAAO,EAAPA,OAAO;cACP2D,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD,WAAW;cAC9BT,kBAAkB,EAAEC;aACrB;WAAC,CAAC;QAAA;QAAA;UAAA,OAAAkL,UAAA,CAAA5X,IAAA;;OAAA0X,SAAA;GACN;EAAA,OAAAD,0BAAA,CAAAtZ,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsB0Z,mBAAmBA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,oBAAA,CAAAja,KAAA,OAAAC,SAAA;AAAA;AAqBxC,SAAAga;EAAAA,oBAAA,GAAA/Z,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CArBM,SAAA8Z,UACLza,UAAkB,EAClBF,QAAgB,EAChB+O,kBAA2C,EAC3CC,yBAAiC,EACjC/C,OAAe;IAAA,IAAAlL,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAAwZ,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAtZ,IAAA,GAAAsZ,UAAA,CAAArZ,IAAA;QAAA;UAETT,YAAY;YAAA,IAAA+Z,KAAA,GAAAna,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAka,UACnBlb,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAA4Z,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAA1Z,IAAA,GAAA0Z,UAAA,CAAAzZ,IAAA;kBAAA;oBAAAyZ,UAAA,CAAAzZ,IAAA;oBAAA,OAETiY,yBAAyB,CACpC5Z,gBAAgB,EAChBC,cAAc,EACdiP,kBAAkB,EAClBC,yBAAyB,EACzB/C,OAAO,CACR;kBAAA;oBAAA,OAAAgP,UAAA,CAAA7Y,MAAA,WAAA6Y,UAAA,CAAA5Y,IAAA;kBAAA;kBAAA;oBAAA,OAAA4Y,UAAA,CAAA3Y,IAAA;;iBAAAyY,SAAA;aACF;YAAA,gBAXKha,YAAYA,CAAAma,IAAA,EAAAC,IAAA;cAAA,OAAAL,KAAA,CAAAra,KAAA,OAAAC,SAAA;;;UAAA,OAAAma,UAAA,CAAAzY,MAAA,WAaXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAA8Z,UAAA,CAAAvY,IAAA;;OAAAqY,SAAA;GACxE;EAAA,OAAAD,oBAAA,CAAAja,KAAA,OAAAC,SAAA;AAAA;;SChVe0a,6BAA6BA,CAAC7S,QAAuB;EACnE,IAAM/D,GAAG,GAAGC,KAAK,EAAE,CAACC,IAAI,EAAE;EAC1B,IAAI6D,QAAQ,CAACxD,iBAAiB,CAAC+D,SAAS,KAAK,CAAC,EAAE;IAC9C,OAAOpG,kCAA0B,CAACmC,UAAU;GAC7C,MAAM,IAAIL,GAAG,IAAI+D,QAAQ,CAACxD,iBAAiB,CAACC,OAAO,EAAE;IACpD,OAAOtC,kCAA0B,CAACuF,MAAM;GACzC,MAAM,IAAIM,QAAQ,CAACxD,iBAAiB,CAACsW,8BAA8B,KAAK,CAAC,EAAE;IAC1E,OAAO3Y,kCAA0B,CAAC4Y,QAAQ;GAC3C,MAAM;IACL,OAAO5Y,kCAA0B,CAAC6Y,gBAAgB;;AAEtD;AAEA,SAAgBC,uBAAuBA,CACrCC,EAAU,EACV1W,iBAAgE;EAEhE,OAAO;IACL0W,EAAE,EAAEA,EAAE;IACNxY,QAAQ,EAAE8B,iBAAiB,CAACV,YAAY,CAACpB,QAAQ,CAAChE,QAAQ,EAAE;IAC5DiE,YAAY,EAAE6B,iBAAiB,CAACV,YAAY,CAACnB,YAAY,CAACjE,QAAQ,EAAE;IACpE6J,SAAS,EAAE/D,iBAAiB,CAACV,YAAY,CAACyE,SAAS;IACnD9D,OAAO,EAAED,iBAAiB,CAACV,YAAY,CAACW,OAAO;IAC/CqW,8BAA8B,EAC5BtW,iBAAiB,CAACV,YAAY,CAACgX,8BAA8B,CAACjY,QAAQ,EAAE;IAC1E8B,4BAA4B,EAC1BH,iBAAiB,CAACV,YAAY,CAACa,4BAA4B;IAC7DwW,WAAW,EACT,CAAA3W,iBAAiB,oBAAjBA,iBAAiB,CAAE4W,UAAU,CAACC,mBAAmB,KACjDtc,aAAM,CAACC,SAAS,CAACC,QAAQ;IAC3Bqc,QAAQ,EAAE9W,iBAAiB,CAAC8W,QAAQ;IACpCzU,gBAAgB,EAAErC,iBAAiB,CAACV,YAAY,CAAC+C,gBAAgB;IACjE0U,YAAY,EAAE/W,iBAAiB,CAACV,YAAY,CAAC0X,mBAAmB,CAAC3Y,QAAQ,EAAE;IAC3E2I,SAAS,EAAE;MACTiQ,OAAO,EAAEjX,iBAAiB,CAACgH,SAAS,CAACiQ,OAAO;MAC5C1Q,WAAW,EAAEvG,iBAAiB,CAACgH,SAAS,CAACT,WAAW,CAACrM,QAAQ;KAC9D;IACDgd,YAAY,EAAElX,iBAAiB,CAACkX,YAAY;IAC5CC,gBAAgB,EAAEnX,iBAAiB,CAACmX;GACrC;AACH;AAEA,SAAgBC,uBAAuBA,CACrCC,SAAyB,EACzBC,2BAA4E,EAC5EC,GAAa;EAEb,IAAMC,aAAa,GAAoB,EAAE;EAEzCD,GAAG,CAACE,OAAO,CAAC,UAACf,EAAE;IACb,IAAMgB,OAAO,GAAGL,SAAS,CAACM,IAAI,CAAC,UAACnU,QAAQ;MAAA,OAAK,CAAAA,QAAQ,oBAARA,QAAQ,CAAEkT,EAAE,MAAKA,EAAE;MAAC;IACjE,IAAIgB,OAAO,EAAE;MACX,IAAM1X,iBAAiB,GACrBsX,2BAA2B,CAACK,IAAI,CAC9B,UAACnU,QAAQ;QAAA,OAAKA,QAAQ,CAAClE,YAAY,CAACoX,EAAE,CAACrY,QAAQ,EAAE,KAAKqZ,OAAO,CAAChB,EAAE;QACjE,IAAIY,2BAA2B,CAAC,CAAC,CAAC;MAErC,IAAMhY,YAAY,GAAG;QACnBoX,EAAE,EAAEgB,OAAO,CAAChB,EAAE;QACdjN,cAAc,EACZ,EAACzJ,iBAAiB,oBAAjBA,iBAAiB,CAAE4W,UAAU,CAACnN,cAAc,KAC7CiO,OAAO,CAACjO,cAAc;QACxB7F,YAAY,EAAE8T,OAAO,CAAC9T,YAAY;QAClC4F,WAAW,EAAEkO,OAAO,CAAClO,WAAW;QAChCxH,UAAU,EAAE0V,OAAO,CAAC1V,UAAU;QAC9BM,WAAW,EAAEoV,OAAO,CAACpV,WAAW;QAChCsV,QAAQ,EAAEF,OAAO,CAACE,QAAQ;QAC1BC,eAAe,EAAEH,OAAO,CAACG,eAAe;QACxC1U,iBAAiB,EAAEuU,OAAO,CAACvU,iBAAiB;QAC5C2U,OAAO,EAAEJ,OAAO,CAACI,OAAO;QACxB9T,UAAU,EAAE0T,OAAO,CAAC1T,UAAU;QAC9BF,oBAAoB,EAAE4T,OAAO,CAAC5T,oBAAoB;QAClDiU,aAAa,EAAEL,OAAO,CAACK,aAAa;QACpC/X,iBAAiB,EAAEyW,uBAAuB,CACxCiB,OAAO,CAAChB,EAAE,EACV1W,iBAAiB,CAClB;QACDgY,SAAS,EAAEN,OAAO,CAACM;OACpB;MAEDR,aAAa,CAAC3N,IAAI,CAACvK,YAAY,CAAC;;GAEnC,CAAC;EAEF,OAAOkY,aAAa;AACtB;AAEA,SAAgBS,wBAAwBA,CACtCC,qBAAmE,EACnEZ,2BAA4E,EAC5EC,GAAa,EACbS,SAAmB;EAEnB,IAAMR,aAAa,GAAoB,EAAE;EAAC,IAAAW,KAAA,YAAAA,QAEL;IACnC,IAAMT,OAAO,GAAGQ,qBAAqB,CAAC/b,CAAC,CAAC;IAExC,IAAM6D,iBAAiB,GACrBsX,2BAA2B,CAACK,IAAI,CAC9B,UAACnU,QAAQ;MAAA,OACPA,QAAQ,CAAClE,YAAY,CAACoX,EAAE,CAACrY,QAAQ,EAAE,KAAKqZ,OAAO,CAAChB,EAAE,CAACrY,QAAQ,EAAE;MAChE,IAAIiZ,2BAA2B,CAACnb,CAAC,CAAC;IAErC,IAAMmD,YAAY,GAAG;MACnBoX,EAAE,EAAEgB,OAAO,CAAChB,EAAE,CAACrY,QAAQ,EAAE;MACzBoL,cAAc,EACZ,EAACzJ,iBAAiB,oBAAjBA,iBAAiB,CAAE4W,UAAU,CAACnN,cAAc,KAC7C,CAACiO,OAAO,CAACpY,YAAY,CAACmK,cAAc;MACtC7F,YAAY,EAAE,CAAC8T,OAAO,CAACpY,YAAY,CAACsE,YAAY;MAChD4F,WAAW,EAAE,CAACkO,OAAO,CAACpY,YAAY,CAACkK,WAAW;MAC9CxH,UAAU,EAAE,CAAC0V,OAAO,CAACpY,YAAY,CAAC2B,KAAK;MACvCqB,WAAW,EAAE,CAACoV,OAAO,CAACpY,YAAY,CAACgD,WAAW;MAC9CsV,QAAQ,EAAEF,OAAO,CAACpY,YAAY,CAACsY,QAAQ;MACvCC,eAAe,EAAEH,OAAO,CAACpY,YAAY,CAACmB,QAAQ,CAAC1D,GAAG,CAAC,UAAC2D,OAAO;QACzD,OAAO;UACLgW,EAAE,EAAEhW,OAAO,CAACiK,SAAS;UACrBzD,OAAO,EAAExG,OAAO,CAAC0X,KAAK,CAAC/Z,QAAQ,EAAE;UACjC2L,kBAAkB,EAAEtJ,OAAO,CAACsJ;SAC7B;OACF,CAAC;MACF7G,iBAAiB,EAAEuU,OAAO,CAACpY,YAAY,CAAC6D,iBAAiB;MACzD2U,OAAO,EAAEJ,OAAO,CAACpY,YAAY,CAACwY,OAAO;MACrC9T,UAAU,EAAE0T,OAAO,CAACpY,YAAY,CAAC+Y,eAAe;MAChDvU,oBAAoB,EAAE4T,OAAO,CAACpY,YAAY,CAACwE,oBAAoB;MAC/DiU,aAAa,EAAEL,OAAO,CAACK,aAAa,CAAC1Z,QAAQ,EAAE;MAC/C2B,iBAAiB,EAAEyW,uBAAuB,CACxCiB,OAAO,CAAChB,EAAE,CAACrY,QAAQ,EAAE,EACrB2B,iBAAiB,CAClB;MACDgY,SAAS,EAAE,CAAC,CAACA;KACd;IAEDR,aAAa,CAAC3N,IAAI,CAACvK,YAAY,CAAC;GACjC;EAvCD,KAAK,IAAInD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGob,GAAG,CAACjO,MAAM,EAAEnN,CAAC,EAAE;IAAAgc,KAAA;;EAyCnC,OAAOX,aAAa;AACtB;;AClJmD,SAEpCc,aAAaA,CAAAjd,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAA+c,cAAA,CAAA7c,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAA4c;EAAAA,cAAA,GAAA3c,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA5B,SAAAmB,QACE8R,aAAuC,EACvC5T,UAAkB,EAClBF,QAAgB,EAChBiM,OAAe;IAAA,IAAAgD,MAAA;IAAA,OAAArO,mBAAA,GAAAQ,IAAA,UAAAc,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;QAAA;UAAAW,QAAA,CAAAX,IAAA;UAAA,OAEMsS,aAAa,CAAC5E,WAAW,CAC5C4E,aAAa,CAAC3E,OAAO,CAACoO,WAAW,EAAE,EACnCrd,UAAU,EACVF,QAAQ,CACT;QAAA;UAJKiP,MAAM,GAAA9M,QAAA,CAAAE,IAAA;UAAA,OAAAF,QAAA,CAAAC,MAAA,WAML6M,MAAM,CACVI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKA,CAAC,CAACC,WAAW,GAAGF,CAAC,CAACE,WAAW;YAAC,CAC7C1N,GAAG,CAAC,UAAC2N,KAAK;YAAA,OAAM;cACf0B,UAAU,EAAE1B,KAAK,CAACE,IAAI,CAACwB,UAAU,CAAC/N,QAAQ,EAAE;cAC5Coa,OAAO,EAAE/N,KAAK,CAACE,IAAI,CAAC8N,KAAK,CAACxe,QAAQ,EAAE;cACpC+c,OAAO,EAAEvM,KAAK,CAACE,IAAI,CAACqM,OAAO;cAC3B1Q,WAAW,EAAEtM,WAAW,CACtByQ,KAAK,CAACE,IAAI,CAACrE,WAAW,CAACrM,QAAQ,EAAE,EACjC,EAAE,CACH,CAACmE,QAAQ,EAAE;cACZwM,eAAe,EAAEH,KAAK,CAACG,eAAe;cACtCJ,WAAW,EAAEC,KAAK,CAACD,WAAW;cAC9BvD,OAAO,EAAPA;aACD;WAAC,CAAC;QAAA;QAAA;UAAA,OAAA9J,QAAA,CAAAG,IAAA;;OAAAN,OAAA;GACN;EAAA,OAAAsb,cAAA,CAAA7c,KAAA,OAAAC,SAAA;AAAA;AAED,SAAsBgd,SAASA,CAAAnb,GAAA,EAAAuN,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAA0N,UAAA,CAAAld,KAAA,OAAAC,SAAA;AAAA;AAoB9B,SAAAid;EAAAA,UAAA,GAAAhd,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CApBM,SAAAuP,SACLpQ,QAAgB,EAChBE,UAAkB,EAClBR,UAAkB,EAClBoU,aAAuC,EACvC7H,OAAe;IAAA,IAAAlL,YAAA;IAAA,OAAAH,mBAAA,GAAAQ,IAAA,UAAAiP,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/O,IAAA,GAAA+O,SAAA,CAAA9O,IAAA;QAAA;UAETT,YAAY;YAAA,IAAAgB,IAAA,GAAApB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,SACnBjB,gBAAwB,EACxBC,cAAsB;cAAA,OAAAc,mBAAA,GAAAQ,IAAA,UAAAC,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;kBAAA;oBAAAF,SAAA,CAAAE,IAAA;oBAAA,OAET6b,aAAa,CACxBvJ,aAAa,EACbjU,gBAAgB,EAChBC,cAAc,EACdmM,OAAO,CACR;kBAAA;oBAAA,OAAA3K,SAAA,CAAAc,MAAA,WAAAd,SAAA,CAAAe,IAAA;kBAAA;kBAAA;oBAAA,OAAAf,SAAA,CAAAgB,IAAA;;iBAAAxB,QAAA;aACF;YAAA,gBAVKC,YAAYA,CAAAmP,IAAA,EAAAQ,IAAA;cAAA,OAAA3O,IAAA,CAAAtB,KAAA,OAAAC,SAAA;;;UAAA,OAAA4P,SAAA,CAAAlO,MAAA,WAYXjC,gBAAgB,CAACD,UAAU,EAAEF,QAAQ,EAAEN,UAAU,EAAEqB,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAuP,SAAA,CAAAhO,IAAA;;OAAA8N,QAAA;GACxE;EAAA,OAAAuN,UAAA,CAAAld,KAAA,OAAAC,SAAA;AAAA;;IC9CYkd,WAAW,GAAG,sBAAsB;AAEjD,SAAgBC,OAAOA,CAACze,IAAY,EAAE0e,OAAe;EACnD,OAAUA,OAAO,SAAI1e,IAAI;AAC3B;AAGA,IAAM2e,QAAQ,GAAqB,EAAE;AAErC,IAAMC,iBAAiB,GAAG,CACxB,oEAAoE,EACpE1e,aAAM,CAACC,SAAS,CAACC,QAAQ,CAC1B;AAED,SAAsBye,mBAAmBA,CAAA7d,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAA2d,oBAAA,CAAAzd,KAAA,OAAAC,SAAA;AAAA;AA8DxC,SAAAwd;EAAAA,oBAAA,GAAAvd,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CA9DM,SAAAmB,QACL5C,IAAY,EACZ0e,OAAO,EACPK,YAAoD,EACpDC,SAAkB;IAAA,IAAAzB,QAAA,EAAA0B,YAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,QAAA,EAAA/W,IAAA;IAAA,OAAAjH,mBAAA,GAAAQ,IAAA,UAAAc,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAZ,IAAA,GAAAY,QAAA,CAAAX,IAAA;QAAA;UAAA,IAFlBsc,OAAO;YAAPA,OAAO,GAAGF,WAAW;;UAIfjB,QAAQ,GAAGvd,IAAI,CAACyf,UAAU,CAAC,IAAI,CAAC,GAClCC,YAAM,CAACC,MAAM,CAACC,MAAM,CAACC,IAAI,UAAQ7f,IAAI,CAAC8f,KAAK,CAAC,CAAC,CAAC,EAAI,KAAK,CAAC,CAAC,GACzD9f,IAAI;UAAA,KAEJ2e,QAAQ,CAACpB,QAAQ,CAAC;YAAAxa,QAAA,CAAAX,IAAA;YAAA;;UAAA,OAAAW,QAAA,CAAAC,MAAA,WAAS2b,QAAQ,CAACpB,QAAQ,CAAC;QAAA;UAAA,KAE7CqB,iBAAiB,CAACmB,IAAI,CAAC,UAACC,CAAC;YAAA,OAAKhgB,IAAI,KAAKggB,CAAC;YAAC;YAAAjd,QAAA,CAAAX,IAAA;YAAA;;UAAA,IACtC,CAAC2c,YAAY;YAAAhc,QAAA,CAAAX,IAAA;YAAA;;UAChB2c,YAAY,CAAC/e,IAAI,EAAEgf,SAAS,CAAC;UAACjc,QAAA,CAAAX,IAAA;UAAA;QAAA;UAAA,MAExB+L,KAAK,CAAC,sCAAsC,CAAC;QAAA;UAAApL,QAAA,CAAAX,IAAA;UAAA;QAAA;UAAAW,QAAA,CAAAX,IAAA;UAAA,OAGhB6d,KAAK,CAACxB,OAAO,CAAClB,QAAQ,EAAEmB,OAAO,CAAC,CAAC;QAAA;UAAhEO,YAAY,GAAAlc,QAAA,CAAAE,IAAA;UAAA,IAEbgc,YAAY,CAACiB,EAAE;YAAAnd,QAAA,CAAAX,IAAA;YAAA;;UAAA,IACb,CAAC2c,YAAY;YAAAhc,QAAA,CAAAX,IAAA;YAAA;;UAChB2c,YAAY,CAAC/e,IAAI,CAAC;UAAC+C,QAAA,CAAAX,IAAA;UAAA;QAAA;UAAA,MAEb+L,KAAK,CAAC,sCAAsC,CAAC;QAAA;UAIjD+Q,KAAK,GAAGD,YAAY,CAACC,KAAK,EAAE;UAAAnc,QAAA,CAAAZ,IAAA;UAAAY,QAAA,CAAAX,IAAA;UAAA,OAES6c,YAAY,CAACkB,IAAI,EAAE;QAAA;UAAtDhB,QAAQ,GAAApc,QAAA,CAAAE,IAAA;UAAAmc,OAAA,GAEMgB,MAAM,CAACjB,QAAQ,CAACkB,WAAW,CAAC,EAAxChB,OAAO,GAAAD,OAAA,CAAPC,OAAO;UAEfV,QAAQ,CAACpB,QAAQ,CAAC,GAAG;YACnB+C,KAAK,EAAEnB,QAAQ,CAACmB,KAAK;YACrBC,GAAG,EAAEpB,QAAQ,CAACoB,GAAG;YACjBC,gBAAgB,EAAExgB,IAAI;YACtBygB,MAAM,EAAEtB,QAAQ,CAACsB,MAAM;YACvBC,WAAW,EAAEvB,QAAQ,CAACuB,WAAW;YACjCC,gBAAgB,EAAExB,QAAQ,CAACwB,gBAAgB;YAC3CpD,QAAQ,EAARA,QAAQ;YACR8C,WAAW,EAAEhB;WACd;UAACtc,QAAA,CAAAX,IAAA;UAAA;QAAA;UAAAW,QAAA,CAAAZ,IAAA;UAAAY,QAAA,CAAA6d,EAAA,GAAA7d,QAAA;UAAAA,QAAA,CAAAX,IAAA;UAAA,OAEiB8c,KAAK,CAACI,IAAI,EAAE;QAAA;UAAzBA,IAAI,GAAAvc,QAAA,CAAAE,IAAA;UAAAsc,QAAA,GACgBa,MAAM,CAACd,IAAI,CAAC,EAA9BD,QAAO,GAAAE,QAAA,CAAPF,OAAO,EAAE5W,IAAI,GAAA8W,QAAA,CAAJ9W,IAAI;UACrBkW,QAAQ,CAACpB,QAAQ,CAAC,GAAG;YACnB+C,KAAK,EAAE7X,IAAI,CAAC6X,KAAK;YACjBC,GAAG,EAAE9X,IAAI,CAAC8X,GAAG;YACbC,gBAAgB,EAAExgB,IAAI;YACtBygB,MAAM,EAAEhY,IAAI,CAACgY,MAAM;YACnBC,WAAW,EAAEjY,IAAI,CAACiY,WAAW;YAC7BC,gBAAgB,EAAElY,IAAI,CAACkY,gBAAgB;YACvCpD,QAAQ,EAARA,QAAQ;YACR8C,WAAW,EAAEhB;WACd;QAAC;UAAA,OAAAtc,QAAA,CAAAC,MAAA,WAIC2b,QAAQ,CAACpB,QAAQ,CAAC;QAAA;QAAA;UAAA,OAAAxa,QAAA,CAAAG,IAAA;;OAAAN,OAAA;GAC1B;EAAA,OAAAkc,oBAAA,CAAAzd,KAAA,OAAAC,SAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}