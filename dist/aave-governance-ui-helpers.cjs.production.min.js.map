{"version":3,"file":"aave-governance-ui-helpers.cjs.production.min.js","sources":["../src/helpers/chains.ts","../src/helpers/appConfig.ts","../src/types.ts","../src/helpers/bignumber.ts","../src/helpers/checkHash.ts","../src/helpers/eventsHelpres.ts","../src/helpers/formatProposal.ts","../src/helpers/getBlockNumberByTimestamp.ts","../src/helpers/getGovCoreConfigs.ts","../src/helpers/getHistoryEvents.ts","../src/helpers/getProposalData.ts","../src/helpers/getProposalEvents.ts","../src/helpers/getProposalMetadata.ts"],"sourcesContent":["export enum ChainIdByName {\n  EthereumMainnet = 1,\n  Polygon = 137,\n  Avalanche = 43114,\n  Binance = 56,\n  Base = 8453,\n  Arbitrum = 42161,\n  Metis = 1088,\n  Optimism = 10,\n  // testnets\n  Goerli = 5,\n  GoerliOptimism = 420,\n  AvalancheFuji = 43113,\n  Sepolia = 11155111,\n  Mumbai = 80001,\n  BnbTest = 97,\n}\n","import {\n  AaveSafetyModule,\n  AaveV3Ethereum,\n  GovernanceV3Arbitrum,\n  GovernanceV3Avalanche,\n  GovernanceV3Base,\n  GovernanceV3Ethereum,\n  GovernanceV3Metis,\n  GovernanceV3Optimism,\n  GovernanceV3Polygon,\n} from '@bgd-labs/aave-address-book';\nimport { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\nexport type CoreNetworkName = 'mainnet' | 'goerli' | 'sepolia';\n\ntype Config = {\n  contractAddress: string;\n  dataHelperContractAddress: string;\n};\n\nexport const govCoreConfig: Record<\n  CoreNetworkName,\n  Config & { votingPortals: Record<number, string> }\n> = {\n  mainnet: {\n    contractAddress: GovernanceV3Ethereum.GOVERNANCE,\n    dataHelperContractAddress: GovernanceV3Ethereum.GOV_DATA_HELPER,\n    votingPortals: {\n      [ChainIdByName.EthereumMainnet]:\n        GovernanceV3Ethereum.VOTING_PORTAL_ETH_ETH,\n      [ChainIdByName.Polygon]: GovernanceV3Ethereum.VOTING_PORTAL_ETH_POL,\n      [ChainIdByName.Avalanche]: GovernanceV3Ethereum.VOTING_PORTAL_ETH_AVAX,\n    },\n  },\n  // testnets\n  goerli: {\n    contractAddress: '0x586207Df62c7D5D1c9dBb8F61EdF77cc30925C4F',\n    dataHelperContractAddress: '0xB84D6c8b2cFC98191a1D6d00B38c1057252d876b',\n    votingPortals: {\n      [ChainIdByName.Goerli]: '0xFf376b6db4AF0d87Dba35860B3B87F526d7879cF',\n    },\n  },\n  sepolia: {\n    contractAddress: '0xc4ABF658C3Dda84225cF8A07d7D5Bb6Aa41d9E59',\n    dataHelperContractAddress: '0x863f9De2f82AB502612E8B7d4f4863c8535cb8cA',\n    votingPortals: {\n      [ChainIdByName.Sepolia]: '0x1079bAa48E56065d43b4344866B187a485cb0A92',\n      [ChainIdByName.AvalancheFuji]:\n        '0x4f47EdF2577995aBd7B875Eed75b3F28a20E696F',\n    },\n  },\n};\n\nexport const payloadsControllerConfig: Record<\n  CoreNetworkName,\n  Record<\n    number,\n    Pick<Config, 'dataHelperContractAddress'> & {\n      contractAddresses: string[];\n      payloadAddress?: string;\n    }\n  >\n> = {\n  mainnet: {\n    [ChainIdByName.EthereumMainnet]: {\n      dataHelperContractAddress: GovernanceV3Ethereum.PC_DATA_HELPER,\n      contractAddresses: [GovernanceV3Ethereum.PAYLOADS_CONTROLLER],\n    },\n    [ChainIdByName.Polygon]: {\n      dataHelperContractAddress: GovernanceV3Polygon.PC_DATA_HELPER,\n      contractAddresses: [GovernanceV3Polygon.PAYLOADS_CONTROLLER],\n    },\n    [ChainIdByName.Avalanche]: {\n      dataHelperContractAddress: GovernanceV3Avalanche.PC_DATA_HELPER,\n      contractAddresses: [GovernanceV3Avalanche.PAYLOADS_CONTROLLER],\n    },\n    [ChainIdByName.Base]: {\n      dataHelperContractAddress: GovernanceV3Base.PC_DATA_HELPER,\n      contractAddresses: [GovernanceV3Base.PAYLOADS_CONTROLLER],\n    },\n    [ChainIdByName.Arbitrum]: {\n      dataHelperContractAddress: GovernanceV3Arbitrum.PC_DATA_HELPER,\n      contractAddresses: [GovernanceV3Arbitrum.PAYLOADS_CONTROLLER],\n    },\n    [ChainIdByName.Metis]: {\n      dataHelperContractAddress: GovernanceV3Metis.PC_DATA_HELPER,\n      contractAddresses: [GovernanceV3Metis.PAYLOADS_CONTROLLER],\n    },\n    [ChainIdByName.Optimism]: {\n      dataHelperContractAddress: GovernanceV3Optimism.PC_DATA_HELPER,\n      contractAddresses: [GovernanceV3Optimism.PAYLOADS_CONTROLLER],\n    },\n  },\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      dataHelperContractAddress: '0xbd2db358f3C82F2883132A6584e22F38A979e768',\n      contractAddresses: ['0x064361B3761CcDd17300146bf58a79d1E570382E'],\n      payloadAddress: '0xf6b9c3fCF7f91817E7bF0efF792BA692c7bd372A', // only for test\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      dataHelperContractAddress: '0x6B9AF21B95FE20b5a878b43670c23124841ec31A',\n      contractAddresses: ['0x7E314a46AA6dF79c51869967B9b8e9f8Bb20781d'],\n      payloadAddress: '0xf19de078dbac9db382caf8015cb208667ec581c0', // only for test\n    },\n    [ChainIdByName.AvalancheFuji]: {\n      dataHelperContractAddress: '0x6B9AF21B95FE20b5a878b43670c23124841ec31A',\n      contractAddresses: ['0x1fad4eac642D8CAFb7fC5d38973D1C2764202da5'],\n      payloadAddress: '0xdf9f39247c553485ac3bf974418947d9b2f969e5', // only for test\n    },\n  },\n};\n\nconst votingMachineConfig: Record<\n  CoreNetworkName,\n  Record<number, Config & { dataWarehouseAddress: string }>\n> = {\n  mainnet: {\n    [ChainIdByName.EthereumMainnet]: {\n      contractAddress: GovernanceV3Ethereum.VOTING_MACHINE,\n      dataHelperContractAddress: GovernanceV3Ethereum.VM_DATA_HELPER,\n      dataWarehouseAddress: GovernanceV3Ethereum.DATA_WAREHOUSE,\n    },\n    [ChainIdByName.Polygon]: {\n      contractAddress: GovernanceV3Polygon.VOTING_MACHINE,\n      dataHelperContractAddress: GovernanceV3Polygon.VM_DATA_HELPER,\n      dataWarehouseAddress: GovernanceV3Polygon.DATA_WAREHOUSE,\n    },\n    [ChainIdByName.Avalanche]: {\n      contractAddress: GovernanceV3Avalanche.VOTING_MACHINE,\n      dataHelperContractAddress: GovernanceV3Avalanche.VM_DATA_HELPER,\n      dataWarehouseAddress: GovernanceV3Avalanche.DATA_WAREHOUSE,\n    },\n  },\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      contractAddress: '0xE8AD5ab6295c16D04257BC6Cd6D447ff4018FF89',\n      dataHelperContractAddress: '0xe10617A1ea760E174E82fBeb38a540d8ACe566f5',\n      dataWarehouseAddress: '0xC946cc6bb934bAf2A539BaB62c647aff09D2e2D8',\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      contractAddress: '0xA1995F1d5A8A247c064a76F336E1C2ecD24Ef0D9',\n      dataHelperContractAddress: '0x133210F3fe2deEB34e65deB6861ee3dF87393977',\n      dataWarehouseAddress: '0xACd2b1bA0B85FaF0f45D4974Ba8ee538E157fBc6',\n    },\n    [ChainIdByName.AvalancheFuji]: {\n      contractAddress: '0x767AA57554690D23D1E0594E8746271C97e1A1e4',\n      dataHelperContractAddress: '0x133210F3fe2deEB34e65deB6861ee3dF87393977',\n      dataWarehouseAddress: '0x2F4bc3128D0D52ef954552FfEC28BC523462dc02',\n    },\n  },\n};\n\nconst govCoreChainId: Record<CoreNetworkName, number> = {\n  mainnet: ChainIdByName.EthereumMainnet,\n  // testnets\n  goerli: ChainIdByName.Goerli,\n  sepolia: ChainIdByName.Sepolia,\n};\n\nconst aditionalsAddresses: Record<CoreNetworkName, Record<string, string>> = {\n  mainnet: {\n    aaveAddress: AaveV3Ethereum.ASSETS.AAVE.UNDERLYING,\n    aAaveAddress: AaveV3Ethereum.ASSETS.AAVE.A_TOKEN,\n    stkAAVEAddress: AaveSafetyModule.STK_AAVE,\n    // for delegation\n    delegationHelper: GovernanceV3Ethereum.META_DELEGATE_HELPER,\n  },\n  // testnets\n  goerli: {\n    aaveAddress: '0xb6D88BfC5b145a558b279cf7692e6F02064889d0',\n    aAaveAddress: '0xD1ff82609FB63A0eee6FE7D2896d80d29491cCCd',\n    stkAAVEAddress: '0x1406A9Ea2B0ec8FD4bCa4F876DAae2a70a9856Ec',\n    delegationHelper: '0x1966133c190475E8385Dc1b4150B5f81c70DC578',\n  },\n  sepolia: {\n    aaveAddress: '0xdaEcee477B931b209e8123401EA37582ACB3811d',\n    aAaveAddress: '0x26aAB2aE39897338c2d91491C46c14a8c2a67919',\n    stkAAVEAddress: '0x354032B31339853A3D682613749F183328d07275',\n    delegationHelper: '0x7cc468E937ec7B06A2816B33AC159BC1273dF4A3',\n  },\n};\n\nexport const payloadsControllerChainIds: Record<CoreNetworkName, number[]> = {\n  mainnet: [\n    ChainIdByName.EthereumMainnet,\n    ChainIdByName.Polygon,\n    ChainIdByName.Avalanche,\n    ChainIdByName.Base,\n    ChainIdByName.Arbitrum,\n    ChainIdByName.Metis,\n    ChainIdByName.Optimism,\n  ],\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia, ChainIdByName.AvalancheFuji],\n};\n\nexport const votingMachineChainIds: Record<CoreNetworkName, number[]> = {\n  mainnet: [\n    ChainIdByName.EthereumMainnet,\n    ChainIdByName.Polygon,\n    ChainIdByName.Avalanche,\n  ],\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia, ChainIdByName.AvalancheFuji],\n};\n\nconst gelatoApiKeys: Record<string, string> = {\n  testnet: 'qGvvlJMoyDKyuMxqJjDwFslpgiBKZCXNXpnSjIxsICY_',\n  mainnet: '', // TODO: need add\n};\n\nexport const appConfigInit = (\n  providers: Record<number, ethers.providers.JsonRpcBatchProvider>,\n  coreNetwork: CoreNetworkName,\n) => {\n  return {\n    providers,\n    govCoreChainId: govCoreChainId[coreNetwork],\n    govCoreConfig: govCoreConfig[coreNetwork],\n    votingMachineConfig: votingMachineConfig[coreNetwork],\n    votingMachineChainIds: votingMachineChainIds[coreNetwork],\n    payloadsControllerConfig: payloadsControllerConfig[coreNetwork],\n    payloadsControllerChainIds: payloadsControllerChainIds[coreNetwork],\n\n    additional: aditionalsAddresses[coreNetwork],\n    gelatoApiKeys,\n  };\n};\n","export interface PayloadForCreation {\n  chain: number;\n  accessLevel: number;\n  payloadsController: string;\n  payloadId: number;\n}\n\nexport enum BasicProposalState {\n  Null,\n  Created,\n  Active,\n  Queued,\n  Executed,\n  Failed,\n  Cancelled,\n  Expired,\n}\n\nexport enum VotingMachineProposalState {\n  NotCreated,\n  Active,\n  Finished,\n  SentToGovernance,\n}\n\nexport enum PayloadState {\n  None,\n  Created,\n  Queued,\n  Executed,\n  Cancelled,\n  Expired,\n}\n\nexport enum ProposalState {\n  Created,\n  Active,\n  Succeed,\n  Defeated,\n  Executed,\n  Expired,\n  Canceled,\n}\n\nexport type VotersData = {\n  proposalId: number;\n  address: string;\n  support: boolean;\n  votingPower: number;\n  transactionHash: string;\n  blockNumber: number;\n  chainId: number;\n  ensName?: string;\n};\n\nexport type InitialProposal = {\n  id: number;\n  votingChainId: number;\n  snapshotBlockHash: string;\n};\n\nexport type VotingMachineData = {\n  id: number;\n  forVotes: string;\n  againstVotes: string;\n  startTime: number;\n  endTime: number;\n  votingClosedAndSentBlockNumber: number;\n  votingClosedAndSentTimestamp: number;\n  l1BlockHash: string;\n  strategy: string;\n  sentToGovernance: boolean;\n  createdBlock: number;\n  votedInfo: {\n    support: boolean;\n    votingPower: string;\n  };\n  votingAssets: string[];\n  hasRequiredRoots: boolean;\n};\n\nexport type Payload = {\n  id: number;\n  chainId: number;\n  maximumAccessLevelRequired: number;\n  state: PayloadState;\n  createdAt: number;\n  queuedAt: number;\n  executedAt: number;\n  cancelledAt: number;\n  expirationTime: number;\n  delay: number;\n  gracePeriod: number;\n  payloadsController: string;\n  actionAddresses: string[];\n};\n\n// type for create payload actions\nexport type PayloadAction = {\n  payloadAddress: string;\n  withDelegateCall: boolean;\n  accessLevel: number;\n  value: number;\n  signature: string;\n  callData?: string;\n};\n\nexport type VotingConfig = {\n  accessLevel: number;\n  quorum: number;\n  differential: number;\n  minPropositionPower: number;\n  coolDownBeforeVotingStart: number;\n  votingDuration: number;\n};\n\nexport type ContractsConstants = {\n  precisionDivider: string;\n  cooldownPeriod: number;\n  expirationTime: number;\n  cancellationFee: string;\n};\n\nexport type InitialPayload = {\n  id: number;\n  chainId: number;\n  payloadsController: string;\n};\n\nexport interface BasicProposal {\n  id: number;\n  votingDuration: number;\n  creationTime: number;\n  accessLevel: number;\n  basicState: BasicProposalState;\n  queuingTime: number;\n  ipfsHash: string;\n  initialPayloads: InitialPayload[];\n  votingMachineData: VotingMachineData;\n  snapshotBlockHash: string;\n  creator: string;\n  canceledAt: number;\n  votingActivationTime: number;\n  votingChainId: number;\n  prerender: boolean;\n}\n\nexport interface ProposalData\n  extends BasicProposal,\n    Pick<ProposalMetadata, 'title'> {\n  payloads: Payload[];\n  votingMachineState: VotingMachineProposalState;\n}\n\ntype BlockHash = string;\nexport type Balance = {\n  blockHash: string;\n  tokenName: string;\n  underlyingAsset: string;\n  value: string;\n  basicValue: string;\n  userBalance: string;\n  isWithDelegatedPower: boolean;\n};\n\nexport type VotingBalance = Record<BlockHash, Balance[]>;\n\nexport interface ProposalWithoutState {\n  data: ProposalData;\n  precisionDivider: string;\n  config: VotingConfig;\n  timings: {\n    cooldownPeriod: number;\n    expirationTime: number;\n    executionPayloadTime: number;\n  };\n  balances: Balance[];\n}\n\nexport interface Proposal extends ProposalWithoutState {\n  state: ProposalState;\n}\n\nexport interface ProposalWithLoadings {\n  loading: boolean;\n  balanceLoading: boolean;\n  proposal: Proposal;\n}\n\nexport interface ProposalWithId extends ProposalWithLoadings {\n  id: number;\n}\n\nexport enum ProposalStateWithName {\n  Created = 'Created',\n  Active = 'Voting',\n  Succeed = 'Passed',\n  Failed = 'Failed',\n  Defeated = 'Failed',\n  Executed = 'Executed',\n  Expired = 'Expired',\n  Canceled = 'Canceled',\n  ActiveAll = 'Active',\n}\n\nexport enum ProposalEstimatedState {\n  Active = 'Will open for voting',\n  Succeed = 'Will pass',\n  Defeated = 'Will fail',\n  ProposalExecuted = 'Proposal will be executed',\n  PayloadsExecuted = 'Payloads will start being executed',\n  Expired = 'Will expire',\n}\n\nexport enum ProposalWaitForState {\n  WaitForActivateVoting = 'Pending voting activation',\n  WaitForCloseVoting = 'Pending voting closure',\n  WaitForQueueProposal = 'Proposal is time-locked',\n  WaitForExecuteProposal = 'Pending proposal execution',\n  WaitForQueuePayloads = 'Payloads are time-locked',\n  WaitForExecutePayloads = 'Pending payloads execution',\n}\n\nexport type ProposalMetadata = {\n  title: string;\n  description: string;\n  shortDescription: string;\n  ipfsHash: string;\n  originalIpfsHash: string;\n  aip: number;\n  discussions: string;\n  author: string;\n};\n\nexport interface FinishedProposalForList\n  extends Pick<ProposalMetadata, 'title'> {\n  id: number;\n  state: ProposalState;\n  finishedTimestamp: number;\n  ipfsHash: string;\n}\n\nexport interface CachedProposalDataItem {\n  proposal: {\n    data: {\n      id: number;\n      finishedTimestamp: number;\n      title: string;\n      ipfsHash: string;\n    };\n    state: ProposalState;\n  };\n}\n\nexport interface CachedProposalDataItemWithId extends CachedProposalDataItem {\n  id: number;\n}\n\nexport interface CachedDetails {\n  payloads: Payload[];\n  ipfs: ProposalMetadata;\n  proposal: BasicProposal;\n}\n","import { BigNumber } from 'bignumber.js';\n\nexport type BigNumberValue = string | number | BigNumber;\n\nexport function valueToBigNumber(amount: BigNumberValue): BigNumber {\n  if (amount instanceof BigNumber) {\n    return amount;\n  }\n\n  return new BigNumber(amount);\n}\n\nexport function normalize(n: BigNumberValue, decimals: number): string {\n  return normalizeBN(n, decimals).toString(10);\n}\n\nexport function normalizeBN(n: BigNumberValue, decimals: number): BigNumber {\n  return valueToBigNumber(n).shiftedBy(decimals * -1);\n}\n","import { ethers } from 'ethers';\n\nexport function checkHash(hash: string) {\n  return {\n    notZero: hash !== ethers.constants.HashZero,\n    zero: hash === ethers.constants.HashZero,\n  };\n}\n","export const blockLimit = 1023;\n\nexport function getBlocksForEvents(\n  currentBlock: number,\n  startBlockNumber: number,\n  endBlockNumber: number | undefined,\n  lastBlockNumber: number | undefined,\n): { startBlock: number; endBlock: number } {\n  const endBlock =\n    endBlockNumber && endBlockNumber > 0 && endBlockNumber < currentBlock\n      ? endBlockNumber\n      : !!lastBlockNumber &&\n        isFinite(lastBlockNumber) &&\n        lastBlockNumber > startBlockNumber &&\n        lastBlockNumber < currentBlock\n      ? lastBlockNumber + 1\n      : currentBlock > startBlockNumber + blockLimit\n      ? startBlockNumber + blockLimit\n      : currentBlock;\n\n  const startBlock =\n    !!lastBlockNumber &&\n    isFinite(lastBlockNumber) &&\n    lastBlockNumber > startBlockNumber &&\n    lastBlockNumber < currentBlock &&\n    lastBlockNumber < endBlock\n      ? lastBlockNumber\n      : startBlockNumber < currentBlock\n      ? startBlockNumber\n      : currentBlock - blockLimit;\n\n  return { startBlock, endBlock };\n}\n\nexport async function getEventsBySteps<T>(\n  startBlock: number,\n  endBlock: number,\n  blockLimit: number,\n  callbackFunc: (startBlock: number, endBlock: number) => Promise<T>,\n) {\n  const blockSteps = Math.ceil((endBlock - startBlock) / blockLimit);\n\n  const eventsCountArray = new Array(blockSteps);\n  for (let i = 0; i < blockSteps; i++) {\n    eventsCountArray[i] = i;\n  }\n\n  const results = await Promise.all(\n    eventsCountArray.map(async (count) => {\n      const startBlockNumber = startBlock + blockLimit * count;\n      const endBlockNumber = startBlock + (blockLimit * count + blockLimit);\n\n      return await callbackFunc(\n        startBlockNumber,\n        endBlock > endBlockNumber ? endBlockNumber : endBlock,\n      );\n    }),\n  );\n\n  return results.flat();\n}\n","import { BigNumber } from 'bignumber.js';\nimport dayjs from 'dayjs';\n\nimport {\n  BasicProposalState,\n  PayloadState,\n  Proposal,\n  ProposalData as BasicProposal,\n  ProposalEstimatedState,\n  ProposalState,\n  ProposalWaitForState,\n  VotingMachineProposalState,\n} from '../types';\nimport { normalizeBN, valueToBigNumber } from './bignumber';\nimport { checkHash } from './checkHash';\n\nexport function normalizeVotes(forVotes: string, againstVotes: string) {\n  const forVotesN = normalizeBN(forVotes, 18).toNumber();\n  const againstVotesN = normalizeBN(againstVotes, 18).toNumber();\n\n  return { forVotes: forVotesN, againstVotes: againstVotesN };\n}\n\nexport function formatQuorum(\n  forVotes: string,\n  quorum: number,\n  precisionDivider: string,\n) {\n  const minQuorumVotes =\n    valueToBigNumber(quorum).multipliedBy(precisionDivider);\n  const normalizeMinQuorumVotes = normalizeBN(minQuorumVotes, 18).toNumber();\n\n  let quorumReached = false;\n  if (valueToBigNumber(forVotes).gte(minQuorumVotes)) {\n    quorumReached = true;\n  }\n\n  return {\n    minQuorumVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n  };\n}\n\nexport function formatDiff(\n  forVotes: string,\n  againstVotes: string,\n  differential: number,\n  precisionDivider: string,\n) {\n  const diff = valueToBigNumber(forVotes).minus(againstVotes);\n  const requiredDiff =\n    valueToBigNumber(differential).multipliedBy(precisionDivider);\n  const normalizeRequiredDiff = normalizeBN(requiredDiff, 18).toNumber();\n\n  return { diff, requiredDiff, normalizeRequiredDiff };\n}\n\ninterface BasicProposalWithConfigsData {\n  proposalData: BasicProposal;\n  quorum: number;\n  differential: number;\n  precisionDivider: string;\n  cooldownPeriod: number;\n  executionPayloadTime: number;\n}\n\nexport function getProposalStepsAndAmounts({\n  proposalData,\n  quorum,\n  differential,\n  precisionDivider,\n  cooldownPeriod,\n  executionPayloadTime,\n}: BasicProposalWithConfigsData) {\n  const now = dayjs().unix();\n\n  const isVotingStarted =\n    proposalData.votingMachineState > VotingMachineProposalState.NotCreated;\n  const isVotingEnded =\n    proposalData.votingMachineData.endTime > 0 &&\n    now > proposalData.votingMachineData.endTime;\n\n  const isVotingClosed =\n    proposalData.votingMachineData.votingClosedAndSentTimestamp > 0 &&\n    now > proposalData.votingMachineData.votingClosedAndSentTimestamp;\n\n  const { forVotes, againstVotes } = normalizeVotes(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n  );\n  const { normalizeMinQuorumVotes, quorumReached } = formatQuorum(\n    proposalData.votingMachineData.forVotes,\n    quorum,\n    precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n    differential,\n    precisionDivider,\n  );\n\n  const lastPayloadQueuedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.queuedAt || 0),\n  );\n  const lastPayloadExecutedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.executedAt || 0),\n  );\n  const lastPayloadCanceledAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.cancelledAt || 0),\n  );\n  const lastPayloadExpiredAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (payload.queuedAt <= 0 && payload.state === PayloadState.Expired) {\n        return payload.expirationTime;\n      } else if (\n        payload.queuedAt > 0 &&\n        payload.state === PayloadState.Expired\n      ) {\n        return payload.queuedAt + payload.delay + payload.gracePeriod;\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const predictPayloadExpiredTime = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (payload?.state && payload.state === PayloadState.Created) {\n        return payload.expirationTime;\n      } else if (payload?.state && payload.state === PayloadState.Queued) {\n        return payload.queuedAt + payload.delay + payload.gracePeriod;\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const allPayloadsExecuted = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Executed,\n  );\n  const allPayloadsCanceled = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Cancelled,\n  );\n  const allPayloadsExpired = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Expired,\n  );\n\n  const isCanceled =\n    proposalData.basicState === BasicProposalState.Cancelled ||\n    allPayloadsCanceled;\n\n  const isExpired =\n    proposalData.basicState === BasicProposalState.Expired ||\n    allPayloadsExpired;\n\n  const isVotingActive = isVotingStarted && !isVotingEnded && !isCanceled;\n\n  const isVotingFailed =\n    isVotingEnded &&\n    (againstVotes >= forVotes || (againstVotes === 0 && forVotes === 0));\n\n  const isProposalQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    proposalData.votingMachineData.sentToGovernance &&\n    proposalData.queuingTime > 0 &&\n    now > proposalData.queuingTime + cooldownPeriod;\n\n  const isProposalExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled;\n\n  const isPayloadsQueued =\n    isProposalExecuted && now > lastPayloadQueuedAt + executionPayloadTime;\n\n  const isPayloadsExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled &&\n    allPayloadsExecuted &&\n    !isExpired;\n\n  let isProposalActive = true;\n  if (\n    proposalData.basicState === BasicProposalState.Null ||\n    proposalData.basicState === BasicProposalState.Created\n  ) {\n    isProposalActive = false;\n  } else if (isCanceled) {\n    isProposalActive = false;\n  } else if (isVotingFailed) {\n    isProposalActive = false;\n  } else if (isPayloadsExecuted) {\n    isProposalActive = false;\n  } else if (isExpired) {\n    isProposalActive = false;\n  }\n\n  return {\n    forVotes,\n    againstVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingStarted,\n    isVotingActive,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    lastPayloadQueuedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExecutedAt,\n    lastPayloadExpiredAt,\n    predictPayloadExpiredTime,\n    allPayloadsExecuted,\n    allPayloadsCanceled,\n    allPayloadsExpired,\n    isCanceled,\n    isExpired,\n    isProposalActive,\n    isProposalQueued,\n    isProposalExecuted,\n    isPayloadsQueued,\n    isPayloadsExecuted,\n  };\n}\n\nexport function getProposalState({ ...data }: BasicProposalWithConfigsData) {\n  const {\n    forVotes,\n    againstVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingActive,\n    isVotingEnded,\n    isVotingFailed,\n    isExpired,\n    allPayloadsExecuted,\n    isCanceled,\n    isPayloadsExecuted,\n  } = getProposalStepsAndAmounts(data);\n\n  if (\n    !isCanceled &&\n    data.proposalData.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    data.proposalData.basicState <= BasicProposalState.Active\n  ) {\n    return ProposalState.Created;\n  } else if (\n    isVotingActive &&\n    checkHash(data.proposalData.snapshotBlockHash).notZero\n  ) {\n    return ProposalState.Active;\n  } else if (\n    isVotingEnded &&\n    !isCanceled &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached &&\n    !allPayloadsExecuted &&\n    !isExpired\n  ) {\n    return ProposalState.Succeed;\n  } else if (isVotingFailed && !isCanceled) {\n    return ProposalState.Defeated;\n  } else if (isCanceled) {\n    return ProposalState.Canceled;\n  } else if (isPayloadsExecuted) {\n    return ProposalState.Executed;\n  } else {\n    return ProposalState.Expired;\n  }\n}\n\nfunction getStateTimestamp(proposal: Proposal) {\n  const {\n    isVotingEnded,\n    isVotingStarted,\n    isExpired,\n    lastPayloadExecutedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExpiredAt,\n    allPayloadsExpired,\n    isCanceled,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (proposal.state === ProposalState.Created && !isExpired && !isCanceled) {\n    return proposal.data.creationTime;\n  } else if (\n    proposal.data.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return (\n      proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n    );\n  } else if (\n    checkHash(proposal.data.snapshotBlockHash).notZero &&\n    !isVotingStarted &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingActivationTime;\n  } else if (!isVotingEnded && isVotingStarted && !isExpired && !isCanceled) {\n    return proposal.data.votingMachineData.startTime;\n  } else if (\n    isVotingStarted &&\n    isVotingEnded &&\n    proposal.state !== ProposalState.Executed &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingMachineData.endTime > 0\n      ? proposal.data.votingMachineData.endTime\n      : proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart;\n  } else if (proposal.state === ProposalState.Defeated) {\n    return proposal.data.votingMachineData.endTime;\n  } else if (proposal.state === ProposalState.Executed) {\n    return lastPayloadExecutedAt;\n  } else if (proposal.state === ProposalState.Canceled) {\n    return lastPayloadCanceledAt > proposal.data.canceledAt\n      ? lastPayloadCanceledAt\n      : proposal.data.canceledAt;\n  } else if (\n    proposal.data.basicState === BasicProposalState.Executed &&\n    allPayloadsExpired\n  ) {\n    return lastPayloadExpiredAt;\n  } else {\n    return proposal.data.creationTime + proposal.timings.expirationTime;\n  }\n}\n\nexport function getEstimatedState(\n  proposal: Proposal,\n  forVotesS: string,\n  againstVotesS: string,\n) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    lastPayloadQueuedAt,\n    predictPayloadExpiredTime,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const { forVotes, againstVotes } = normalizeVotes(forVotesS, againstVotesS);\n  const { quorumReached } = formatQuorum(\n    forVotesS,\n    proposal.config.quorum,\n    proposal.precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    forVotesS,\n    againstVotesS,\n    proposal.config.differential,\n    proposal.precisionDivider,\n  );\n\n  const isVotingDefeated =\n    againstVotes >= forVotes ||\n    (againstVotes === 0 && forVotes === 0) ||\n    !quorumReached;\n\n  const isProposalWaitForQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingDefeated &&\n    proposal.data.votingMachineData.sentToGovernance &&\n    proposal.data.queuingTime > 0 &&\n    now < proposal.data.queuingTime + proposal.timings.cooldownPeriod;\n\n  const isPayloadsWaitForQueued =\n    proposal.data.basicState === BasicProposalState.Executed &&\n    now < lastPayloadQueuedAt + proposal.timings.executionPayloadTime;\n\n  const executedTimestamp =\n    proposal.data.queuingTime > 0 && lastPayloadQueuedAt === 0\n      ? proposal.data.queuingTime + proposal.timings.cooldownPeriod\n      : proposal.data.queuingTime > 0 && lastPayloadQueuedAt > 0\n      ? lastPayloadQueuedAt + proposal.timings.executionPayloadTime\n      : 0;\n\n  if (\n    now <=\n    proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Active,\n      timestampForEstimatedState:\n        proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart,\n    };\n  } else if (\n    isVotingStarted &&\n    !isVotingEnded &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Succeed,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isVotingDefeated && isVotingStarted && !isVotingEnded) {\n    return {\n      estimatedState: ProposalEstimatedState.Defeated,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isProposalWaitForQueued && !isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.ProposalExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else if (isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.PayloadsExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else {\n    return {\n      estimatedState: ProposalEstimatedState.Expired,\n      timestampForEstimatedState:\n        proposal.data.basicState === BasicProposalState.Executed\n          ? predictPayloadExpiredTime\n          : proposal.data.creationTime + proposal.timings.expirationTime,\n    };\n  }\n}\n\nexport function getWaitForState(proposal: Proposal) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    isProposalExecuted,\n    isProposalQueued,\n    isPayloadsQueued,\n    lastPayloadQueuedAt,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (!isVotingFailed) {\n    if (\n      now >\n        proposal.data.creationTime +\n          proposal.config.coolDownBeforeVotingStart &&\n      !isVotingStarted &&\n      !isVotingEnded &&\n      !isVotingClosed\n    ) {\n      return ProposalWaitForState.WaitForActivateVoting;\n    } else if (isVotingStarted && isVotingEnded && !isVotingClosed) {\n      return ProposalWaitForState.WaitForCloseVoting;\n    } else if (\n      isVotingStarted &&\n      isVotingEnded &&\n      isVotingClosed &&\n      proposal.data.votingMachineData.sentToGovernance &&\n      proposal.data.queuingTime <= 0\n    ) {\n      return ProposalWaitForState.WaitForQueueProposal;\n    } else if (\n      isProposalQueued &&\n      proposal.data.basicState !== BasicProposalState.Executed\n    ) {\n      return ProposalWaitForState.WaitForExecuteProposal;\n    } else if (isProposalExecuted && lastPayloadQueuedAt === 0) {\n      return ProposalWaitForState.WaitForQueuePayloads;\n    } else if (isPayloadsQueued) {\n      return ProposalWaitForState.WaitForExecutePayloads;\n    } else {\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nexport function formatProposal(proposal: Proposal) {\n  const {\n    forVotes,\n    normalizeMinQuorumVotes,\n    againstVotes,\n    normalizeRequiredDiff,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const stateTimestamp = getStateTimestamp(proposal);\n  const { estimatedState, timestampForEstimatedState } = getEstimatedState(\n    proposal,\n    proposal.data.votingMachineData.forVotes,\n    proposal.data.votingMachineData.againstVotes,\n  );\n  const waitForState = getWaitForState(proposal);\n\n  const allVotes = new BigNumber(proposal.data.votingMachineData.forVotes).plus(\n    proposal.data.votingMachineData.againstVotes,\n  );\n\n  const votingPowerBasic = proposal.balances\n    .map((balance) => valueToBigNumber(balance.basicValue).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingPower = proposal.balances\n    .map((balance) => valueToBigNumber(balance.value).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingTokens = proposal.balances;\n\n  const requiredForVotes =\n    againstVotes + normalizeRequiredDiff < normalizeMinQuorumVotes\n      ? normalizeMinQuorumVotes\n      : againstVotes + normalizeRequiredDiff;\n  const requiredAgainstVotes = forVotes === 0 ? 0 : forVotes;\n\n  const forPercent = allVotes.gt(0)\n    ? new BigNumber(forVotes)\n        .dividedBy(requiredForVotes)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n  const againstPercent = allVotes.gt(0)\n    ? new BigNumber(againstVotes)\n        .dividedBy(requiredAgainstVotes > 0 ? requiredAgainstVotes : 1)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n\n  return {\n    forPercent,\n    forVotes,\n    againstPercent,\n    againstVotes,\n    minQuorumVotes: normalizeMinQuorumVotes,\n    requiredDiff: normalizeRequiredDiff,\n    requiredForVotes,\n    requiredAgainstVotes,\n    stateTimestamp,\n    estimatedState,\n    timestampForEstimatedState,\n    waitForState,\n    votingPowerBasic,\n    votingPower,\n    votedPower: normalizeBN(\n      proposal.data.votingMachineData.votedInfo.votingPower,\n      18,\n    ).toNumber(),\n    votingTokens,\n  };\n}\n","import { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\nconst getAverageBlockTime = (chainId: number) => {\n  switch (chainId) {\n    case ChainIdByName.EthereumMainnet:\n      return 13;\n    case ChainIdByName.Polygon:\n      return 3;\n    case ChainIdByName.Avalanche:\n      return 5;\n    case ChainIdByName.Binance:\n      return 4;\n    case ChainIdByName.Base:\n      return 2;\n    case ChainIdByName.Arbitrum:\n      return 1;\n    case ChainIdByName.Metis:\n      return 2;\n    case ChainIdByName.Optimism:\n      return 2;\n    case ChainIdByName.Sepolia:\n      return 13;\n    case ChainIdByName.Goerli:\n      return 13;\n    case ChainIdByName.GoerliOptimism:\n      return 2;\n    case ChainIdByName.AvalancheFuji:\n      return 5;\n    case ChainIdByName.Mumbai:\n      return 3;\n    case ChainIdByName.BnbTest:\n      return 4;\n    default:\n      return 13;\n  }\n};\n\nexport async function getBlockNumberByTimestamp(\n  chainId: number,\n  targetTimestamp: number,\n  provider: ethers.providers.JsonRpcBatchProvider,\n) {\n  const blocksDiff = 100;\n  const MAX_ITERATIONS = 10;\n\n  let iterationCount = 0;\n  let averageBlockTime = getAverageBlockTime(chainId);\n\n  const currentBlock = await provider.getBlock('latest');\n\n  if (targetTimestamp > currentBlock.timestamp) {\n    throw new Error('Target timestamp is in the future.');\n  }\n\n  let previousBlockTimestamp = currentBlock.timestamp;\n  let previousBlockNumber = currentBlock.number;\n  let estimatedBlockNumber;\n  let estimatedBlock;\n\n  do {\n    // Make a guess\n\n    if (previousBlockTimestamp >= targetTimestamp) {\n      // step back\n      estimatedBlockNumber =\n        previousBlockNumber -\n        Math.floor(\n          (previousBlockTimestamp - targetTimestamp) / averageBlockTime,\n        );\n    } else {\n      // step forward\n      estimatedBlockNumber =\n        previousBlockNumber +\n        Math.floor(\n          (previousBlockTimestamp - targetTimestamp) / averageBlockTime,\n        );\n    }\n\n    if (estimatedBlockNumber < 0) {\n      throw new Error('Estimated block number is below zero.');\n    }\n\n    // Get block data\n    estimatedBlock = await provider.getBlock(estimatedBlockNumber);\n\n    // Calculate a new average block time based on the difference of the timestamps\n    averageBlockTime = Math.ceil(\n      (estimatedBlock.timestamp - previousBlockTimestamp) /\n        (estimatedBlockNumber - previousBlockNumber),\n    );\n\n    previousBlockTimestamp = estimatedBlock.timestamp;\n    previousBlockNumber = estimatedBlock.number;\n\n    iterationCount++;\n  } while (\n    Math.abs(estimatedBlock.timestamp - targetTimestamp) >\n      blocksDiff * averageBlockTime &&\n    iterationCount < MAX_ITERATIONS\n  );\n\n  if (iterationCount === MAX_ITERATIONS) {\n    throw new Error('Maximum iterations reached without converging.');\n  }\n\n  // if estimated block timestamp <= target\n  let minBlockNumber = estimatedBlock.number - 1;\n  let maxBlockNumber = estimatedBlock.number + blocksDiff * 2;\n\n  // if estimated block timestamp > target\n  if (estimatedBlock.timestamp > targetTimestamp) {\n    minBlockNumber = estimatedBlock.number - blocksDiff * 2;\n    maxBlockNumber = estimatedBlock.number;\n  }\n\n  return {\n    minBlockNumber,\n    maxBlockNumber,\n  };\n}\n","import { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { VotingConfig } from '../types';\n\nexport async function getGovCoreConfigs(\n  govCoreDataHelper: IGovernanceDataHelper,\n  govCoreContractAddress: string,\n) {\n  const accessLevels = [1, 2]; // access levels that we can’t get from contracts in any way, so far there are only two of them, we need to keep an eye on that suddenly there will be more of them\n  const constants = await govCoreDataHelper.getConstants(\n    govCoreContractAddress,\n    accessLevels,\n  );\n\n  const contractsConstants = {\n    precisionDivider: constants.precisionDivider.toString(),\n    cooldownPeriod: constants.cooldownPeriod.toNumber(),\n    expirationTime: constants.expirationTime.toNumber(),\n    cancellationFee: constants.cancellationFee.toString(),\n  };\n\n  const configs: VotingConfig[] = [];\n\n  for (let i = 0; i < accessLevels.length; i++) {\n    const votingConfig = constants.votingConfigs[i];\n\n    const config: VotingConfig = {\n      accessLevel: votingConfig.accessLevel,\n      votingDuration: votingConfig.config.votingDuration,\n      quorum: votingConfig.config.yesThreshold.toNumber() || 200,\n      differential: votingConfig.config.yesNoDifferential.toNumber() || 50,\n      coolDownBeforeVotingStart: votingConfig.config.coolDownBeforeVotingStart,\n      minPropositionPower: votingConfig.config.minPropositionPower.toNumber(),\n    };\n\n    configs.push(config);\n  }\n\n  return {\n    contractsConstants,\n    configs,\n  };\n}\n","// payloads created\nimport { IGovernanceCore } from '../contracts/IGovernanceCore';\nimport { IPayloadsControllerCore } from '../contracts/IPayloadsControllerCore';\nimport { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { blockLimit, getEventsBySteps } from './eventsHelpres';\n\nasync function getPayloadsCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsCreated(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal created\nasync function getProposalCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalCreated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal activate for voting\nasync function getProposalActivatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.VotingActivated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting activate on VM\nasync function getProposalActivatedOnVMEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalVoteStarted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivatedOnVM(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedOnVMEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting closed on VM and voting results sent\nasync function getProposalVotingClosedEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalResultsSent(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalVotingClosed(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalVotingClosedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal queued\nasync function getProposalQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalQueued(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads queued\nasync function getPayloadsQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsQueued(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads executed\nasync function getPayloadsExecutedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadExecuted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsExecuted(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsExecutedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import dayjs from 'dayjs';\nimport { ethers } from 'ethers';\n\nimport { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { IVotingMachineDataHelper } from '../contracts/IVotingMachineDataHelper';\nimport {\n  BasicProposal,\n  ProposalData,\n  VotingMachineProposalState,\n} from '../types';\n\nexport function getVotingMachineProposalState(proposal: BasicProposal) {\n  const now = dayjs().unix();\n  if (proposal.votingMachineData.startTime === 0) {\n    return VotingMachineProposalState.NotCreated;\n  } else if (now <= proposal.votingMachineData.endTime) {\n    return VotingMachineProposalState.Active;\n  } else if (proposal.votingMachineData.votingClosedAndSentBlockNumber === 0) {\n    return VotingMachineProposalState.Finished;\n  } else {\n    return VotingMachineProposalState.SentToGovernance;\n  }\n}\n\nexport function formatVotingMachineData(\n  id: number,\n  votingMachineData: IVotingMachineDataHelper.ProposalStructOutput,\n) {\n  return {\n    id: id,\n    forVotes: votingMachineData.proposalData.forVotes.toString(),\n    againstVotes: votingMachineData.proposalData.againstVotes.toString(),\n    startTime: votingMachineData.proposalData.startTime,\n    endTime: votingMachineData.proposalData.endTime,\n    votingClosedAndSentBlockNumber:\n      votingMachineData.proposalData.votingClosedAndSentBlockNumber.toNumber(),\n    votingClosedAndSentTimestamp:\n      votingMachineData.proposalData.votingClosedAndSentTimestamp,\n    l1BlockHash:\n      votingMachineData?.voteConfig.l1ProposalBlockHash ||\n      ethers.constants.HashZero,\n    strategy: votingMachineData.strategy,\n    sentToGovernance: votingMachineData.proposalData.sentToGovernance,\n    createdBlock: votingMachineData.proposalData.creationBlockNumber.toNumber(),\n    votedInfo: {\n      support: votingMachineData.votedInfo.support,\n      votingPower: votingMachineData.votedInfo.votingPower.toString(),\n    },\n    votingAssets: votingMachineData.votingAssets,\n    hasRequiredRoots: votingMachineData.hasRequiredRoots,\n  };\n}\n\nexport function updateVotingMachineData(\n  proposals: ProposalData[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n) {\n  const proposalsData: BasicProposal[] = [];\n\n  ids.forEach((id) => {\n    const govData = proposals.find((proposal) => proposal?.id === id);\n    if (govData) {\n      const votingMachineData =\n        votingMachineDataHelperData.find(\n          (proposal) => proposal.proposalData.id.toNumber() === govData.id,\n        ) || votingMachineDataHelperData[0];\n\n      const proposalData = {\n        id: govData.id,\n        votingDuration:\n          +votingMachineData?.voteConfig.votingDuration ||\n          govData.votingDuration,\n        creationTime: govData.creationTime,\n        accessLevel: govData.accessLevel,\n        basicState: govData.basicState,\n        queuingTime: govData.queuingTime,\n        ipfsHash: govData.ipfsHash,\n        initialPayloads: govData.initialPayloads,\n        snapshotBlockHash: govData.snapshotBlockHash,\n        creator: govData.creator,\n        canceledAt: govData.canceledAt,\n        votingActivationTime: govData.votingActivationTime,\n        votingChainId: govData.votingChainId,\n        votingMachineData: formatVotingMachineData(\n          govData.id,\n          votingMachineData,\n        ),\n        prerender: govData.prerender,\n      };\n\n      proposalsData.push(proposalData);\n    }\n  });\n\n  return proposalsData;\n}\n\nexport function getDetailedProposalsData(\n  govCoreDataHelperData: IGovernanceDataHelper.ProposalStructOutput[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n  prerender?: boolean,\n): BasicProposal[] {\n  const proposalsData: BasicProposal[] = [];\n\n  for (let i = 0; i < ids.length; i++) {\n    const govData = govCoreDataHelperData[i];\n\n    const votingMachineData =\n      votingMachineDataHelperData.find(\n        (proposal) =>\n          proposal.proposalData.id.toNumber() === govData.id.toNumber(),\n      ) || votingMachineDataHelperData[i];\n\n    const proposalData = {\n      id: govData.id.toNumber(),\n      votingDuration:\n        +votingMachineData?.voteConfig.votingDuration ||\n        +govData.proposalData.votingDuration,\n      creationTime: +govData.proposalData.creationTime,\n      accessLevel: +govData.proposalData.accessLevel,\n      basicState: +govData.proposalData.state,\n      queuingTime: +govData.proposalData.queuingTime,\n      ipfsHash: govData.proposalData.ipfsHash,\n      initialPayloads: govData.proposalData.payloads.map((payload) => {\n        return {\n          id: payload.payloadId,\n          chainId: payload.chain.toNumber(),\n          payloadsController: payload.payloadsController,\n        };\n      }),\n      snapshotBlockHash: govData.proposalData.snapshotBlockHash,\n      creator: govData.proposalData.creator,\n      canceledAt: govData.proposalData.cancelTimestamp,\n      votingActivationTime: govData.proposalData.votingActivationTime,\n      votingChainId: govData.votingChainId.toNumber(),\n      votingMachineData: formatVotingMachineData(\n        govData.id.toNumber(),\n        votingMachineData,\n      ),\n      prerender: !!prerender,\n    };\n\n    proposalsData.push(proposalData);\n  }\n\n  return proposalsData;\n}\n","import { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { normalizeBN } from './bignumber';\nimport { getEventsBySteps } from './eventsHelpres';\n\nasync function getVoteEvents(\n  votingMachine: IVotingMachineWithProofs,\n  startBlock: number,\n  endBlock: number,\n  chainId: number,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.VoteEmitted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      address: event.args.voter.toString(),\n      support: event.args.support,\n      votingPower: normalizeBN(\n        event.args.votingPower.toString(),\n        18,\n      ).toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      chainId,\n    }));\n}\n\nexport async function getVoters(\n  endBlock: number,\n  startBlock: number,\n  blockLimit: number,\n  votingMachine: IVotingMachineWithProofs,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getVoteEvents(\n      votingMachine,\n      startBlockNumber,\n      endBlockNumber,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import { ethers } from 'ethers';\nimport { base58 } from 'ethers/lib/utils';\nimport matter from 'gray-matter';\n\nimport { ProposalMetadata } from '../types';\n\nexport const ipfsGateway = 'https://ipfs.io/ipfs';\n\nexport function getLink(hash: string, gateway: string): string {\n  return `${gateway}/${hash}`;\n}\ntype MemorizeMetadata = Record<string, ProposalMetadata>;\n\nconst MEMORIZE: MemorizeMetadata = {};\n\nconst incorectedHashses = [\n  '0x0000000000000000000000000000000000000000000000000000000000000020',\n  ethers.constants.HashZero,\n];\n\nexport async function getProposalMetadata(\n  hash: string,\n  gateway = ipfsGateway,\n  setIpfsError?: (hash: string, text?: string) => void,\n  errorText?: string,\n): Promise<ProposalMetadata> {\n  const ipfsHash = hash.startsWith('0x')\n    ? base58.encode(Buffer.from(`1220${hash.slice(2)}`, 'hex'))\n    : hash;\n\n  if (MEMORIZE[ipfsHash]) return MEMORIZE[ipfsHash];\n\n  if (incorectedHashses.some((h) => hash === h)) {\n    if (!!setIpfsError) {\n      setIpfsError(hash, errorText);\n    } else {\n      throw Error('Fetch metadata form ipfs not working');\n    }\n  } else {\n    const ipfsResponse: Response = await fetch(getLink(ipfsHash, gateway));\n\n    if (!ipfsResponse.ok) {\n      if (!!setIpfsError) {\n        setIpfsError(hash);\n      } else {\n        throw Error('Fetch metadata form ipfs not working');\n      }\n    }\n\n    const clone = ipfsResponse.clone();\n    try {\n      const response: ProposalMetadata = await ipfsResponse.json();\n\n      const { content } = matter(response.description);\n\n      MEMORIZE[ipfsHash] = {\n        title: response.title,\n        aip: response.aip,\n        originalIpfsHash: hash,\n        author: response.author,\n        discussions: response.discussions,\n        shortDescription: response.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    } catch (e) {\n      const text = await clone.text();\n      const { content, data } = matter(text);\n      MEMORIZE[ipfsHash] = {\n        title: data.title,\n        aip: data.aip,\n        originalIpfsHash: hash,\n        author: data.author,\n        discussions: data.discussions,\n        shortDescription: data.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    }\n  }\n\n  return MEMORIZE[ipfsHash];\n}\n"],"names":["ChainIdByName","BasicProposalState","VotingMachineProposalState","PayloadState","ProposalState","ProposalStateWithName","ProposalEstimatedState","ProposalWaitForState","govCoreConfig","mainnet","contractAddress","GovernanceV3Ethereum","GOVERNANCE","dataHelperContractAddress","GOV_DATA_HELPER","votingPortals","_votingPortals","EthereumMainnet","VOTING_PORTAL_ETH_ETH","Polygon","VOTING_PORTAL_ETH_POL","Avalanche","VOTING_PORTAL_ETH_AVAX","goerli","_votingPortals2","Goerli","sepolia","_votingPortals3","Sepolia","AvalancheFuji","payloadsControllerConfig","_mainnet","PC_DATA_HELPER","contractAddresses","PAYLOADS_CONTROLLER","GovernanceV3Polygon","GovernanceV3Avalanche","Base","GovernanceV3Base","Arbitrum","GovernanceV3Arbitrum","Metis","GovernanceV3Metis","Optimism","GovernanceV3Optimism","_goerli","payloadAddress","_sepolia","votingMachineConfig","_mainnet2","VOTING_MACHINE","VM_DATA_HELPER","dataWarehouseAddress","DATA_WAREHOUSE","_goerli2","_sepolia2","govCoreChainId","aditionalsAddresses","aaveAddress","AaveV3Ethereum","ASSETS","AAVE","UNDERLYING","aAaveAddress","A_TOKEN","stkAAVEAddress","AaveSafetyModule","STK_AAVE","delegationHelper","META_DELEGATE_HELPER","payloadsControllerChainIds","votingMachineChainIds","gelatoApiKeys","testnet","valueToBigNumber","amount","BigNumber","normalizeBN","n","decimals","shiftedBy","checkHash","hash","notZero","ethers","constants","HashZero","zero","getEventsBySteps","_x","_x2","_x3","_x4","_getEventsBySteps","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","startBlock","endBlock","blockLimit","callbackFunc","blockSteps","eventsCountArray","i","wrap","_context2","prev","next","Math","ceil","Array","Promise","all","map","_ref","_callee","count","startBlockNumber","endBlockNumber","_context","abrupt","sent","stop","_x5","flat","normalizeVotes","forVotes","againstVotes","toNumber","formatQuorum","quorum","precisionDivider","minQuorumVotes","multipliedBy","normalizeMinQuorumVotes","quorumReached","gte","formatDiff","differential","diff","minus","requiredDiff","normalizeRequiredDiff","getProposalStepsAndAmounts","proposalData","cooldownPeriod","executionPayloadTime","now","dayjs","unix","isVotingStarted","votingMachineState","NotCreated","isVotingEnded","votingMachineData","endTime","isVotingClosed","votingClosedAndSentTimestamp","_normalizeVotes","_formatQuorum","lastPayloadQueuedAt","max","payloads","payload","queuedAt","lastPayloadExecutedAt","executedAt","lastPayloadCanceledAt","cancelledAt","lastPayloadExpiredAt","state","Expired","expirationTime","delay","gracePeriod","predictPayloadExpiredTime","Created","Queued","allPayloadsExecuted","every","Executed","allPayloadsCanceled","Cancelled","allPayloadsExpired","isCanceled","basicState","isExpired","isVotingFailed","isProposalExecuted","isPayloadsExecuted","isProposalActive","Null","isVotingActive","isProposalQueued","sentToGovernance","queuingTime","isPayloadsQueued","getEstimatedState","proposal","forVotesS","againstVotesS","_getProposalStepsAndA3","data","config","timings","_normalizeVotes2","_formatDiff2","isVotingDefeated","isPayloadsWaitForQueued","executedTimestamp","creationTime","coolDownBeforeVotingStart","estimatedState","Active","timestampForEstimatedState","Succeed","Defeated","ProposalExecuted","PayloadsExecuted","getWaitForState","_getProposalStepsAndA4","WaitForActivateVoting","WaitForCloseVoting","WaitForQueueProposal","WaitForExecuteProposal","WaitForQueuePayloads","WaitForExecutePayloads","getAverageBlockTime","chainId","Binance","GoerliOptimism","Mumbai","BnbTest","_getBlockNumberByTimestamp","targetTimestamp","provider","blocksDiff","MAX_ITERATIONS","iterationCount","averageBlockTime","currentBlock","previousBlockTimestamp","previousBlockNumber","estimatedBlockNumber","estimatedBlock","minBlockNumber","maxBlockNumber","getBlock","timestamp","Error","number","floor","abs","_getGovCoreConfigs","govCoreDataHelper","govCoreContractAddress","accessLevels","contractsConstants","configs","votingConfig","getConstants","toString","cancellationFee","length","accessLevel","votingConfigs","votingDuration","yesThreshold","yesNoDifferential","minPropositionPower","push","getPayloadsCreatedEvents","_getPayloadsCreatedEvents","payloadsController","payloadsControllerAddress","queryFilter","filters","PayloadCreated","sort","a","b","blockNumber","event","payloadId","args","transactionHash","_getPayloadsCreated","_callee3","_context3","_x61","_x62","getProposalCreatedEvents","_x11","_x12","_x13","_getProposalCreatedEvents","_callee4","govCore","_context4","ProposalCreated","proposalId","_getProposalCreated","_callee6","_context6","_ref2","_callee5","_context5","_x63","_x64","getProposalActivatedEvents","_x17","_x18","_x19","_getProposalActivatedEvents","_callee7","_context7","VotingActivated","_getProposalActivated","_callee9","_context9","_ref3","_callee8","_context8","_x65","_x66","getProposalActivatedOnVMEvents","_x23","_x24","_x25","_getProposalActivatedOnVMEvents","_callee10","votingMachine","_context10","ProposalVoteStarted","_getProposalActivatedOnVM","_callee12","_context12","_ref4","_callee11","_context11","_x67","_x68","getProposalVotingClosedEvents","_x29","_x30","_x31","_getProposalVotingClosedEvents","_callee13","_context13","ProposalResultsSent","_getProposalVotingClosed","_callee15","_context15","_ref5","_callee14","_context14","_x69","_x70","getProposalQueuedEvents","_x35","_x36","_x37","_getProposalQueuedEvents","_callee16","_context16","ProposalQueued","_getProposalQueued","_callee18","_context18","_ref6","_callee17","_context17","_x71","_x72","getPayloadsQueuedEvents","_x41","_x42","_x43","_x44","_x45","_getPayloadsQueuedEvents","_callee19","_context19","PayloadQueued","_getPayloadsQueued","_callee21","_context21","_ref7","_callee20","_context20","_x73","_x74","getPayloadsExecutedEvents","_x51","_x52","_x53","_x54","_x55","_getPayloadsExecutedEvents","_callee22","_context22","PayloadExecuted","_getPayloadsExecuted","_callee24","_context24","_ref8","_callee23","_context23","_x75","_x76","formatVotingMachineData","id","startTime","votingClosedAndSentBlockNumber","l1BlockHash","voteConfig","l1ProposalBlockHash","strategy","createdBlock","creationBlockNumber","votedInfo","support","votingPower","votingAssets","hasRequiredRoots","getVoteEvents","_getVoteEvents","VoteEmitted","address","voter","_getVoters","_x10","getLink","gateway","MEMORIZE","incorectedHashses","_getProposalMetadata","setIpfsError","errorText","ipfsHash","ipfsResponse","clone","response","_matter","_matter2","startsWith","base58","encode","Buffer","from","slice","some","h","fetch","ok","json","matter","description","title","aip","originalIpfsHash","author","discussions","shortDescription","content","t0","text","providers","coreNetwork","additional","_getProposalStepsAndA5","stateTimestamp","_getProposalStepsAndA2","snapshotBlockHash","Canceled","canceledAt","votingActivationTime","getStateTimestamp","_getEstimatedState","waitForState","allVotes","plus","votingPowerBasic","balances","balance","basicValue","reduce","sum","value","votingTokens","requiredForVotes","requiredAgainstVotes","forPercent","gt","dividedBy","againstPercent","votedPower","lastBlockNumber","isFinite","govCoreDataHelperData","votingMachineDataHelperData","ids","prerender","proposalsData","_loop","govData","find","initialPayloads","chain","creator","cancelTimestamp","votingChainId","_x6","_x7","_x8","_x9","_x56","_x57","_x58","_x59","_x60","_x46","_x47","_x48","_x49","_x50","_x20","_x21","_x22","_x26","_x27","_x28","_x14","_x15","_x16","_x38","_x39","_x40","_extends","_objectDestructuringEmpty","_getProposalStepsAndA","_x32","_x33","_x34","Finished","SentToGovernance","proposals","forEach"],"mappings":"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"}