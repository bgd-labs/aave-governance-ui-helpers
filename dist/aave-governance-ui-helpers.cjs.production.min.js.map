{"version":3,"file":"aave-governance-ui-helpers.cjs.production.min.js","sources":["../src/helpers/chains.ts","../src/helpers/appConfig.ts","../src/types.ts","../src/helpers/bignumber.ts","../src/helpers/checkHash.ts","../src/helpers/eventsHelpres.ts","../src/helpers/formatProposal.ts","../src/helpers/getBlockNumberByTimestamp.ts","../src/helpers/getGovCoreConfigs.ts","../src/helpers/getHistoryEvents.ts","../src/helpers/getProposalData.ts","../src/helpers/getProposalEvents.ts","../src/helpers/getProposalMetadata.ts"],"sourcesContent":["export enum ChainIdByName {\n  Goerli = 5,\n  GoerliOptimism = 420,\n  AvalancheFuji = 43113,\n  Sepolia = 11155111,\n  Mumbai = 80001,\n  BnbTest = 97,\n}\n","// TODO: need integrate address book\n\nimport { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\nexport type CoreNetworkName = 'goerli' | 'sepolia'; // TODO: need add mainnet\n\ntype Config = {\n  contractAddress: string;\n  dataHelperContractAddress: string;\n};\n\nexport const govCoreConfig: Record<\n  CoreNetworkName,\n  Config & { votingPortals: Record<number, string> }\n> = {\n  // testnets\n  goerli: {\n    contractAddress: '0x586207Df62c7D5D1c9dBb8F61EdF77cc30925C4F',\n    dataHelperContractAddress: '0x160e2d1456B815d6a3d281218538dd6E2e3C841f',\n    votingPortals: {\n      [ChainIdByName.Goerli]: '0xFf376b6db4AF0d87Dba35860B3B87F526d7879cF',\n    },\n  },\n  sepolia: {\n    contractAddress: '0x84b3FE5eD74caC496BcB58d448A7c83c523F6E0E',\n    dataHelperContractAddress: '0x74bb7b600fA33E2A1945F8493D17db3b129513D2',\n    votingPortals: {\n      [ChainIdByName.Sepolia]: '0x5C77bF8505716904a1a73eB8c3909c0Da0DD49b3',\n    },\n  },\n};\n\nexport const payloadsControllerConfig: Record<\n  CoreNetworkName,\n  Record<\n    number,\n    Pick<Config, 'dataHelperContractAddress'> & {\n      contractAddresses: string[];\n      payloadAddress: string;\n    }\n  >\n> = {\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      dataHelperContractAddress: '0xbd2db358f3C82F2883132A6584e22F38A979e768',\n\n      // for create payload\n      contractAddresses: ['0x064361B3761CcDd17300146bf58a79d1E570382E'],\n      // TODO: (remove after release)\n      payloadAddress: '0xf6b9c3fCF7f91817E7bF0efF792BA692c7bd372A',\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      dataHelperContractAddress: '0x5c2AD703961c59Adb4412d402b8D694Eee48a822',\n\n      // for create payload\n      contractAddresses: ['0x7Bb94b2a8d9fD3f37345Ec5A0b46c234164b4f90'],\n      // TODO: (remove after release)\n      payloadAddress: '0xf19de078dbac9db382caf8015cb208667ec581c0',\n    },\n  },\n};\n\nconst votingMachineConfig: Record<\n  CoreNetworkName,\n  Record<number, Config & { dataWarehouseAddress: string }>\n> = {\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      contractAddress: '0xE8AD5ab6295c16D04257BC6Cd6D447ff4018FF89',\n      dataHelperContractAddress: '0xe10617A1ea760E174E82fBeb38a540d8ACe566f5',\n      dataWarehouseAddress: '0xC946cc6bb934bAf2A539BaB62c647aff09D2e2D8',\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      contractAddress: '0xB379f8a3E62Ff807E827F853B36688d1d7aD692f',\n      dataHelperContractAddress: '0x8b5661024Bc97c1Fd71B4eCafCA88c316c3D438B',\n      dataWarehouseAddress: '0xdF6C1affD18Ecb318e4468d96b588bbbEac180E2',\n    },\n  },\n};\n\nconst govCoreChainId: Record<CoreNetworkName, number> = {\n  // testnets\n  goerli: ChainIdByName.Goerli,\n  sepolia: ChainIdByName.Sepolia,\n};\n\nconst aditionalsAddresses: Record<CoreNetworkName, Record<string, string>> = {\n  // testnets\n  goerli: {\n    aaveAddress: '0xb6D88BfC5b145a558b279cf7692e6F02064889d0',\n    aAaveAddress: '0xD1ff82609FB63A0eee6FE7D2896d80d29491cCCd',\n    stkAAVEAddress: '0x1406A9Ea2B0ec8FD4bCa4F876DAae2a70a9856Ec',\n\n    // for delegation\n    delegationHelper: '0x1966133c190475E8385Dc1b4150B5f81c70DC578',\n  },\n  sepolia: {\n    aaveAddress: '0x64033B2270fd9D6bbFc35736d2aC812942cE75fE',\n    aAaveAddress: '0x7d9EB767eEc260d1bCe8C518276a894aE5535F04',\n    stkAAVEAddress: '0xA4FDAbdE9eF3045F0dcF9221bab436B784B7e42D',\n\n    // for delegation\n    delegationHelper: '0x1633Bd6772020a797fB09a3b17D6AD9a95b98f01',\n  },\n};\n\nexport const votingMachineChainIds: Record<CoreNetworkName, number[]> = {\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia],\n};\n\nexport const payloadsControllerChainIds: Record<CoreNetworkName, number[]> = {\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia],\n};\n\nconst gelatoApiKeys: Record<string, string> = {\n  testnet: 'qGvvlJMoyDKyuMxqJjDwFslpgiBKZCXNXpnSjIxsICY_',\n  mainnet: '', // TODO: need add\n};\n\nexport const appConfigInit = (\n  providers: Record<number, ethers.providers.JsonRpcBatchProvider>,\n  coreNetwork: CoreNetworkName,\n) => {\n  return {\n    providers,\n    govCoreChainId: govCoreChainId[coreNetwork],\n    govCoreConfig: govCoreConfig[coreNetwork],\n    votingMachineConfig: votingMachineConfig[coreNetwork],\n    votingMachineChainIds: votingMachineChainIds[coreNetwork],\n    payloadsControllerConfig: payloadsControllerConfig[coreNetwork],\n    payloadsControllerChainIds: payloadsControllerChainIds[coreNetwork],\n\n    additional: aditionalsAddresses[coreNetwork],\n    gelatoApiKeys,\n  };\n};\n","export interface PayloadForCreation {\n  chain: number;\n  accessLevel: number;\n  payloadsController: string;\n  payloadId: number;\n}\n\nexport enum BasicProposalState {\n  Null,\n  Created,\n  Active,\n  Queued,\n  Executed,\n  Failed,\n  Cancelled,\n  Expired,\n}\n\nexport enum VotingMachineProposalState {\n  NotCreated,\n  Active,\n  Finished,\n  SentToGovernance,\n}\n\nexport enum PayloadState {\n  None,\n  Created,\n  Queued,\n  Executed,\n  Cancelled,\n  Expired,\n}\n\nexport enum ProposalState {\n  Created,\n  Active,\n  Succeed,\n  Defeated,\n  Executed,\n  Expired,\n  Canceled,\n}\n\nexport type VotersData = {\n  proposalId: number;\n  address: string;\n  support: boolean;\n  votingPower: number;\n  transactionHash: string;\n  blockNumber: number;\n  chainId: number;\n};\n\nexport type InitialProposal = {\n  id: number;\n  votingChainId: number;\n  snapshotBlockHash: string;\n};\n\nexport type VotingMachineData = {\n  id: number;\n  forVotes: string;\n  againstVotes: string;\n  startTime: number;\n  endTime: number;\n  votingClosedAndSentBlockNumber: number;\n  votingClosedAndSentTimestamp: number;\n  l1BlockHash: string;\n  strategy: string;\n  sentToGovernance: boolean;\n  createdBlock: number;\n  votedInfo: {\n    support: boolean;\n    votingPower: string;\n  };\n  votingAssets: string[];\n  hasRequiredRoots: boolean;\n};\n\nexport type Payload = {\n  id: number;\n  chainId: number;\n  maximumAccessLevelRequired: number;\n  state: PayloadState;\n  createdAt: number;\n  queuedAt: number;\n  executedAt: number;\n  cancelledAt: number;\n  expirationTime: number;\n  delay: number;\n  gracePeriod: number;\n  payloadsController: string;\n  actionAddresses: string[];\n};\n\n// type for create payload actions\nexport type PayloadAction = {\n  payloadAddress: string;\n  withDelegateCall: boolean;\n  accessLevel: number;\n  value: number;\n  signature: string;\n  callData?: string;\n};\n\nexport type VotingConfig = {\n  accessLevel: number;\n  quorum: number;\n  differential: number;\n  minPropositionPower: number;\n  coolDownBeforeVotingStart: number;\n  votingDuration: number;\n};\n\nexport type ContractsConstants = {\n  precisionDivider: string;\n  cooldownPeriod: number;\n  expirationTime: number;\n  cancellationFee: string;\n};\n\nexport type InitialPayload = {\n  id: number;\n  chainId: number;\n  payloadsController: string;\n};\n\nexport interface BasicProposal {\n  id: number;\n  votingDuration: number;\n  creationTime: number;\n  accessLevel: number;\n  basicState: BasicProposalState;\n  queuingTime: number;\n  ipfsHash: string;\n  initialPayloads: InitialPayload[];\n  votingMachineData: VotingMachineData;\n  snapshotBlockHash: string;\n  creator: string;\n  canceledAt: number;\n  votingActivationTime: number;\n  votingChainId: number;\n  prerender: boolean;\n}\n\nexport interface ProposalData\n  extends BasicProposal,\n    Pick<ProposalMetadata, 'title'> {\n  payloads: Payload[];\n  votingMachineState: VotingMachineProposalState;\n}\n\ntype BlockHash = string;\nexport type Balance = {\n  blockHash: string;\n  tokenName: string;\n  underlyingAsset: string;\n  value: string;\n  basicValue: string;\n  userBalance: string;\n  isWithDelegatedPower: boolean;\n};\n\nexport type VotingBalance = Record<BlockHash, Balance[]>;\n\nexport interface ProposalWithoutState {\n  data: ProposalData;\n  precisionDivider: string;\n  config: VotingConfig;\n  timings: {\n    cooldownPeriod: number;\n    expirationTime: number;\n    executionPayloadTime: number;\n  };\n  balances: Balance[];\n}\n\nexport interface Proposal extends ProposalWithoutState {\n  state: ProposalState;\n}\n\nexport interface ProposalWithLoadings {\n  loading: boolean;\n  balanceLoading: boolean;\n  proposal: Proposal;\n}\n\nexport interface ProposalWithId extends ProposalWithLoadings {\n  id: number;\n}\n\nexport enum ProposalStateWithName {\n  Created = 'Created',\n  Active = 'Voting',\n  Succeed = 'Passed',\n  Failed = 'Failed',\n  Defeated = 'Failed',\n  Executed = 'Executed',\n  Expired = 'Expired',\n  Canceled = 'Canceled',\n  ActiveAll = 'Active',\n}\n\nexport enum ProposalEstimatedState {\n  Active = 'Will open for voting',\n  Succeed = 'Will pass',\n  Defeated = 'Will fail',\n  ProposalExecuted = 'Proposal will be executed',\n  PayloadsExecuted = 'Payloads will be executed',\n  Expired = 'Will expire',\n}\n\nexport enum ProposalWaitForState {\n  WaitForActivateVoting = 'Pending voting activation',\n  WaitForCloseVoting = 'Pending voting closure',\n  WaitForQueueProposal = 'Proposal is time-locked',\n  WaitForExecuteProposal = 'Pending proposal execution',\n  WaitForQueuePayloads = 'Payloads are time-locked',\n  WaitForExecutePayloads = 'Pending payloads execution',\n}\n\nexport type ProposalMetadata = {\n  title: string;\n  description: string;\n  shortDescription: string;\n  ipfsHash: string;\n  originalIpfsHash: string;\n  aip: number;\n  discussions: string;\n  author: string;\n};\n\nexport interface FinishedProposalForList\n  extends Pick<ProposalMetadata, 'title'> {\n  id: number;\n  state: ProposalState;\n  finishedTimestamp: number;\n  ipfsHash: string;\n}\n\nexport interface CachedProposalDataItem {\n  proposal: {\n    data: {\n      id: number;\n      finishedTimestamp: number;\n      title: string;\n      ipfsHash: string;\n    };\n    state: ProposalState;\n  };\n}\n\nexport interface CachedProposalDataItemWithId extends CachedProposalDataItem {\n  id: number;\n}\n\nexport interface CachedDetails {\n  payloads: Payload[];\n  ipfs: ProposalMetadata;\n  proposal: BasicProposal;\n}\n","import { BigNumber } from 'bignumber.js';\n\nexport type BigNumberValue = string | number | BigNumber;\n\nexport function valueToBigNumber(amount: BigNumberValue): BigNumber {\n  if (amount instanceof BigNumber) {\n    return amount;\n  }\n\n  return new BigNumber(amount);\n}\n\nexport function normalize(n: BigNumberValue, decimals: number): string {\n  return normalizeBN(n, decimals).toString(10);\n}\n\nexport function normalizeBN(n: BigNumberValue, decimals: number): BigNumber {\n  return valueToBigNumber(n).shiftedBy(decimals * -1);\n}\n","import { ethers } from 'ethers';\n\nexport function checkHash(hash: string) {\n  return {\n    notZero: hash !== ethers.constants.HashZero,\n    zero: hash === ethers.constants.HashZero,\n  };\n}\n","export const blockLimit = 1023;\n\nexport function getBlocksForEvents(\n  currentBlock: number,\n  startBlockNumber: number,\n  endBlockNumber: number | undefined,\n  lastBlockNumber: number | undefined,\n): { startBlock: number; endBlock: number } {\n  const endBlock =\n    endBlockNumber && endBlockNumber > 0 && endBlockNumber < currentBlock\n      ? endBlockNumber\n      : !!lastBlockNumber &&\n        isFinite(lastBlockNumber) &&\n        lastBlockNumber > startBlockNumber &&\n        lastBlockNumber < currentBlock\n      ? lastBlockNumber + 1\n      : currentBlock > startBlockNumber + blockLimit\n      ? startBlockNumber + blockLimit\n      : currentBlock;\n\n  const startBlock =\n    !!lastBlockNumber &&\n    isFinite(lastBlockNumber) &&\n    lastBlockNumber > startBlockNumber &&\n    lastBlockNumber < currentBlock &&\n    lastBlockNumber < endBlock\n      ? lastBlockNumber\n      : startBlockNumber < currentBlock\n      ? startBlockNumber\n      : currentBlock - blockLimit;\n\n  return { startBlock, endBlock };\n}\n\nexport async function getEventsBySteps<T>(\n  startBlock: number,\n  endBlock: number,\n  blockLimit: number,\n  callbackFunc: (startBlock: number, endBlock: number) => Promise<T>,\n) {\n  const blockSteps = Math.ceil((endBlock - startBlock) / blockLimit);\n\n  const eventsCountArray = new Array(blockSteps);\n  for (let i = 0; i < blockSteps; i++) {\n    eventsCountArray[i] = i;\n  }\n\n  const results = await Promise.all(\n    eventsCountArray.map(async (count) => {\n      const startBlockNumber = startBlock + blockLimit * count;\n      const endBlockNumber = startBlock + (blockLimit * count + blockLimit);\n\n      return await callbackFunc(\n        startBlockNumber,\n        endBlock > endBlockNumber ? endBlockNumber : endBlock,\n      );\n    }),\n  );\n\n  return results.flat();\n}\n","import { BigNumber } from 'bignumber.js';\nimport dayjs from 'dayjs';\n\nimport {\n  BasicProposalState,\n  PayloadState,\n  Proposal,\n  ProposalData as BasicProposal,\n  ProposalEstimatedState,\n  ProposalState,\n  ProposalWaitForState,\n  VotingMachineProposalState,\n} from '../types';\nimport { normalizeBN, valueToBigNumber } from './bignumber';\nimport { checkHash } from './checkHash';\n\nexport function normalizeVotes(forVotes: string, againstVotes: string) {\n  const forVotesN = normalizeBN(forVotes, 18).toNumber();\n  const againstVotesN = normalizeBN(againstVotes, 18).toNumber();\n\n  return { forVotes: forVotesN, againstVotes: againstVotesN };\n}\n\nexport function formatQuorum(\n  forVotes: string,\n  quorum: number,\n  precisionDivider: string,\n) {\n  const minQuorumVotes =\n    valueToBigNumber(quorum).multipliedBy(precisionDivider);\n  const normalizeMinQuorumVotes = normalizeBN(minQuorumVotes, 18).toNumber();\n\n  let quorumReached = false;\n  if (valueToBigNumber(forVotes).gte(minQuorumVotes)) {\n    quorumReached = true;\n  }\n\n  return {\n    minQuorumVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n  };\n}\n\nexport function formatDiff(\n  forVotes: string,\n  againstVotes: string,\n  differential: number,\n  precisionDivider: string,\n) {\n  const diff = valueToBigNumber(forVotes).minus(againstVotes);\n  const requiredDiff =\n    valueToBigNumber(differential).multipliedBy(precisionDivider);\n  const normalizeRequiredDiff = normalizeBN(requiredDiff, 18).toNumber();\n\n  return { diff, requiredDiff, normalizeRequiredDiff };\n}\n\ninterface BasicProposalWithConfigsData {\n  proposalData: BasicProposal;\n  quorum: number;\n  differential: number;\n  precisionDivider: string;\n  cooldownPeriod: number;\n  executionPayloadTime: number;\n}\n\nexport function getProposalStepsAndAmounts({\n  proposalData,\n  quorum,\n  differential,\n  precisionDivider,\n  cooldownPeriod,\n  executionPayloadTime,\n}: BasicProposalWithConfigsData) {\n  const now = dayjs().unix();\n\n  const isVotingStarted =\n    proposalData.votingMachineState > VotingMachineProposalState.NotCreated;\n  const isVotingEnded =\n    proposalData.votingMachineData.endTime > 0 &&\n    now > proposalData.votingMachineData.endTime;\n\n  const isVotingClosed =\n    proposalData.votingMachineData.votingClosedAndSentTimestamp > 0 &&\n    now > proposalData.votingMachineData.votingClosedAndSentTimestamp;\n\n  const { forVotes, againstVotes } = normalizeVotes(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n  );\n  const { normalizeMinQuorumVotes, quorumReached } = formatQuorum(\n    proposalData.votingMachineData.forVotes,\n    quorum,\n    precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n    differential,\n    precisionDivider,\n  );\n\n  const lastPayloadQueuedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.queuedAt || 0),\n  );\n  const lastPayloadExecutedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.executedAt || 0),\n  );\n  const lastPayloadCanceledAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.cancelledAt || 0),\n  );\n  const lastPayloadExpiredAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (!!payload?.executedAt) {\n        if (payload.queuedAt <= 0 && payload.state === PayloadState.Expired) {\n          return payload.expirationTime;\n        } else if (\n          payload.queuedAt > 0 &&\n          payload.state === PayloadState.Expired\n        ) {\n          return payload.queuedAt + payload.delay + payload.gracePeriod;\n        } else {\n          return 0;\n        }\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const predictPayloadExpiredTime = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (payload?.state && payload.state === PayloadState.Created) {\n        return payload.expirationTime;\n      } else if (payload?.state && payload.state === PayloadState.Queued) {\n        return payload.queuedAt + payload.delay + payload.gracePeriod;\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const allPayloadsExecuted = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Executed,\n  );\n  const allPayloadsCanceled = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Cancelled,\n  );\n  const allPayloadsExpired = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Expired,\n  );\n\n  const isCanceled =\n    proposalData.basicState === BasicProposalState.Cancelled ||\n    allPayloadsCanceled;\n\n  const isExpired =\n    proposalData.basicState === BasicProposalState.Expired ||\n    allPayloadsExpired;\n\n  const isVotingActive = isVotingStarted && !isVotingEnded && !isCanceled;\n\n  const isVotingFailed =\n    isVotingEnded &&\n    (againstVotes > forVotes + normalizeRequiredDiff ||\n      (againstVotes === 0 && forVotes === 0));\n\n  const isProposalQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    proposalData.votingMachineData.sentToGovernance &&\n    proposalData.queuingTime > 0 &&\n    now > proposalData.queuingTime + cooldownPeriod;\n\n  const isProposalExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled;\n\n  const isPayloadsQueued =\n    isProposalExecuted && now > lastPayloadQueuedAt + executionPayloadTime;\n\n  const isPayloadsExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled &&\n    allPayloadsExecuted &&\n    !isExpired;\n\n  let isProposalActive = true;\n  if (\n    proposalData.basicState === BasicProposalState.Null ||\n    proposalData.basicState === BasicProposalState.Created\n  ) {\n    isProposalActive = false;\n  } else if (isCanceled) {\n    isProposalActive = false;\n  } else if (isVotingFailed) {\n    isProposalActive = false;\n  } else if (isPayloadsExecuted) {\n    isProposalActive = false;\n  } else if (isExpired) {\n    isProposalActive = false;\n  }\n\n  return {\n    forVotes,\n    againstVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingStarted,\n    isVotingActive,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    lastPayloadQueuedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExecutedAt,\n    lastPayloadExpiredAt,\n    predictPayloadExpiredTime,\n    allPayloadsExecuted,\n    allPayloadsCanceled,\n    allPayloadsExpired,\n    isCanceled,\n    isExpired,\n    isProposalActive,\n    isProposalQueued,\n    isProposalExecuted,\n    isPayloadsQueued,\n    isPayloadsExecuted,\n  };\n}\n\nexport function getProposalState({ ...data }: BasicProposalWithConfigsData) {\n  const {\n    forVotes,\n    againstVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingActive,\n    isVotingEnded,\n    isVotingFailed,\n    isExpired,\n    allPayloadsExecuted,\n    isCanceled,\n    isPayloadsExecuted,\n  } = getProposalStepsAndAmounts(data);\n\n  if (\n    !isCanceled &&\n    data.proposalData.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    data.proposalData.basicState <= BasicProposalState.Active\n  ) {\n    return ProposalState.Created;\n  } else if (\n    isVotingActive &&\n    checkHash(data.proposalData.snapshotBlockHash).notZero\n  ) {\n    return ProposalState.Active;\n  } else if (\n    isVotingEnded &&\n    !isCanceled &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached &&\n    !allPayloadsExecuted &&\n    !isExpired\n  ) {\n    return ProposalState.Succeed;\n  } else if (isVotingFailed && !isCanceled) {\n    return ProposalState.Defeated;\n  } else if (isCanceled) {\n    return ProposalState.Canceled;\n  } else if (isPayloadsExecuted) {\n    return ProposalState.Executed;\n  } else {\n    return ProposalState.Expired;\n  }\n}\n\nfunction getStateTimestamp(proposal: Proposal) {\n  const {\n    isVotingEnded,\n    isVotingStarted,\n    isExpired,\n    lastPayloadExecutedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExpiredAt,\n    allPayloadsExpired,\n    isCanceled,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (proposal.state === ProposalState.Created && !isExpired && !isCanceled) {\n    return proposal.data.creationTime;\n  } else if (\n    proposal.data.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return (\n      proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n    );\n  } else if (\n    checkHash(proposal.data.snapshotBlockHash).notZero &&\n    !isVotingStarted &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingActivationTime;\n  } else if (!isVotingEnded && isVotingStarted && !isExpired && !isCanceled) {\n    return proposal.data.votingMachineData.startTime;\n  } else if (\n    isVotingStarted &&\n    isVotingEnded &&\n    proposal.state !== ProposalState.Executed &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingMachineData.endTime > 0\n      ? proposal.data.votingMachineData.endTime\n      : proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart;\n  } else if (proposal.state === ProposalState.Defeated) {\n    return proposal.data.votingMachineData.endTime;\n  } else if (proposal.state === ProposalState.Executed) {\n    return lastPayloadExecutedAt;\n  } else if (proposal.state === ProposalState.Canceled) {\n    return lastPayloadCanceledAt > proposal.data.canceledAt\n      ? lastPayloadCanceledAt\n      : proposal.data.canceledAt;\n  } else if (\n    proposal.data.basicState === BasicProposalState.Executed &&\n    allPayloadsExpired\n  ) {\n    return lastPayloadExpiredAt;\n  } else {\n    return proposal.data.creationTime + proposal.timings.expirationTime;\n  }\n}\n\nexport function getEstimatedState(\n  proposal: Proposal,\n  forVotesS: string,\n  againstVotesS: string,\n) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    lastPayloadQueuedAt,\n    predictPayloadExpiredTime,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const { forVotes, againstVotes } = normalizeVotes(forVotesS, againstVotesS);\n  const { quorumReached } = formatQuorum(\n    forVotesS,\n    proposal.config.quorum,\n    proposal.precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    forVotesS,\n    againstVotesS,\n    proposal.config.differential,\n    proposal.precisionDivider,\n  );\n\n  const isVotingDefeated =\n    againstVotes > forVotes + normalizeRequiredDiff ||\n    (againstVotes === 0 && forVotes === 0) ||\n    !quorumReached;\n\n  const isProposalWaitForQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingDefeated &&\n    proposal.data.votingMachineData.sentToGovernance &&\n    proposal.data.queuingTime > 0 &&\n    now < proposal.data.queuingTime + proposal.timings.cooldownPeriod;\n\n  const isPayloadsWaitForQueued =\n    proposal.data.basicState === BasicProposalState.Executed &&\n    now < lastPayloadQueuedAt + proposal.timings.executionPayloadTime;\n\n  const executedTimestamp =\n    proposal.data.queuingTime > 0 && lastPayloadQueuedAt === 0\n      ? proposal.data.queuingTime + proposal.timings.cooldownPeriod\n      : proposal.data.queuingTime > 0 && lastPayloadQueuedAt > 0\n      ? lastPayloadQueuedAt + proposal.timings.executionPayloadTime\n      : 0;\n\n  if (\n    now <=\n    proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Active,\n      timestampForEstimatedState:\n        proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart,\n    };\n  } else if (\n    isVotingStarted &&\n    !isVotingEnded &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Succeed,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isVotingDefeated && isVotingStarted && !isVotingEnded) {\n    return {\n      estimatedState: ProposalEstimatedState.Defeated,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isProposalWaitForQueued && !isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.ProposalExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else if (isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.PayloadsExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else {\n    return {\n      estimatedState: ProposalEstimatedState.Expired,\n      timestampForEstimatedState:\n        proposal.data.basicState === BasicProposalState.Executed\n          ? predictPayloadExpiredTime\n          : proposal.data.creationTime + proposal.timings.expirationTime,\n    };\n  }\n}\n\nexport function getWaitForState(proposal: Proposal) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    isProposalExecuted,\n    isProposalQueued,\n    isPayloadsQueued,\n    lastPayloadQueuedAt,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (!isVotingFailed) {\n    if (\n      now >\n        proposal.data.creationTime +\n          proposal.config.coolDownBeforeVotingStart &&\n      !isVotingStarted &&\n      !isVotingEnded &&\n      !isVotingClosed\n    ) {\n      return ProposalWaitForState.WaitForActivateVoting;\n    } else if (isVotingStarted && isVotingEnded && !isVotingClosed) {\n      return ProposalWaitForState.WaitForCloseVoting;\n    } else if (\n      isVotingStarted &&\n      isVotingEnded &&\n      isVotingClosed &&\n      proposal.data.votingMachineData.sentToGovernance &&\n      proposal.data.queuingTime <= 0\n    ) {\n      return ProposalWaitForState.WaitForQueueProposal;\n    } else if (\n      isProposalQueued &&\n      proposal.data.basicState !== BasicProposalState.Executed\n    ) {\n      return ProposalWaitForState.WaitForExecuteProposal;\n    } else if (isProposalExecuted && lastPayloadQueuedAt === 0) {\n      return ProposalWaitForState.WaitForQueuePayloads;\n    } else if (isPayloadsQueued) {\n      return ProposalWaitForState.WaitForExecutePayloads;\n    } else {\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nexport function formatProposal(proposal: Proposal) {\n  const {\n    forVotes,\n    normalizeMinQuorumVotes,\n    againstVotes,\n    normalizeRequiredDiff,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const stateTimestamp = getStateTimestamp(proposal);\n  const { estimatedState, timestampForEstimatedState } = getEstimatedState(\n    proposal,\n    proposal.data.votingMachineData.forVotes,\n    proposal.data.votingMachineData.againstVotes,\n  );\n  const waitForState = getWaitForState(proposal);\n\n  const allVotes = new BigNumber(proposal.data.votingMachineData.forVotes).plus(\n    proposal.data.votingMachineData.againstVotes,\n  );\n\n  const votingPowerBasic = proposal.balances\n    .map((balance) => valueToBigNumber(balance.basicValue).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingPower = proposal.balances\n    .map((balance) => valueToBigNumber(balance.value).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingTokens = proposal.balances;\n\n  const requiredForVotes =\n    normalizeMinQuorumVotes - againstVotes > normalizeRequiredDiff\n      ? normalizeMinQuorumVotes - againstVotes\n      : againstVotes + normalizeRequiredDiff;\n  const requiredAgainstVotes =\n    forVotes === 0 ? 0 : forVotes + normalizeRequiredDiff;\n\n  const forPercent = allVotes.gt(0)\n    ? new BigNumber(forVotes)\n        .dividedBy(requiredForVotes)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n  const againstPercent = allVotes.gt(0)\n    ? new BigNumber(againstVotes)\n        .dividedBy(requiredAgainstVotes > 0 ? requiredAgainstVotes : 1)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n\n  return {\n    forPercent,\n    forVotes,\n    againstPercent,\n    againstVotes,\n    minQuorumVotes: normalizeMinQuorumVotes,\n    requiredDiff: normalizeRequiredDiff,\n    requiredForVotes,\n    requiredAgainstVotes,\n    stateTimestamp,\n    estimatedState,\n    timestampForEstimatedState,\n    waitForState,\n    votingPowerBasic,\n    votingPower,\n    votedPower: normalizeBN(\n      proposal.data.votingMachineData.votedInfo.votingPower,\n      18,\n    ).toNumber(),\n    votingTokens,\n  };\n}\n","import { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\n// TODO: need added mainnets\nconst getAverageBlockTime = (chainId: number) => {\n  switch (chainId) {\n    case ChainIdByName.Sepolia:\n      return 15;\n    case ChainIdByName.AvalancheFuji:\n      return 5;\n    case ChainIdByName.Mumbai:\n      return 3;\n    case ChainIdByName.BnbTest:\n      return 3;\n    default:\n      return 15;\n  }\n};\n\nexport async function getBlockNumberByTimestamp(\n  chainId: number,\n  targetTimestamp: number,\n  provider: ethers.providers.JsonRpcBatchProvider,\n) {\n  const blocksDiff = 100;\n  const MAX_ITERATIONS = 10;\n\n  let iterationCount = 0;\n  let averageBlockTime = getAverageBlockTime(chainId);\n\n  const currentBlock = await provider.getBlock('latest');\n\n  if (targetTimestamp > currentBlock.timestamp) {\n    throw new Error('Target timestamp is in the future.');\n  }\n\n  let previousBlockTimestamp = currentBlock.timestamp;\n  let previousBlockNumber = currentBlock.number;\n  let estimatedBlockNumber;\n  let estimatedBlock;\n\n  do {\n    // Make a guess\n    estimatedBlockNumber = Math.max(\n      0,\n      currentBlock.number -\n        Math.floor(\n          (previousBlockTimestamp - targetTimestamp) / averageBlockTime,\n        ),\n    );\n\n    // Get block data\n    estimatedBlock = await provider.getBlock(estimatedBlockNumber);\n\n    // Calculate a new average block time based on the difference of the timestamps\n    averageBlockTime =\n      (estimatedBlock.timestamp - previousBlockTimestamp) /\n      (estimatedBlockNumber - previousBlockNumber);\n\n    previousBlockTimestamp = estimatedBlock.timestamp;\n    previousBlockNumber = estimatedBlock.number;\n\n    iterationCount++;\n  } while (\n    Math.abs(estimatedBlock.timestamp - targetTimestamp) >\n      blocksDiff * averageBlockTime &&\n    iterationCount < MAX_ITERATIONS\n  );\n\n  if (iterationCount === MAX_ITERATIONS) {\n    throw new Error('Maximum iterations reached without converging.');\n  }\n\n  // if estimated block timestamp <= target\n  let minBlockNumber = estimatedBlock.number - 1;\n  let maxBlockNumber = estimatedBlock.number + blocksDiff * 2;\n\n  // if estimated block timestamp > target\n  if (estimatedBlock.timestamp > targetTimestamp) {\n    minBlockNumber = estimatedBlock.number - blocksDiff * 2;\n    maxBlockNumber = estimatedBlock.number;\n  }\n\n  return {\n    minBlockNumber,\n    maxBlockNumber,\n  };\n}\n","import { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { VotingConfig } from '../types';\n\nexport async function getGovCoreConfigs(\n  govCoreDataHelper: IGovernanceDataHelper,\n  govCoreContractAddress: string,\n) {\n  const accessLevels = [1, 2]; // access levels that we can’t get from contracts in any way, so far there are only two of them, we need to keep an eye on that suddenly there will be more of them\n  const constants = await govCoreDataHelper.getConstants(\n    govCoreContractAddress,\n    accessLevels,\n  );\n\n  const contractsConstants = {\n    precisionDivider: constants.precisionDivider.toString(),\n    cooldownPeriod: constants.cooldownPeriod.toNumber(),\n    expirationTime: constants.expirationTime.toNumber(),\n    cancellationFee: constants.cancellationFee.toString(),\n  };\n\n  const configs: VotingConfig[] = [];\n\n  for (let i = 0; i < accessLevels.length; i++) {\n    const votingConfig = constants.votingConfigs[i];\n\n    const config: VotingConfig = {\n      accessLevel: votingConfig.accessLevel,\n      votingDuration: votingConfig.config.votingDuration,\n      quorum: votingConfig.config.yesThreshold.toNumber() || 200,\n      differential: votingConfig.config.yesNoDifferential.toNumber() || 50,\n      coolDownBeforeVotingStart: votingConfig.config.coolDownBeforeVotingStart,\n      minPropositionPower: votingConfig.config.minPropositionPower.toNumber(),\n    };\n\n    configs.push(config);\n  }\n\n  return {\n    contractsConstants,\n    configs,\n  };\n}\n","// payloads created\nimport { IGovernanceCore } from '../contracts/IGovernanceCore';\nimport { IPayloadsControllerCore } from '../contracts/IPayloadsControllerCore';\nimport { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { blockLimit, getEventsBySteps } from './eventsHelpres';\n\nasync function getPayloadsCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsCreated(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal created\nasync function getProposalCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalCreated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal activate for voting\nasync function getProposalActivatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.VotingActivated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting activate on VM\nasync function getProposalActivatedOnVMEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalVoteStarted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivatedOnVM(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedOnVMEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting closed on VM and voting results sent\nasync function getProposalVotingClosedEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalResultsSent(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalVotingClosed(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalVotingClosedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal queued\nasync function getProposalQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalQueued(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads queued\nasync function getPayloadsQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsQueued(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads executed\nasync function getPayloadsExecutedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadExecuted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsExecuted(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsExecutedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import dayjs from 'dayjs';\nimport { ethers } from 'ethers';\n\nimport { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { IVotingMachineDataHelper } from '../contracts/IVotingMachineDataHelper';\nimport {\n  BasicProposal,\n  ProposalData,\n  VotingMachineProposalState,\n} from '../types';\n\nexport function getVotingMachineProposalState(proposal: BasicProposal) {\n  const now = dayjs().unix();\n  if (proposal.votingMachineData.startTime === 0) {\n    return VotingMachineProposalState.NotCreated;\n  } else if (now <= proposal.votingMachineData.endTime) {\n    return VotingMachineProposalState.Active;\n  } else if (proposal.votingMachineData.votingClosedAndSentBlockNumber === 0) {\n    return VotingMachineProposalState.Finished;\n  } else {\n    return VotingMachineProposalState.SentToGovernance;\n  }\n}\n\nexport function formatVotingMachineData(\n  id: number,\n  votingMachineData: IVotingMachineDataHelper.ProposalStructOutput,\n) {\n  return {\n    id: id,\n    forVotes: votingMachineData.proposalData.forVotes.toString(),\n    againstVotes: votingMachineData.proposalData.againstVotes.toString(),\n    startTime: votingMachineData.proposalData.startTime,\n    endTime: votingMachineData.proposalData.endTime,\n    votingClosedAndSentBlockNumber:\n      votingMachineData.proposalData.votingClosedAndSentBlockNumber.toNumber(),\n    votingClosedAndSentTimestamp:\n      votingMachineData.proposalData.votingClosedAndSentTimestamp,\n    l1BlockHash:\n      votingMachineData?.voteConfig.l1ProposalBlockHash ||\n      ethers.constants.HashZero,\n    strategy: votingMachineData.strategy,\n    sentToGovernance: votingMachineData.proposalData.sentToGovernance,\n    createdBlock: votingMachineData.proposalData.creationBlockNumber.toNumber(),\n    votedInfo: {\n      support: votingMachineData.votedInfo.support,\n      votingPower: votingMachineData.votedInfo.votingPower.toString(),\n    },\n    votingAssets: votingMachineData.votingAssets,\n    hasRequiredRoots: votingMachineData.hasRequiredRoots,\n  };\n}\n\nexport function updateVotingMachineData(\n  proposals: ProposalData[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n) {\n  const proposalsData: BasicProposal[] = [];\n\n  ids.forEach((id) => {\n    const govData = proposals.find((proposal) => proposal?.id === id);\n    if (govData) {\n      const votingMachineData =\n        votingMachineDataHelperData.find(\n          (proposal) => proposal.proposalData.id.toNumber() === govData.id,\n        ) || votingMachineDataHelperData[0];\n\n      const proposalData = {\n        id: govData.id,\n        votingDuration:\n          +votingMachineData?.voteConfig.votingDuration ||\n          govData.votingDuration,\n        creationTime: govData.creationTime,\n        accessLevel: govData.accessLevel,\n        basicState: govData.basicState,\n        queuingTime: govData.queuingTime,\n        ipfsHash: govData.ipfsHash,\n        initialPayloads: govData.initialPayloads,\n        snapshotBlockHash: govData.snapshotBlockHash,\n        creator: govData.creator,\n        canceledAt: govData.canceledAt,\n        votingActivationTime: govData.votingActivationTime,\n        votingChainId: govData.votingChainId,\n        votingMachineData: formatVotingMachineData(\n          govData.id,\n          votingMachineData,\n        ),\n        prerender: govData.prerender,\n      };\n\n      proposalsData.push(proposalData);\n    }\n  });\n\n  return proposalsData;\n}\n\nexport function getDetailedProposalsData(\n  govCoreDataHelperData: IGovernanceDataHelper.ProposalStructOutput[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n  prerender?: boolean,\n): BasicProposal[] {\n  const proposalsData: BasicProposal[] = [];\n\n  for (let i = 0; i < ids.length; i++) {\n    const govData = govCoreDataHelperData[i];\n\n    const votingMachineData =\n      votingMachineDataHelperData.find(\n        (proposal) =>\n          proposal.proposalData.id.toNumber() === govData.id.toNumber(),\n      ) || votingMachineDataHelperData[i];\n\n    const proposalData = {\n      id: govData.id.toNumber(),\n      votingDuration:\n        +votingMachineData?.voteConfig.votingDuration ||\n        +govData.proposalData.votingDuration,\n      creationTime: +govData.proposalData.creationTime,\n      accessLevel: +govData.proposalData.accessLevel,\n      basicState: +govData.proposalData.state,\n      queuingTime: +govData.proposalData.queuingTime,\n      ipfsHash: govData.proposalData.ipfsHash,\n      initialPayloads: govData.proposalData.payloads.map((payload) => {\n        return {\n          id: payload.payloadId,\n          chainId: payload.chain.toNumber(),\n          payloadsController: payload.payloadsController,\n        };\n      }),\n      snapshotBlockHash: govData.proposalData.snapshotBlockHash,\n      creator: govData.proposalData.creator,\n      canceledAt: govData.proposalData.cancelTimestamp,\n      votingActivationTime: govData.proposalData.votingActivationTime,\n      votingChainId: govData.votingChainId.toNumber(),\n      votingMachineData: formatVotingMachineData(\n        govData.id.toNumber(),\n        votingMachineData,\n      ),\n      prerender: !!prerender,\n    };\n\n    proposalsData.push(proposalData);\n  }\n\n  return proposalsData;\n}\n","import { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { normalizeBN } from './bignumber';\nimport { getEventsBySteps } from './eventsHelpres';\n\nasync function getVoteEvents(\n  votingMachine: IVotingMachineWithProofs,\n  startBlock: number,\n  endBlock: number,\n  chainId: number,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.VoteEmitted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      address: event.args.voter.toString(),\n      support: event.args.support,\n      votingPower: normalizeBN(\n        event.args.votingPower.toString(),\n        18,\n      ).toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      chainId,\n    }));\n}\n\nexport async function getVoters(\n  endBlock: number,\n  startBlock: number,\n  blockLimit: number,\n  votingMachine: IVotingMachineWithProofs,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getVoteEvents(\n      votingMachine,\n      startBlockNumber,\n      endBlockNumber,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import { ethers } from 'ethers';\nimport { base58 } from 'ethers/lib/utils';\nimport matter from 'gray-matter';\n\nimport { ProposalMetadata } from '../types';\n\nexport const ipfsGateway = 'https://ipfs.io/ipfs';\n\nexport function getLink(hash: string, gateway: string): string {\n  return `${gateway}/${hash}`;\n}\ntype MemorizeMetadata = Record<string, ProposalMetadata>;\n\nconst MEMORIZE: MemorizeMetadata = {};\n\nconst incorectedHashses = [\n  '0x0000000000000000000000000000000000000000000000000000000000000020',\n  ethers.constants.HashZero,\n];\n\nexport async function getProposalMetadata(\n  hash: string,\n  gateway = ipfsGateway,\n  setIpfsError?: (hash: string, text?: string) => void,\n  errorText?: string,\n): Promise<ProposalMetadata> {\n  const ipfsHash = hash.startsWith('0x')\n    ? base58.encode(Buffer.from(`1220${hash.slice(2)}`, 'hex'))\n    : hash;\n\n  if (MEMORIZE[ipfsHash]) return MEMORIZE[ipfsHash];\n\n  if (incorectedHashses.some((h) => hash === h)) {\n    if (!!setIpfsError) {\n      setIpfsError(hash, errorText);\n    } else {\n      throw Error('Fetch metadata form ipfs not working');\n    }\n  } else {\n    const ipfsResponse: Response = await fetch(getLink(ipfsHash, gateway));\n\n    if (!ipfsResponse.ok) {\n      if (!!setIpfsError) {\n        setIpfsError(hash);\n      } else {\n        throw Error('Fetch metadata form ipfs not working');\n      }\n    }\n\n    const clone = ipfsResponse.clone();\n    try {\n      const response: ProposalMetadata = await ipfsResponse.json();\n\n      const { content } = matter(response.description);\n\n      MEMORIZE[ipfsHash] = {\n        title: response.title,\n        aip: response.aip,\n        originalIpfsHash: hash,\n        author: response.author,\n        discussions: response.discussions,\n        shortDescription: response.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    } catch (e) {\n      const text = await clone.text();\n      const { content, data } = matter(text);\n      MEMORIZE[ipfsHash] = {\n        title: data.title,\n        aip: data.aip,\n        originalIpfsHash: hash,\n        author: data.author,\n        discussions: data.discussions,\n        shortDescription: data.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    }\n  }\n\n  return MEMORIZE[ipfsHash];\n}\n"],"names":["ChainIdByName","BasicProposalState","VotingMachineProposalState","PayloadState","ProposalState","ProposalStateWithName","ProposalEstimatedState","ProposalWaitForState","govCoreConfig","goerli","contractAddress","dataHelperContractAddress","votingPortals","_votingPortals","Goerli","sepolia","_votingPortals2","Sepolia","payloadsControllerConfig","_goerli","contractAddresses","payloadAddress","_sepolia","votingMachineConfig","_goerli2","dataWarehouseAddress","_sepolia2","govCoreChainId","aditionalsAddresses","aaveAddress","aAaveAddress","stkAAVEAddress","delegationHelper","votingMachineChainIds","payloadsControllerChainIds","gelatoApiKeys","testnet","mainnet","valueToBigNumber","amount","BigNumber","normalizeBN","n","decimals","shiftedBy","checkHash","hash","notZero","ethers","constants","HashZero","zero","getEventsBySteps","_x","_x2","_x3","_x4","_getEventsBySteps","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","startBlock","endBlock","blockLimit","callbackFunc","blockSteps","eventsCountArray","i","wrap","_context2","prev","next","Math","ceil","Array","Promise","all","map","_ref","_callee","count","startBlockNumber","endBlockNumber","_context","abrupt","sent","stop","_x5","flat","normalizeVotes","forVotes","againstVotes","toNumber","formatQuorum","quorum","precisionDivider","minQuorumVotes","multipliedBy","normalizeMinQuorumVotes","quorumReached","gte","formatDiff","differential","diff","minus","requiredDiff","normalizeRequiredDiff","getProposalStepsAndAmounts","proposalData","cooldownPeriod","executionPayloadTime","now","dayjs","unix","isVotingStarted","votingMachineState","NotCreated","isVotingEnded","votingMachineData","endTime","isVotingClosed","votingClosedAndSentTimestamp","_normalizeVotes","_formatQuorum","lastPayloadQueuedAt","max","payloads","payload","queuedAt","lastPayloadExecutedAt","executedAt","lastPayloadCanceledAt","cancelledAt","lastPayloadExpiredAt","state","Expired","expirationTime","delay","gracePeriod","predictPayloadExpiredTime","Created","Queued","allPayloadsExecuted","every","Executed","allPayloadsCanceled","Cancelled","allPayloadsExpired","isCanceled","basicState","isExpired","isVotingFailed","isProposalExecuted","isPayloadsExecuted","isProposalActive","Null","isVotingActive","isProposalQueued","sentToGovernance","queuingTime","isPayloadsQueued","getEstimatedState","proposal","forVotesS","againstVotesS","_getProposalStepsAndA3","data","config","timings","_normalizeVotes2","isVotingDefeated","isPayloadsWaitForQueued","executedTimestamp","creationTime","coolDownBeforeVotingStart","estimatedState","Active","timestampForEstimatedState","Succeed","Defeated","ProposalExecuted","PayloadsExecuted","getWaitForState","_getProposalStepsAndA4","WaitForActivateVoting","WaitForCloseVoting","WaitForQueueProposal","WaitForExecuteProposal","WaitForQueuePayloads","WaitForExecutePayloads","getAverageBlockTime","chainId","AvalancheFuji","Mumbai","BnbTest","_getBlockNumberByTimestamp","targetTimestamp","provider","blocksDiff","MAX_ITERATIONS","iterationCount","averageBlockTime","currentBlock","previousBlockTimestamp","previousBlockNumber","estimatedBlockNumber","estimatedBlock","minBlockNumber","maxBlockNumber","getBlock","timestamp","Error","number","floor","abs","_getGovCoreConfigs","govCoreDataHelper","govCoreContractAddress","accessLevels","contractsConstants","configs","votingConfig","getConstants","toString","cancellationFee","length","accessLevel","votingConfigs","votingDuration","yesThreshold","yesNoDifferential","minPropositionPower","push","getPayloadsCreatedEvents","_getPayloadsCreatedEvents","payloadsController","payloadsControllerAddress","queryFilter","filters","PayloadCreated","sort","a","b","blockNumber","event","payloadId","args","transactionHash","_getPayloadsCreated","_callee3","_context3","_x61","_x62","getProposalCreatedEvents","_x11","_x12","_x13","_getProposalCreatedEvents","_callee4","govCore","_context4","ProposalCreated","proposalId","_getProposalCreated","_callee6","_context6","_ref2","_callee5","_context5","_x63","_x64","getProposalActivatedEvents","_x17","_x18","_x19","_getProposalActivatedEvents","_callee7","_context7","VotingActivated","_getProposalActivated","_callee9","_context9","_ref3","_callee8","_context8","_x65","_x66","getProposalActivatedOnVMEvents","_x23","_x24","_x25","_getProposalActivatedOnVMEvents","_callee10","votingMachine","_context10","ProposalVoteStarted","_getProposalActivatedOnVM","_callee12","_context12","_ref4","_callee11","_context11","_x67","_x68","getProposalVotingClosedEvents","_x29","_x30","_x31","_getProposalVotingClosedEvents","_callee13","_context13","ProposalResultsSent","_getProposalVotingClosed","_callee15","_context15","_ref5","_callee14","_context14","_x69","_x70","getProposalQueuedEvents","_x35","_x36","_x37","_getProposalQueuedEvents","_callee16","_context16","ProposalQueued","_getProposalQueued","_callee18","_context18","_ref6","_callee17","_context17","_x71","_x72","getPayloadsQueuedEvents","_x41","_x42","_x43","_x44","_x45","_getPayloadsQueuedEvents","_callee19","_context19","PayloadQueued","_getPayloadsQueued","_callee21","_context21","_ref7","_callee20","_context20","_x73","_x74","getPayloadsExecutedEvents","_x51","_x52","_x53","_x54","_x55","_getPayloadsExecutedEvents","_callee22","_context22","PayloadExecuted","_getPayloadsExecuted","_callee24","_context24","_ref8","_callee23","_context23","_x75","_x76","formatVotingMachineData","id","startTime","votingClosedAndSentBlockNumber","l1BlockHash","voteConfig","l1ProposalBlockHash","strategy","createdBlock","creationBlockNumber","votedInfo","support","votingPower","votingAssets","hasRequiredRoots","getVoteEvents","_getVoteEvents","VoteEmitted","address","voter","_getVoters","_x10","getLink","gateway","MEMORIZE","incorectedHashses","_getProposalMetadata","setIpfsError","errorText","ipfsHash","ipfsResponse","clone","response","_matter","_matter2","startsWith","base58","encode","Buffer","from","slice","some","h","fetch","ok","json","matter","description","title","aip","originalIpfsHash","author","discussions","shortDescription","content","t0","text","providers","coreNetwork","additional","_getProposalStepsAndA5","stateTimestamp","_getProposalStepsAndA2","snapshotBlockHash","Canceled","canceledAt","votingActivationTime","getStateTimestamp","_getEstimatedState","waitForState","allVotes","plus","votingPowerBasic","balances","balance","basicValue","reduce","sum","value","votingTokens","requiredForVotes","requiredAgainstVotes","forPercent","gt","dividedBy","againstPercent","votedPower","lastBlockNumber","isFinite","govCoreDataHelperData","votingMachineDataHelperData","ids","prerender","proposalsData","_loop","govData","find","initialPayloads","chain","creator","cancelTimestamp","votingChainId","_x6","_x7","_x8","_x9","_x56","_x57","_x58","_x59","_x60","_x46","_x47","_x48","_x49","_x50","_x20","_x21","_x22","_x26","_x27","_x28","_x14","_x15","_x16","_x38","_x39","_x40","_extends","_objectDestructuringEmpty","_getProposalStepsAndA","_x32","_x33","_x34","Finished","SentToGovernance","proposals","forEach"],"mappings":"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"}