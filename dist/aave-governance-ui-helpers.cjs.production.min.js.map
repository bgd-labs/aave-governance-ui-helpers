{"version":3,"file":"aave-governance-ui-helpers.cjs.production.min.js","sources":["../src/helpers/chains.ts","../src/helpers/appConfig.ts","../src/types.ts","../src/helpers/bignumber.ts","../src/helpers/checkHash.ts","../src/helpers/eventsHelpres.ts","../src/helpers/formatProposal.ts","../src/helpers/getBlockNumberByTimestamp.ts","../src/helpers/getGovCoreConfigs.ts","../src/helpers/getHistoryEvents.ts","../src/helpers/getProposalData.ts","../src/helpers/getProposalEvents.ts","../src/helpers/getProposalMetadata.ts"],"sourcesContent":["export enum ChainIdByName {\n  Goerli = 5,\n  GoerliOptimism = 420,\n  AvalancheFuji = 43113,\n  Sepolia = 11155111,\n  Mumbai = 80001,\n  BnbTest = 97,\n}\n","// TODO: need integrate address book\n\nimport { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\nexport type CoreNetworkName = 'goerli' | 'sepolia'; // TODO: need add mainnet\n\ntype Config = {\n  contractAddress: string;\n  dataHelperContractAddress: string;\n};\n\nexport const govCoreConfig: Record<\n  CoreNetworkName,\n  Config & { votingPortals: Record<number, string> }\n> = {\n  // testnets\n  goerli: {\n    contractAddress: '0x586207Df62c7D5D1c9dBb8F61EdF77cc30925C4F',\n    dataHelperContractAddress: '0x160e2d1456B815d6a3d281218538dd6E2e3C841f',\n    votingPortals: {\n      [ChainIdByName.Goerli]: '0xFf376b6db4AF0d87Dba35860B3B87F526d7879cF',\n    },\n  },\n  sepolia: {\n    contractAddress: '0x84b3FE5eD74caC496BcB58d448A7c83c523F6E0E',\n    dataHelperContractAddress: '0x74bb7b600fA33E2A1945F8493D17db3b129513D2',\n    votingPortals: {\n      [ChainIdByName.Sepolia]: '0x5C77bF8505716904a1a73eB8c3909c0Da0DD49b3',\n    },\n  },\n};\n\nexport const payloadsControllerConfig: Record<\n  CoreNetworkName,\n  Record<\n    number,\n    Pick<Config, 'dataHelperContractAddress'> & {\n      contractAddresses: string[];\n      payloadAddress: string;\n    }\n  >\n> = {\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      dataHelperContractAddress: '0xbd2db358f3C82F2883132A6584e22F38A979e768',\n\n      // for create payload\n      contractAddresses: ['0x064361B3761CcDd17300146bf58a79d1E570382E'],\n      // TODO: (remove after release)\n      payloadAddress: '0xf6b9c3fCF7f91817E7bF0efF792BA692c7bd372A',\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      dataHelperContractAddress: '0x5c2AD703961c59Adb4412d402b8D694Eee48a822',\n\n      // for create payload\n      contractAddresses: ['0x7Bb94b2a8d9fD3f37345Ec5A0b46c234164b4f90'],\n      // TODO: (remove after release)\n      payloadAddress: '0xf19de078dbac9db382caf8015cb208667ec581c0',\n    },\n  },\n};\n\nconst votingMachineConfig: Record<\n  CoreNetworkName,\n  Record<number, Config & { dataWarehouseAddress: string }>\n> = {\n  // testnets\n  goerli: {\n    [ChainIdByName.Goerli]: {\n      contractAddress: '0xE8AD5ab6295c16D04257BC6Cd6D447ff4018FF89',\n      dataHelperContractAddress: '0xe10617A1ea760E174E82fBeb38a540d8ACe566f5',\n      dataWarehouseAddress: '0xC946cc6bb934bAf2A539BaB62c647aff09D2e2D8',\n    },\n  },\n  sepolia: {\n    [ChainIdByName.Sepolia]: {\n      contractAddress: '0xB379f8a3E62Ff807E827F853B36688d1d7aD692f',\n      dataHelperContractAddress: '0x8b5661024Bc97c1Fd71B4eCafCA88c316c3D438B',\n      dataWarehouseAddress: '0xdF6C1affD18Ecb318e4468d96b588bbbEac180E2',\n    },\n  },\n};\n\nconst govCoreChainId: Record<CoreNetworkName, number> = {\n  // testnets\n  goerli: ChainIdByName.Goerli,\n  sepolia: ChainIdByName.Sepolia,\n};\n\nconst aditionalsAddresses: Record<CoreNetworkName, Record<string, string>> = {\n  // testnets\n  goerli: {\n    aaveAddress: '0xb6D88BfC5b145a558b279cf7692e6F02064889d0',\n    aAaveAddress: '0xD1ff82609FB63A0eee6FE7D2896d80d29491cCCd',\n    stkAAVEAddress: '0x1406A9Ea2B0ec8FD4bCa4F876DAae2a70a9856Ec',\n\n    // for delegation\n    delegationHelper: '0x1966133c190475E8385Dc1b4150B5f81c70DC578',\n  },\n  sepolia: {\n    aaveAddress: '0x64033B2270fd9D6bbFc35736d2aC812942cE75fE',\n    aAaveAddress: '0x7d9EB767eEc260d1bCe8C518276a894aE5535F04',\n    stkAAVEAddress: '0xA4FDAbdE9eF3045F0dcF9221bab436B784B7e42D',\n\n    // for delegation\n    delegationHelper: '0x1633Bd6772020a797fB09a3b17D6AD9a95b98f01',\n  },\n};\n\nexport const votingMachineChainIds: Record<CoreNetworkName, number[]> = {\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia],\n};\n\nexport const payloadsControllerChainIds: Record<CoreNetworkName, number[]> = {\n  goerli: [ChainIdByName.Goerli],\n  sepolia: [ChainIdByName.Sepolia],\n};\n\nconst gelatoApiKeys: Record<string, string> = {\n  testnet: 'qGvvlJMoyDKyuMxqJjDwFslpgiBKZCXNXpnSjIxsICY_',\n  mainnet: '', // TODO: need add\n};\n\nexport const appConfigInit = (\n  providers: Record<number, ethers.providers.JsonRpcBatchProvider>,\n  coreNetwork: CoreNetworkName,\n) => {\n  return {\n    providers,\n    govCoreChainId: govCoreChainId[coreNetwork],\n    govCoreConfig: govCoreConfig[coreNetwork],\n    votingMachineConfig: votingMachineConfig[coreNetwork],\n    votingMachineChainIds: votingMachineChainIds[coreNetwork],\n    payloadsControllerConfig: payloadsControllerConfig[coreNetwork],\n    payloadsControllerChainIds: payloadsControllerChainIds[coreNetwork],\n\n    additional: aditionalsAddresses[coreNetwork],\n    gelatoApiKeys,\n  };\n};\n","export interface PayloadForCreation {\n  chain: number;\n  accessLevel: number;\n  payloadsController: string;\n  payloadId: number;\n}\n\nexport enum BasicProposalState {\n  Null,\n  Created,\n  Active,\n  Queued,\n  Executed,\n  Failed,\n  Cancelled,\n  Expired,\n}\n\nexport enum VotingMachineProposalState {\n  NotCreated,\n  Active,\n  Finished,\n  SentToGovernance,\n}\n\nexport enum PayloadState {\n  None,\n  Created,\n  Queued,\n  Executed,\n  Cancelled,\n  Expired,\n}\n\nexport enum ProposalState {\n  Created,\n  Active,\n  Succeed,\n  Defeated,\n  Executed,\n  Expired,\n  Canceled,\n}\n\nexport type VotersData = {\n  proposalId: number;\n  address: string;\n  support: boolean;\n  votingPower: number;\n  transactionHash: string;\n  blockNumber: number;\n  chainId: number;\n};\n\nexport type InitialProposal = {\n  id: number;\n  votingChainId: number;\n  snapshotBlockHash: string;\n};\n\nexport type VotingMachineData = {\n  id: number;\n  forVotes: string;\n  againstVotes: string;\n  startTime: number;\n  endTime: number;\n  votingClosedAndSentBlockNumber: number;\n  votingClosedAndSentTimestamp: number;\n  l1BlockHash: string;\n  strategy: string;\n  sentToGovernance: boolean;\n  createdBlock: number;\n  votedInfo: {\n    support: boolean;\n    votingPower: string;\n  };\n  votingAssets: string[];\n  hasRequiredRoots: boolean;\n};\n\nexport type Payload = {\n  id: number;\n  chainId: number;\n  maximumAccessLevelRequired: number;\n  state: PayloadState;\n  createdAt: number;\n  queuedAt: number;\n  executedAt: number;\n  cancelledAt: number;\n  expirationTime: number;\n  delay: number;\n  gracePeriod: number;\n  payloadsController: string;\n  actionAddresses: string[];\n};\n\n// type for create payload actions\nexport type PayloadAction = {\n  payloadAddress: string;\n  withDelegateCall: boolean;\n  accessLevel: number;\n  value: number;\n  signature: string;\n  callData?: string;\n};\n\nexport type VotingConfig = {\n  accessLevel: number;\n  quorum: number;\n  differential: number;\n  minPropositionPower: number;\n  coolDownBeforeVotingStart: number;\n  votingDuration: number;\n};\n\nexport type ContractsConstants = {\n  precisionDivider: string;\n  cooldownPeriod: number;\n  expirationTime: number;\n  cancellationFee: string;\n};\n\nexport type InitialPayload = {\n  id: number;\n  chainId: number;\n  payloadsController: string;\n};\n\nexport interface BasicProposal {\n  id: number;\n  votingDuration: number;\n  creationTime: number;\n  accessLevel: number;\n  basicState: BasicProposalState;\n  queuingTime: number;\n  ipfsHash: string;\n  initialPayloads: InitialPayload[];\n  votingMachineData: VotingMachineData;\n  snapshotBlockHash: string;\n  creator: string;\n  canceledAt: number;\n  votingActivationTime: number;\n  votingChainId: number;\n  prerender: boolean;\n}\n\nexport interface ProposalData\n  extends BasicProposal,\n    Pick<ProposalMetadata, 'title'> {\n  payloads: Payload[];\n  votingMachineState: VotingMachineProposalState;\n}\n\ntype BlockHash = string;\nexport type Balance = {\n  blockHash: string;\n  tokenName: string;\n  underlyingAsset: string;\n  value: string;\n  basicValue: string;\n  userBalance: string;\n  isWithDelegatedPower: boolean;\n};\n\nexport type VotingBalance = Record<BlockHash, Balance[]>;\n\nexport interface ProposalWithoutState {\n  data: ProposalData;\n  precisionDivider: string;\n  config: VotingConfig;\n  timings: {\n    cooldownPeriod: number;\n    expirationTime: number;\n    executionPayloadTime: number;\n  };\n  balances: Balance[];\n}\n\nexport interface Proposal extends ProposalWithoutState {\n  state: ProposalState;\n}\n\nexport interface ProposalWithLoadings {\n  loading: boolean;\n  balanceLoading: boolean;\n  proposal: Proposal;\n}\n\nexport interface ProposalWithId extends ProposalWithLoadings {\n  id: number;\n}\n\nexport enum ProposalStateWithName {\n  Created = 'Created',\n  Active = 'Voting',\n  Succeed = 'Passed',\n  Failed = 'Failed',\n  Defeated = 'Failed',\n  Executed = 'Executed',\n  Expired = 'Expired',\n  Canceled = 'Canceled',\n  ActiveAll = 'Active',\n}\n\nexport enum ProposalEstimatedState {\n  Active = 'Will open for voting',\n  Succeed = 'Will pass',\n  Defeated = 'Will fail',\n  ProposalExecuted = 'Proposal will be executed',\n  PayloadsExecuted = 'Payloads will be executed',\n  Expired = 'Will expire',\n}\n\nexport enum ProposalWaitForState {\n  WaitForActivateVoting = 'Pending voting activation',\n  WaitForCloseVoting = 'Pending voting closure',\n  WaitForQueueProposal = 'Proposal is time-locked',\n  WaitForExecuteProposal = 'Pending proposal execution',\n  WaitForQueuePayloads = 'Payloads are time-locked',\n  WaitForExecutePayloads = 'Pending payloads execution',\n}\n\nexport type ProposalMetadata = {\n  title: string;\n  description: string;\n  shortDescription: string;\n  ipfsHash: string;\n  originalIpfsHash: string;\n  aip: number;\n  discussions: string;\n  author: string;\n};\n\nexport interface FinishedProposalForList\n  extends Pick<ProposalMetadata, 'title'> {\n  id: number;\n  state: ProposalState;\n  finishedTimestamp: number;\n  ipfsHash: string;\n}\n\nexport interface CachedProposalDataItem {\n  proposal: {\n    data: {\n      id: number;\n      finishedTimestamp: number;\n      title: string;\n      ipfsHash: string;\n    };\n    state: ProposalState;\n  };\n}\n\nexport interface CachedProposalDataItemWithId extends CachedProposalDataItem {\n  id: number;\n}\n\nexport interface CachedDetails {\n  payloads: Payload[];\n  ipfs: ProposalMetadata;\n  proposal: BasicProposal;\n}\n","import { BigNumber } from 'bignumber.js';\n\nexport type BigNumberValue = string | number | BigNumber;\n\nexport function valueToBigNumber(amount: BigNumberValue): BigNumber {\n  if (amount instanceof BigNumber) {\n    return amount;\n  }\n\n  return new BigNumber(amount);\n}\n\nexport function normalize(n: BigNumberValue, decimals: number): string {\n  return normalizeBN(n, decimals).toString(10);\n}\n\nexport function normalizeBN(n: BigNumberValue, decimals: number): BigNumber {\n  return valueToBigNumber(n).shiftedBy(decimals * -1);\n}\n","import { ethers } from 'ethers';\n\nexport function checkHash(hash: string) {\n  return {\n    notZero: hash !== ethers.constants.HashZero,\n    zero: hash === ethers.constants.HashZero,\n  };\n}\n","export const blockLimit = 1023;\n\nexport function getBlocksForEvents(\n  currentBlock: number,\n  startBlockNumber: number,\n  endBlockNumber: number | undefined,\n  lastBlockNumber: number | undefined,\n): { startBlock: number; endBlock: number } {\n  const endBlock =\n    endBlockNumber && endBlockNumber > 0 && endBlockNumber < currentBlock\n      ? endBlockNumber\n      : !!lastBlockNumber &&\n        isFinite(lastBlockNumber) &&\n        lastBlockNumber > startBlockNumber &&\n        lastBlockNumber < currentBlock\n      ? lastBlockNumber + 1\n      : currentBlock > startBlockNumber + blockLimit\n      ? startBlockNumber + blockLimit\n      : currentBlock;\n\n  const startBlock =\n    !!lastBlockNumber &&\n    isFinite(lastBlockNumber) &&\n    lastBlockNumber > startBlockNumber &&\n    lastBlockNumber < currentBlock &&\n    lastBlockNumber < endBlock\n      ? lastBlockNumber\n      : startBlockNumber < currentBlock\n      ? startBlockNumber\n      : currentBlock - blockLimit;\n\n  return { startBlock, endBlock };\n}\n\nexport async function getEventsBySteps<T>(\n  startBlock: number,\n  endBlock: number,\n  blockLimit: number,\n  callbackFunc: (startBlock: number, endBlock: number) => Promise<T>,\n) {\n  const blockSteps = Math.ceil((endBlock - startBlock) / blockLimit);\n\n  const eventsCountArray = new Array(blockSteps);\n  for (let i = 0; i < blockSteps; i++) {\n    eventsCountArray[i] = i;\n  }\n\n  const results = await Promise.all(\n    eventsCountArray.map(async (count) => {\n      const startBlockNumber = startBlock + blockLimit * count;\n      const endBlockNumber = startBlock + (blockLimit * count + blockLimit);\n\n      return await callbackFunc(\n        startBlockNumber,\n        endBlock > endBlockNumber ? endBlockNumber : endBlock,\n      );\n    }),\n  );\n\n  return results.flat();\n}\n","import { BigNumber } from 'bignumber.js';\nimport dayjs from 'dayjs';\n\nimport {\n  BasicProposalState,\n  PayloadState,\n  Proposal,\n  ProposalData as BasicProposal,\n  ProposalEstimatedState,\n  ProposalState,\n  ProposalWaitForState,\n  VotingMachineProposalState,\n} from '../types';\nimport { normalizeBN, valueToBigNumber } from './bignumber';\nimport { checkHash } from './checkHash';\n\nexport function normalizeVotes(forVotes: string, againstVotes: string) {\n  const forVotesN = normalizeBN(forVotes, 18).toNumber();\n  const againstVotesN = normalizeBN(againstVotes, 18).toNumber();\n\n  return { forVotes: forVotesN, againstVotes: againstVotesN };\n}\n\nexport function formatQuorum(\n  forVotes: string,\n  quorum: number,\n  precisionDivider: string,\n) {\n  const minQuorumVotes =\n    valueToBigNumber(quorum).multipliedBy(precisionDivider);\n  const normalizeMinQuorumVotes = normalizeBN(minQuorumVotes, 18).toNumber();\n\n  let quorumReached = false;\n  if (valueToBigNumber(forVotes).gte(minQuorumVotes)) {\n    quorumReached = true;\n  }\n\n  return {\n    minQuorumVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n  };\n}\n\nexport function formatDiff(\n  forVotes: string,\n  againstVotes: string,\n  differential: number,\n  precisionDivider: string,\n) {\n  const diff = valueToBigNumber(forVotes).minus(againstVotes);\n  const requiredDiff =\n    valueToBigNumber(differential).multipliedBy(precisionDivider);\n  const normalizeRequiredDiff = normalizeBN(requiredDiff, 18).toNumber();\n\n  return { diff, requiredDiff, normalizeRequiredDiff };\n}\n\ninterface BasicProposalWithConfigsData {\n  proposalData: BasicProposal;\n  quorum: number;\n  differential: number;\n  precisionDivider: string;\n  cooldownPeriod: number;\n  executionPayloadTime: number;\n}\n\nexport function getProposalStepsAndAmounts({\n  proposalData,\n  quorum,\n  differential,\n  precisionDivider,\n  cooldownPeriod,\n  executionPayloadTime,\n}: BasicProposalWithConfigsData) {\n  const now = dayjs().unix();\n\n  const isVotingStarted =\n    proposalData.votingMachineState > VotingMachineProposalState.NotCreated;\n  const isVotingEnded =\n    proposalData.votingMachineData.endTime > 0 &&\n    now > proposalData.votingMachineData.endTime;\n\n  const isVotingClosed =\n    proposalData.votingMachineData.votingClosedAndSentTimestamp > 0 &&\n    now > proposalData.votingMachineData.votingClosedAndSentTimestamp;\n\n  const { forVotes, againstVotes } = normalizeVotes(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n  );\n  const { normalizeMinQuorumVotes, quorumReached } = formatQuorum(\n    proposalData.votingMachineData.forVotes,\n    quorum,\n    precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    proposalData.votingMachineData.forVotes,\n    proposalData.votingMachineData.againstVotes,\n    differential,\n    precisionDivider,\n  );\n\n  const lastPayloadQueuedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.queuedAt || 0),\n  );\n  const lastPayloadExecutedAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.executedAt || 0),\n  );\n  const lastPayloadCanceledAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => payload?.cancelledAt || 0),\n  );\n  const lastPayloadExpiredAt = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (!!payload?.executedAt) {\n        if (payload.queuedAt <= 0 && payload.state === PayloadState.Expired) {\n          return payload.expirationTime;\n        } else if (\n          payload.queuedAt > 0 &&\n          payload.state === PayloadState.Expired\n        ) {\n          return payload.queuedAt + payload.delay + payload.gracePeriod;\n        } else {\n          return 0;\n        }\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const predictPayloadExpiredTime = Math.max.apply(\n    null,\n    proposalData.payloads.map((payload) => {\n      if (payload?.state && payload.state === PayloadState.Created) {\n        return payload.expirationTime;\n      } else if (payload?.state && payload.state === PayloadState.Queued) {\n        return payload.queuedAt + payload.delay + payload.gracePeriod;\n      } else {\n        return 0;\n      }\n    }),\n  );\n\n  const allPayloadsExecuted = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Executed,\n  );\n  const allPayloadsCanceled = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Cancelled,\n  );\n  const allPayloadsExpired = proposalData.payloads.every(\n    (payload) => payload?.state && payload.state === PayloadState.Expired,\n  );\n\n  const isCanceled =\n    proposalData.basicState === BasicProposalState.Cancelled ||\n    allPayloadsCanceled;\n\n  const isExpired =\n    proposalData.basicState === BasicProposalState.Expired ||\n    allPayloadsExpired;\n\n  const isVotingActive = isVotingStarted && !isVotingEnded && !isCanceled;\n\n  const isVotingFailed =\n    isVotingEnded &&\n    (againstVotes > forVotes + normalizeRequiredDiff ||\n      (againstVotes === 0 && forVotes === 0));\n\n  const isProposalQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    proposalData.votingMachineData.sentToGovernance &&\n    proposalData.queuingTime > 0 &&\n    now > proposalData.queuingTime + cooldownPeriod;\n\n  const isProposalExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled;\n\n  const isPayloadsQueued =\n    isProposalExecuted && now > lastPayloadQueuedAt + executionPayloadTime;\n\n  const isPayloadsExecuted =\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingFailed &&\n    proposalData.basicState === BasicProposalState.Executed &&\n    !isCanceled &&\n    allPayloadsExecuted &&\n    !isExpired;\n\n  let isProposalActive = true;\n  if (\n    proposalData.basicState === BasicProposalState.Null ||\n    proposalData.basicState === BasicProposalState.Created\n  ) {\n    isProposalActive = false;\n  } else if (isCanceled) {\n    isProposalActive = false;\n  } else if (isVotingFailed) {\n    isProposalActive = false;\n  } else if (isPayloadsExecuted) {\n    isProposalActive = false;\n  } else if (isExpired) {\n    isProposalActive = false;\n  }\n\n  return {\n    forVotes,\n    againstVotes,\n    normalizeMinQuorumVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingStarted,\n    isVotingActive,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    lastPayloadQueuedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExecutedAt,\n    lastPayloadExpiredAt,\n    predictPayloadExpiredTime,\n    allPayloadsExecuted,\n    allPayloadsCanceled,\n    allPayloadsExpired,\n    isCanceled,\n    isExpired,\n    isProposalActive,\n    isProposalQueued,\n    isProposalExecuted,\n    isPayloadsQueued,\n    isPayloadsExecuted,\n  };\n}\n\nexport function getProposalState({ ...data }: BasicProposalWithConfigsData) {\n  const {\n    forVotes,\n    againstVotes,\n    quorumReached,\n    normalizeRequiredDiff,\n    isVotingActive,\n    isVotingEnded,\n    isVotingFailed,\n    isExpired,\n    allPayloadsExecuted,\n    isCanceled,\n    isPayloadsExecuted,\n  } = getProposalStepsAndAmounts(data);\n\n  if (\n    !isCanceled &&\n    data.proposalData.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    data.proposalData.basicState <= BasicProposalState.Active\n  ) {\n    return ProposalState.Created;\n  } else if (\n    isVotingActive &&\n    checkHash(data.proposalData.snapshotBlockHash).notZero\n  ) {\n    return ProposalState.Active;\n  } else if (\n    isVotingEnded &&\n    !isCanceled &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached &&\n    !allPayloadsExecuted &&\n    !isExpired\n  ) {\n    return ProposalState.Succeed;\n  } else if (isVotingFailed && !isCanceled) {\n    return ProposalState.Defeated;\n  } else if (isCanceled) {\n    return ProposalState.Canceled;\n  } else if (isPayloadsExecuted) {\n    return ProposalState.Executed;\n  } else {\n    return ProposalState.Expired;\n  }\n}\n\nfunction getStateTimestamp(proposal: Proposal) {\n  const {\n    isVotingEnded,\n    isVotingStarted,\n    isExpired,\n    lastPayloadExecutedAt,\n    lastPayloadCanceledAt,\n    lastPayloadExpiredAt,\n    allPayloadsExpired,\n    isCanceled,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (proposal.state === ProposalState.Created && !isExpired && !isCanceled) {\n    return proposal.data.creationTime;\n  } else if (\n    proposal.data.votingMachineState ===\n      VotingMachineProposalState.NotCreated &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return (\n      proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n    );\n  } else if (\n    checkHash(proposal.data.snapshotBlockHash).notZero &&\n    !isVotingStarted &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingActivationTime;\n  } else if (!isVotingEnded && isVotingStarted && !isExpired && !isCanceled) {\n    return proposal.data.votingMachineData.startTime;\n  } else if (\n    isVotingStarted &&\n    isVotingEnded &&\n    proposal.state !== ProposalState.Executed &&\n    !isExpired &&\n    !isCanceled\n  ) {\n    return proposal.data.votingMachineData.endTime > 0\n      ? proposal.data.votingMachineData.endTime\n      : proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart;\n  } else if (proposal.state === ProposalState.Defeated) {\n    return proposal.data.votingMachineData.endTime;\n  } else if (proposal.state === ProposalState.Executed) {\n    return lastPayloadExecutedAt;\n  } else if (proposal.state === ProposalState.Canceled) {\n    return lastPayloadCanceledAt > proposal.data.canceledAt\n      ? lastPayloadCanceledAt\n      : proposal.data.canceledAt;\n  } else if (\n    proposal.data.basicState === BasicProposalState.Executed &&\n    allPayloadsExpired\n  ) {\n    return lastPayloadExpiredAt;\n  } else {\n    return proposal.data.creationTime + proposal.timings.expirationTime;\n  }\n}\n\nexport function getEstimatedState(\n  proposal: Proposal,\n  forVotesS: string,\n  againstVotesS: string,\n) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    lastPayloadQueuedAt,\n    predictPayloadExpiredTime,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const { forVotes, againstVotes } = normalizeVotes(forVotesS, againstVotesS);\n  const { quorumReached } = formatQuorum(\n    forVotesS,\n    proposal.config.quorum,\n    proposal.precisionDivider,\n  );\n  const { normalizeRequiredDiff } = formatDiff(\n    forVotesS,\n    againstVotesS,\n    proposal.config.differential,\n    proposal.precisionDivider,\n  );\n\n  const isVotingDefeated =\n    againstVotes > forVotes + normalizeRequiredDiff ||\n    (againstVotes === 0 && forVotes === 0) ||\n    !quorumReached;\n\n  const isProposalWaitForQueued =\n    isVotingStarted &&\n    isVotingEnded &&\n    isVotingClosed &&\n    !isVotingDefeated &&\n    proposal.data.votingMachineData.sentToGovernance &&\n    proposal.data.queuingTime > 0 &&\n    now < proposal.data.queuingTime + proposal.timings.cooldownPeriod;\n\n  const isPayloadsWaitForQueued =\n    proposal.data.basicState === BasicProposalState.Executed &&\n    now < lastPayloadQueuedAt + proposal.timings.executionPayloadTime;\n\n  const executedTimestamp =\n    proposal.data.queuingTime > 0 && lastPayloadQueuedAt === 0\n      ? proposal.data.queuingTime + proposal.timings.cooldownPeriod\n      : proposal.data.queuingTime > 0 && lastPayloadQueuedAt > 0\n      ? lastPayloadQueuedAt + proposal.timings.executionPayloadTime\n      : 0;\n\n  if (\n    now <=\n    proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Active,\n      timestampForEstimatedState:\n        proposal.data.creationTime + proposal.config.coolDownBeforeVotingStart,\n    };\n  } else if (\n    isVotingStarted &&\n    !isVotingEnded &&\n    forVotes > againstVotes + normalizeRequiredDiff &&\n    quorumReached\n  ) {\n    return {\n      estimatedState: ProposalEstimatedState.Succeed,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isVotingDefeated && isVotingStarted && !isVotingEnded) {\n    return {\n      estimatedState: ProposalEstimatedState.Defeated,\n      timestampForEstimatedState: proposal.data.votingMachineData.endTime,\n    };\n  } else if (isProposalWaitForQueued && !isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.ProposalExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else if (isPayloadsWaitForQueued) {\n    return {\n      estimatedState: ProposalEstimatedState.PayloadsExecuted,\n      timestampForEstimatedState: executedTimestamp,\n    };\n  } else {\n    return {\n      estimatedState: ProposalEstimatedState.Expired,\n      timestampForEstimatedState:\n        proposal.data.basicState === BasicProposalState.Executed\n          ? predictPayloadExpiredTime\n          : proposal.data.creationTime + proposal.timings.expirationTime,\n    };\n  }\n}\n\nexport function getWaitForState(proposal: Proposal) {\n  const now = dayjs().unix();\n\n  const {\n    isVotingStarted,\n    isVotingEnded,\n    isVotingClosed,\n    isVotingFailed,\n    isProposalExecuted,\n    isProposalQueued,\n    isPayloadsQueued,\n    lastPayloadQueuedAt,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  if (!isVotingFailed) {\n    if (\n      now >\n        proposal.data.creationTime +\n          proposal.config.coolDownBeforeVotingStart &&\n      !isVotingStarted &&\n      !isVotingEnded &&\n      !isVotingClosed\n    ) {\n      return ProposalWaitForState.WaitForActivateVoting;\n    } else if (isVotingStarted && isVotingEnded && !isVotingClosed) {\n      return ProposalWaitForState.WaitForCloseVoting;\n    } else if (\n      isVotingStarted &&\n      isVotingEnded &&\n      isVotingClosed &&\n      proposal.data.votingMachineData.sentToGovernance &&\n      proposal.data.queuingTime <= 0\n    ) {\n      return ProposalWaitForState.WaitForQueueProposal;\n    } else if (\n      isProposalQueued &&\n      proposal.data.basicState !== BasicProposalState.Executed\n    ) {\n      return ProposalWaitForState.WaitForExecuteProposal;\n    } else if (isProposalExecuted && lastPayloadQueuedAt === 0) {\n      return ProposalWaitForState.WaitForQueuePayloads;\n    } else if (isPayloadsQueued) {\n      return ProposalWaitForState.WaitForExecutePayloads;\n    } else {\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n}\n\nexport function formatProposal(proposal: Proposal) {\n  const {\n    forVotes,\n    normalizeMinQuorumVotes,\n    againstVotes,\n    normalizeRequiredDiff,\n  } = getProposalStepsAndAmounts({\n    proposalData: proposal.data,\n    quorum: proposal.config.quorum,\n    differential: proposal.config.differential,\n    precisionDivider: proposal.precisionDivider,\n    cooldownPeriod: proposal.timings.cooldownPeriod,\n    executionPayloadTime: proposal.timings.executionPayloadTime,\n  });\n\n  const stateTimestamp = getStateTimestamp(proposal);\n  const { estimatedState, timestampForEstimatedState } = getEstimatedState(\n    proposal,\n    proposal.data.votingMachineData.forVotes,\n    proposal.data.votingMachineData.againstVotes,\n  );\n  const waitForState = getWaitForState(proposal);\n\n  const allVotes = new BigNumber(proposal.data.votingMachineData.forVotes).plus(\n    proposal.data.votingMachineData.againstVotes,\n  );\n\n  const votingPowerBasic = proposal.balances\n    .map((balance) => valueToBigNumber(balance.basicValue).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingPower = proposal.balances\n    .map((balance) => valueToBigNumber(balance.value).toNumber())\n    .reduce((sum, value) => sum + value, 0);\n\n  const votingTokens = proposal.balances;\n\n  const requiredForVotes =\n    normalizeMinQuorumVotes - againstVotes > normalizeRequiredDiff\n      ? normalizeMinQuorumVotes - againstVotes\n      : againstVotes + normalizeRequiredDiff;\n  const requiredAgainstVotes =\n    forVotes === 0 ? 0 : forVotes + normalizeRequiredDiff;\n\n  const forPercent = allVotes.gt(0)\n    ? new BigNumber(forVotes)\n        .dividedBy(requiredForVotes)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n  const againstPercent = allVotes.gt(0)\n    ? new BigNumber(againstVotes)\n        .dividedBy(requiredAgainstVotes > 0 ? requiredAgainstVotes : 1)\n        .multipliedBy(100)\n        .toNumber()\n    : 0;\n\n  return {\n    forPercent,\n    forVotes,\n    againstPercent,\n    againstVotes,\n    minQuorumVotes: normalizeMinQuorumVotes,\n    requiredDiff: normalizeRequiredDiff,\n    requiredForVotes,\n    requiredAgainstVotes,\n    stateTimestamp,\n    estimatedState,\n    timestampForEstimatedState,\n    waitForState,\n    votingPowerBasic,\n    votingPower,\n    votedPower: normalizeBN(\n      proposal.data.votingMachineData.votedInfo.votingPower,\n      18,\n    ).toNumber(),\n    votingTokens,\n  };\n}\n","import { ethers } from 'ethers';\n\nimport { ChainIdByName } from './chains';\n\n// TODO: need added mainnets\nconst getAverageBlockTime = (chainId: number) => {\n  switch (chainId) {\n    case ChainIdByName.Sepolia:\n      return 15;\n    case ChainIdByName.AvalancheFuji:\n      return 5;\n    case ChainIdByName.Mumbai:\n      return 3;\n    case ChainIdByName.BnbTest:\n      return 3;\n    default:\n      return 15;\n  }\n};\n\nexport async function getBlockNumberByTimestamp(\n  chainId: number,\n  targetTimestamp: number,\n  provider: ethers.providers.JsonRpcBatchProvider,\n) {\n  const blocksDiff = 100;\n\n  let averageBlockTime = getAverageBlockTime(chainId);\n\n  const currentBlockNumber = await provider.getBlockNumber();\n  let block = await provider.getBlock(currentBlockNumber);\n  let isAverageBlockTimeFinal = false;\n  let prevBlock = undefined;\n\n  let blockNumber = currentBlockNumber;\n\n  while (block?.timestamp > targetTimestamp) {\n    if (typeof prevBlock !== 'undefined' && !isAverageBlockTimeFinal) {\n      averageBlockTime = Math.ceil(\n        (prevBlock.timestamp - block.timestamp) /\n          (prevBlock.number - block.number),\n      );\n      isAverageBlockTimeFinal = true;\n    }\n\n    const decreaseBlocks = Math.floor(\n      (block.timestamp - targetTimestamp) / averageBlockTime,\n    );\n\n    if (decreaseBlocks <= blocksDiff) {\n      break;\n    }\n\n    blockNumber -= decreaseBlocks;\n    if (typeof prevBlock === 'undefined') {\n      prevBlock = block;\n    }\n    block = await provider.getBlock(blockNumber);\n  }\n\n  if (block?.timestamp < targetTimestamp) {\n    while (block.timestamp <= targetTimestamp) {\n      const increaseBlocks = Math.floor(\n        (targetTimestamp - block.timestamp) / averageBlockTime,\n      );\n\n      if (increaseBlocks <= blocksDiff) {\n        break;\n      }\n\n      blockNumber += increaseBlocks;\n      block = await provider.getBlock(blockNumber);\n    }\n  }\n\n  return {\n    minBlockNumber: (block?.number || currentBlockNumber) - blocksDiff * 2,\n    blockNumber: block?.number || currentBlockNumber,\n    maxBlockNumber:\n      (block?.number || currentBlockNumber - blocksDiff * 2) + blocksDiff * 2,\n  };\n}\n","import { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { VotingConfig } from '../types';\n\nexport async function getGovCoreConfigs(\n  govCoreDataHelper: IGovernanceDataHelper,\n  govCoreContractAddress: string,\n) {\n  const accessLevels = [1, 2]; // access levels that we can’t get from contracts in any way, so far there are only two of them, we need to keep an eye on that suddenly there will be more of them\n  const constants = await govCoreDataHelper.getConstants(\n    govCoreContractAddress,\n    accessLevels,\n  );\n\n  const contractsConstants = {\n    precisionDivider: constants.precisionDivider.toString(),\n    cooldownPeriod: constants.cooldownPeriod.toNumber(),\n    expirationTime: constants.expirationTime.toNumber(),\n    cancellationFee: constants.cancellationFee.toString(),\n  };\n\n  const configs: VotingConfig[] = [];\n\n  for (let i = 0; i < accessLevels.length; i++) {\n    const votingConfig = constants.votingConfigs[i];\n\n    const config: VotingConfig = {\n      accessLevel: votingConfig.accessLevel,\n      votingDuration: votingConfig.config.votingDuration,\n      quorum: votingConfig.config.yesThreshold.toNumber() || 200,\n      differential: votingConfig.config.yesNoDifferential.toNumber() || 50,\n      coolDownBeforeVotingStart: votingConfig.config.coolDownBeforeVotingStart,\n      minPropositionPower: votingConfig.config.minPropositionPower.toNumber(),\n    };\n\n    configs.push(config);\n  }\n\n  return {\n    contractsConstants,\n    configs,\n  };\n}\n","// payloads created\nimport { IGovernanceCore } from '../contracts/IGovernanceCore';\nimport { IPayloadsControllerCore } from '../contracts/IPayloadsControllerCore';\nimport { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { blockLimit, getEventsBySteps } from './eventsHelpres';\n\nasync function getPayloadsCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsCreated(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal created\nasync function getProposalCreatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalCreated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalCreated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalCreatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal activate for voting\nasync function getProposalActivatedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.VotingActivated(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivated(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting activate on VM\nasync function getProposalActivatedOnVMEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalVoteStarted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalActivatedOnVM(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalActivatedOnVMEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// voting closed on VM and voting results sent\nasync function getProposalVotingClosedEvents(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.ProposalResultsSent(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalVotingClosed(\n  startBlock: number,\n  endBlock: number,\n  votingMachine: IVotingMachineWithProofs,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalVotingClosedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      votingMachine,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// proposal queued\nasync function getProposalQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const events = await govCore.queryFilter(\n    govCore.filters.ProposalQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n    }));\n}\n\nexport async function getProposalQueued(\n  startBlock: number,\n  endBlock: number,\n  govCore: IGovernanceCore,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getProposalQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      govCore,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads queued\nasync function getPayloadsQueuedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadQueued(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsQueued(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsQueuedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n\n// payloads executed\nasync function getPayloadsExecutedEvents(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const events = await payloadsController.queryFilter(\n    payloadsController.filters.PayloadExecuted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      payloadId: event.args.payloadId,\n      chainId,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      payloadsController: payloadsControllerAddress,\n    }));\n}\n\nexport async function getPayloadsExecuted(\n  startBlock: number,\n  endBlock: number,\n  payloadsController: IPayloadsControllerCore,\n  payloadsControllerAddress: string,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getPayloadsExecutedEvents(\n      startBlockNumber,\n      endBlockNumber,\n      payloadsController,\n      payloadsControllerAddress,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import dayjs from 'dayjs';\nimport { ethers } from 'ethers';\n\nimport { IGovernanceDataHelper } from '../contracts/IGovernanceDataHelper';\nimport { IVotingMachineDataHelper } from '../contracts/IVotingMachineDataHelper';\nimport {\n  BasicProposal,\n  ProposalData,\n  VotingMachineProposalState,\n} from '../types';\n\nexport function getVotingMachineProposalState(proposal: BasicProposal) {\n  const now = dayjs().unix();\n  if (proposal.votingMachineData.startTime === 0) {\n    return VotingMachineProposalState.NotCreated;\n  } else if (now <= proposal.votingMachineData.endTime) {\n    return VotingMachineProposalState.Active;\n  } else if (proposal.votingMachineData.votingClosedAndSentBlockNumber === 0) {\n    return VotingMachineProposalState.Finished;\n  } else {\n    return VotingMachineProposalState.SentToGovernance;\n  }\n}\n\nexport function formatVotingMachineData(\n  id: number,\n  votingMachineData: IVotingMachineDataHelper.ProposalStructOutput,\n) {\n  return {\n    id: id,\n    forVotes: votingMachineData.proposalData.forVotes.toString(),\n    againstVotes: votingMachineData.proposalData.againstVotes.toString(),\n    startTime: votingMachineData.proposalData.startTime,\n    endTime: votingMachineData.proposalData.endTime,\n    votingClosedAndSentBlockNumber:\n      votingMachineData.proposalData.votingClosedAndSentBlockNumber.toNumber(),\n    votingClosedAndSentTimestamp:\n      votingMachineData.proposalData.votingClosedAndSentTimestamp,\n    l1BlockHash:\n      votingMachineData?.voteConfig.l1ProposalBlockHash ||\n      ethers.constants.HashZero,\n    strategy: votingMachineData.strategy,\n    sentToGovernance: votingMachineData.proposalData.sentToGovernance,\n    createdBlock: votingMachineData.proposalData.creationBlockNumber.toNumber(),\n    votedInfo: {\n      support: votingMachineData.votedInfo.support,\n      votingPower: votingMachineData.votedInfo.votingPower.toString(),\n    },\n    votingAssets: votingMachineData.votingAssets,\n    hasRequiredRoots: votingMachineData.hasRequiredRoots,\n  };\n}\n\nexport function updateVotingMachineData(\n  proposals: ProposalData[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n) {\n  const proposalsData: BasicProposal[] = [];\n\n  ids.forEach((id) => {\n    const govData = proposals.find((proposal) => proposal?.id === id);\n    if (govData) {\n      const votingMachineData =\n        votingMachineDataHelperData.find(\n          (proposal) => proposal.proposalData.id.toNumber() === govData.id,\n        ) || votingMachineDataHelperData[0];\n\n      const proposalData = {\n        id: govData.id,\n        votingDuration:\n          +votingMachineData?.voteConfig.votingDuration ||\n          govData.votingDuration,\n        creationTime: govData.creationTime,\n        accessLevel: govData.accessLevel,\n        basicState: govData.basicState,\n        queuingTime: govData.queuingTime,\n        ipfsHash: govData.ipfsHash,\n        initialPayloads: govData.initialPayloads,\n        snapshotBlockHash: govData.snapshotBlockHash,\n        creator: govData.creator,\n        canceledAt: govData.canceledAt,\n        votingActivationTime: govData.votingActivationTime,\n        votingChainId: govData.votingChainId,\n        votingMachineData: formatVotingMachineData(\n          govData.id,\n          votingMachineData,\n        ),\n        prerender: govData.prerender,\n      };\n\n      proposalsData.push(proposalData);\n    }\n  });\n\n  return proposalsData;\n}\n\nexport function getDetailedProposalsData(\n  govCoreDataHelperData: IGovernanceDataHelper.ProposalStructOutput[],\n  votingMachineDataHelperData: IVotingMachineDataHelper.ProposalStructOutput[],\n  ids: number[],\n  prerender?: boolean,\n): BasicProposal[] {\n  const proposalsData: BasicProposal[] = [];\n\n  for (let i = 0; i < ids.length; i++) {\n    const govData = govCoreDataHelperData[i];\n\n    const votingMachineData =\n      votingMachineDataHelperData.find(\n        (proposal) =>\n          proposal.proposalData.id.toNumber() === govData.id.toNumber(),\n      ) || votingMachineDataHelperData[i];\n\n    const proposalData = {\n      id: govData.id.toNumber(),\n      votingDuration:\n        +votingMachineData?.voteConfig.votingDuration ||\n        +govData.proposalData.votingDuration,\n      creationTime: +govData.proposalData.creationTime,\n      accessLevel: +govData.proposalData.accessLevel,\n      basicState: +govData.proposalData.state,\n      queuingTime: +govData.proposalData.queuingTime,\n      ipfsHash: govData.proposalData.ipfsHash,\n      initialPayloads: govData.proposalData.payloads.map((payload) => {\n        return {\n          id: payload.payloadId,\n          chainId: payload.chain.toNumber(),\n          payloadsController: payload.payloadsController,\n        };\n      }),\n      snapshotBlockHash: govData.proposalData.snapshotBlockHash,\n      creator: govData.proposalData.creator,\n      canceledAt: govData.proposalData.cancelTimestamp,\n      votingActivationTime: govData.proposalData.votingActivationTime,\n      votingChainId: govData.votingChainId.toNumber(),\n      votingMachineData: formatVotingMachineData(\n        govData.id.toNumber(),\n        votingMachineData,\n      ),\n      prerender: !!prerender,\n    };\n\n    proposalsData.push(proposalData);\n  }\n\n  return proposalsData;\n}\n","import { IVotingMachineWithProofs } from '../contracts/IVotingMachineWithProofs';\nimport { normalizeBN } from './bignumber';\nimport { getEventsBySteps } from './eventsHelpres';\n\nasync function getVoteEvents(\n  votingMachine: IVotingMachineWithProofs,\n  startBlock: number,\n  endBlock: number,\n  chainId: number,\n) {\n  const events = await votingMachine.queryFilter(\n    votingMachine.filters.VoteEmitted(),\n    startBlock,\n    endBlock,\n  );\n\n  return events\n    .sort((a, b) => b.blockNumber - a.blockNumber)\n    .map((event) => ({\n      proposalId: event.args.proposalId.toNumber(),\n      address: event.args.voter.toString(),\n      support: event.args.support,\n      votingPower: normalizeBN(\n        event.args.votingPower.toString(),\n        18,\n      ).toNumber(),\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      chainId,\n    }));\n}\n\nexport async function getVoters(\n  endBlock: number,\n  startBlock: number,\n  blockLimit: number,\n  votingMachine: IVotingMachineWithProofs,\n  chainId: number,\n) {\n  const callbackFunc = async (\n    startBlockNumber: number,\n    endBlockNumber: number,\n  ) => {\n    return await getVoteEvents(\n      votingMachine,\n      startBlockNumber,\n      endBlockNumber,\n      chainId,\n    );\n  };\n\n  return getEventsBySteps(startBlock, endBlock, blockLimit, callbackFunc);\n}\n","import { ethers } from 'ethers';\nimport { base58 } from 'ethers/lib/utils';\nimport matter from 'gray-matter';\n\nimport { ProposalMetadata } from '../types';\n\nexport const ipfsGateway = 'https://ipfs.io/ipfs';\n\nexport function getLink(hash: string, gateway: string): string {\n  return `${gateway}/${hash}`;\n}\ntype MemorizeMetadata = Record<string, ProposalMetadata>;\n\nconst MEMORIZE: MemorizeMetadata = {};\n\nconst incorectedHashses = [\n  '0x0000000000000000000000000000000000000000000000000000000000000020',\n  ethers.constants.HashZero,\n];\n\nexport async function getProposalMetadata(\n  hash: string,\n  gateway = ipfsGateway,\n  setIpfsError?: (hash: string, text?: string) => void,\n  errorText?: string,\n): Promise<ProposalMetadata> {\n  const ipfsHash = hash.startsWith('0x')\n    ? base58.encode(Buffer.from(`1220${hash.slice(2)}`, 'hex'))\n    : hash;\n\n  if (MEMORIZE[ipfsHash]) return MEMORIZE[ipfsHash];\n\n  if (incorectedHashses.some((h) => hash === h)) {\n    if (!!setIpfsError) {\n      setIpfsError(hash, errorText);\n    } else {\n      throw Error('Fetch metadata form ipfs not working');\n    }\n  } else {\n    const ipfsResponse: Response = await fetch(getLink(ipfsHash, gateway));\n\n    if (!ipfsResponse.ok) {\n      if (!!setIpfsError) {\n        setIpfsError(hash);\n      } else {\n        throw Error('Fetch metadata form ipfs not working');\n      }\n    }\n\n    const clone = ipfsResponse.clone();\n    try {\n      const response: ProposalMetadata = await ipfsResponse.json();\n\n      const { content } = matter(response.description);\n\n      MEMORIZE[ipfsHash] = {\n        title: response.title,\n        aip: response.aip,\n        originalIpfsHash: hash,\n        author: response.author,\n        discussions: response.discussions,\n        shortDescription: response.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    } catch (e) {\n      const text = await clone.text();\n      const { content, data } = matter(text);\n      MEMORIZE[ipfsHash] = {\n        title: data.title,\n        aip: data.aip,\n        originalIpfsHash: hash,\n        author: data.author,\n        discussions: data.discussions,\n        shortDescription: data.shortDescription,\n        ipfsHash,\n        description: content,\n      };\n    }\n  }\n\n  return MEMORIZE[ipfsHash];\n}\n"],"names":["ChainIdByName","BasicProposalState","VotingMachineProposalState","PayloadState","ProposalState","ProposalStateWithName","ProposalEstimatedState","ProposalWaitForState","govCoreConfig","goerli","contractAddress","dataHelperContractAddress","votingPortals","_votingPortals","Goerli","sepolia","_votingPortals2","Sepolia","payloadsControllerConfig","_goerli","contractAddresses","payloadAddress","_sepolia","votingMachineConfig","_goerli2","dataWarehouseAddress","_sepolia2","govCoreChainId","aditionalsAddresses","aaveAddress","aAaveAddress","stkAAVEAddress","delegationHelper","votingMachineChainIds","payloadsControllerChainIds","gelatoApiKeys","testnet","mainnet","valueToBigNumber","amount","BigNumber","normalizeBN","n","decimals","shiftedBy","checkHash","hash","notZero","ethers","constants","HashZero","zero","getEventsBySteps","_x","_x2","_x3","_x4","_getEventsBySteps","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","startBlock","endBlock","blockLimit","callbackFunc","blockSteps","eventsCountArray","i","wrap","_context2","prev","next","Math","ceil","Array","Promise","all","map","_ref","_callee","count","startBlockNumber","endBlockNumber","_context","abrupt","sent","stop","_x5","flat","normalizeVotes","forVotes","againstVotes","toNumber","formatQuorum","quorum","precisionDivider","minQuorumVotes","multipliedBy","normalizeMinQuorumVotes","quorumReached","gte","formatDiff","differential","diff","minus","requiredDiff","normalizeRequiredDiff","getProposalStepsAndAmounts","proposalData","cooldownPeriod","executionPayloadTime","now","dayjs","unix","isVotingStarted","votingMachineState","NotCreated","isVotingEnded","votingMachineData","endTime","isVotingClosed","votingClosedAndSentTimestamp","_normalizeVotes","_formatQuorum","lastPayloadQueuedAt","max","payloads","payload","queuedAt","lastPayloadExecutedAt","executedAt","lastPayloadCanceledAt","cancelledAt","lastPayloadExpiredAt","state","Expired","expirationTime","delay","gracePeriod","predictPayloadExpiredTime","Created","Queued","allPayloadsExecuted","every","Executed","allPayloadsCanceled","Cancelled","allPayloadsExpired","isCanceled","basicState","isExpired","isVotingFailed","isProposalExecuted","isPayloadsExecuted","isProposalActive","Null","isVotingActive","isProposalQueued","sentToGovernance","queuingTime","isPayloadsQueued","getEstimatedState","proposal","forVotesS","againstVotesS","_getProposalStepsAndA3","data","config","timings","_normalizeVotes2","isVotingDefeated","isPayloadsWaitForQueued","executedTimestamp","creationTime","coolDownBeforeVotingStart","estimatedState","Active","timestampForEstimatedState","Succeed","Defeated","ProposalExecuted","PayloadsExecuted","getWaitForState","_getProposalStepsAndA4","WaitForActivateVoting","WaitForCloseVoting","WaitForQueueProposal","WaitForExecuteProposal","WaitForQueuePayloads","WaitForExecutePayloads","getAverageBlockTime","chainId","AvalancheFuji","Mumbai","BnbTest","_getBlockNumberByTimestamp","targetTimestamp","provider","_block2","_block3","_block4","_block5","blocksDiff","averageBlockTime","currentBlockNumber","block","isAverageBlockTimeFinal","prevBlock","blockNumber","_block","decreaseBlocks","increaseBlocks","getBlockNumber","getBlock","undefined","timestamp","number","floor","minBlockNumber","maxBlockNumber","_getGovCoreConfigs","govCoreDataHelper","govCoreContractAddress","accessLevels","contractsConstants","configs","votingConfig","getConstants","toString","cancellationFee","length","accessLevel","votingConfigs","votingDuration","yesThreshold","yesNoDifferential","minPropositionPower","push","getPayloadsCreatedEvents","_getPayloadsCreatedEvents","payloadsController","payloadsControllerAddress","queryFilter","filters","PayloadCreated","sort","a","b","event","payloadId","args","transactionHash","_getPayloadsCreated","_callee3","_context3","_x61","_x62","getProposalCreatedEvents","_x11","_x12","_x13","_getProposalCreatedEvents","_callee4","govCore","_context4","ProposalCreated","proposalId","_getProposalCreated","_callee6","_context6","_ref2","_callee5","_context5","_x63","_x64","getProposalActivatedEvents","_x17","_x18","_x19","_getProposalActivatedEvents","_callee7","_context7","VotingActivated","_getProposalActivated","_callee9","_context9","_ref3","_callee8","_context8","_x65","_x66","getProposalActivatedOnVMEvents","_x23","_x24","_x25","_getProposalActivatedOnVMEvents","_callee10","votingMachine","_context10","ProposalVoteStarted","_getProposalActivatedOnVM","_callee12","_context12","_ref4","_callee11","_context11","_x67","_x68","getProposalVotingClosedEvents","_x29","_x30","_x31","_getProposalVotingClosedEvents","_callee13","_context13","ProposalResultsSent","_getProposalVotingClosed","_callee15","_context15","_ref5","_callee14","_context14","_x69","_x70","getProposalQueuedEvents","_x35","_x36","_x37","_getProposalQueuedEvents","_callee16","_context16","ProposalQueued","_getProposalQueued","_callee18","_context18","_ref6","_callee17","_context17","_x71","_x72","getPayloadsQueuedEvents","_x41","_x42","_x43","_x44","_x45","_getPayloadsQueuedEvents","_callee19","_context19","PayloadQueued","_getPayloadsQueued","_callee21","_context21","_ref7","_callee20","_context20","_x73","_x74","getPayloadsExecutedEvents","_x51","_x52","_x53","_x54","_x55","_getPayloadsExecutedEvents","_callee22","_context22","PayloadExecuted","_getPayloadsExecuted","_callee24","_context24","_ref8","_callee23","_context23","_x75","_x76","formatVotingMachineData","id","startTime","votingClosedAndSentBlockNumber","l1BlockHash","voteConfig","l1ProposalBlockHash","strategy","createdBlock","creationBlockNumber","votedInfo","support","votingPower","votingAssets","hasRequiredRoots","getVoteEvents","_getVoteEvents","VoteEmitted","address","voter","_getVoters","_x10","getLink","gateway","MEMORIZE","incorectedHashses","_getProposalMetadata","setIpfsError","errorText","ipfsHash","ipfsResponse","clone","response","_matter","_matter2","startsWith","base58","encode","Buffer","from","slice","some","h","Error","fetch","ok","json","matter","description","title","aip","originalIpfsHash","author","discussions","shortDescription","content","t0","text","providers","coreNetwork","additional","_getProposalStepsAndA5","stateTimestamp","_getProposalStepsAndA2","snapshotBlockHash","Canceled","canceledAt","votingActivationTime","getStateTimestamp","_getEstimatedState","waitForState","allVotes","plus","votingPowerBasic","balances","balance","basicValue","reduce","sum","value","votingTokens","requiredForVotes","requiredAgainstVotes","forPercent","gt","dividedBy","againstPercent","votedPower","currentBlock","lastBlockNumber","isFinite","govCoreDataHelperData","votingMachineDataHelperData","ids","prerender","proposalsData","_loop","govData","find","initialPayloads","chain","creator","cancelTimestamp","votingChainId","_x6","_x7","_x8","_x9","_x56","_x57","_x58","_x59","_x60","_x46","_x47","_x48","_x49","_x50","_x20","_x21","_x22","_x26","_x27","_x28","_x14","_x15","_x16","_x38","_x39","_x40","_extends","_objectDestructuringEmpty","_getProposalStepsAndA","_x32","_x33","_x34","Finished","SentToGovernance","proposals","forEach"],"mappings":"8IAAYA,6IAAAA,EAAAA,wBAAAA,gDAEVA,yCACAA,yCACAA,gCACAA,2BACAA,0BCNF,ICOYC,EAWAC,EAOAC,EASAC,EA8JAC,EAYAC,EASAC,EDxMCC,EAGT,CAEFC,OAAQ,CACNC,gBAAiB,6CACjBC,0BAA2B,6CAC3BC,eAAaC,KAAAA,EACVb,sBAAcc,QAAS,6CAA4CD,IAGxEE,QAAS,CACPL,gBAAiB,6CACjBC,0BAA2B,6CAC3BC,eAAaI,KAAAA,EACVhB,sBAAciB,SAAU,6CAA4CD,KAK9DE,EAST,CAEFT,QAAMU,KAAAA,EACHnB,sBAAcc,QAAS,CACtBH,0BAA2B,6CAG3BS,kBAAmB,CAAC,8CAEpBC,eAAgB,8CACjBF,GAEHJ,SAAOO,KAAAA,EACJtB,sBAAciB,SAAU,CACvBN,0BAA2B,6CAG3BS,kBAAmB,CAAC,8CAEpBC,eAAgB,8CACjBC,IAICC,EAGF,CAEFd,QAAMe,KAAAA,EACHxB,sBAAcc,QAAS,CACtBJ,gBAAiB,6CACjBC,0BAA2B,6CAC3Bc,qBAAsB,8CACvBD,GAEHT,SAAOW,KAAAA,EACJ1B,sBAAciB,SAAU,CACvBP,gBAAiB,6CACjBC,0BAA2B,6CAC3Bc,qBAAsB,8CACvBC,IAICC,EAAkD,CAEtDlB,OAAQT,sBAAcc,OACtBC,QAASf,sBAAciB,SAGnBW,EAAuE,CAE3EnB,OAAQ,CACNoB,YAAa,6CACbC,aAAc,6CACdC,eAAgB,6CAGhBC,iBAAkB,8CAEpBjB,QAAS,CACPc,YAAa,6CACbC,aAAc,6CACdC,eAAgB,6CAGhBC,iBAAkB,+CAITC,EAA2D,CACtExB,OAAQ,CAACT,sBAAcc,QACvBC,QAAS,CAACf,sBAAciB,UAGbiB,EAAgE,CAC3EzB,OAAQ,CAACT,sBAAcc,QACvBC,QAAS,CAACf,sBAAciB,UAGpBkB,EAAwC,CAC5CC,QAAS,+CACTC,QAAS,aE1HKC,EAAiBC,GAC/B,OAAIA,aAAkBC,YACbD,EAGF,IAAIC,YAAUD,YAOPE,EAAYC,EAAmBC,GAC7C,OAAOL,EAAiBI,GAAGE,WAAsB,EAAZD,YCfvBE,EAAUC,GACxB,MAAO,CACLC,QAASD,IAASE,SAAOC,UAAUC,SACnCC,KAAML,IAASE,SAAOC,UAAUC,g/NC6BpC,SAAsBE,EAAgBC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,WAAAC,WA0BrC,SAAAF,IAAA,OAAAA,EAAAG,EAAAC,IAAAC,MA1BM,SAAAC,EACLC,EACAC,EACAC,EACAC,GAAkE,IAAAC,EAAAC,EAAAC,EAAA,OAAAT,IAAAU,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKlE,IAHMN,EAAaO,KAAKC,MAAMX,EAAWD,GAAcE,GAEjDG,EAAmB,IAAIQ,MAAMT,GAC1BE,EAAI,EAAGA,EAAIF,EAAYE,IAC9BD,EAAiBC,GAAKA,EACvB,OAAAE,EAAAE,OAEqBI,QAAQC,IAC5BV,EAAiBW,eAAG,IAAAC,EAAArB,EAAAC,IAAAC,MAAC,SAAAoB,EAAOC,GAAK,IAAAC,EAAAC,EAAA,OAAAxB,IAAAU,eAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAEsC,OAD/DU,EAAmBpB,EAAaE,EAAaiB,EAC7CE,EAAiBrB,GAAcE,EAAaiB,EAAQjB,GAAWoB,EAAAZ,OAExDP,EACXiB,EACAnB,EAAWoB,EAAiBA,EAAiBpB,GAC9C,OAAA,OAAAqB,EAAAC,gBAAAD,EAAAE,MAAA,OAAA,UAAA,OAAAF,EAAAG,UAAAP,OACF,gBAAAQ,GAAA,OAAAT,EAAAvB,WAAAC,iBACF,OAVY,OAAAa,EAAAe,gBAAAf,EAAAgB,KAYEG,QAAM,OAAA,UAAA,OAAAnB,EAAAiB,UAAA1B,QACtBL,WAAAC,oBC5CeiC,EAAeC,EAAkBC,GAI/C,MAAO,CAAED,SAHSpD,EAAYoD,EAAU,IAAIE,WAGdD,aAFRrD,EAAYqD,EAAc,IAAIC,YAKtD,SAAgBC,EACdH,EACAI,EACAC,GAEA,IAAMC,EACJ7D,EAAiB2D,GAAQG,aAAaF,GAClCG,EAA0B5D,EAAY0D,EAAgB,IAAIJ,WAE5DO,GAAgB,EAKpB,OAJIhE,EAAiBuD,GAAUU,IAAIJ,KACjCG,GAAgB,GAGX,CACLH,eAAAA,EACAE,wBAAAA,EACAC,cAAAA,GAIJ,SAAgBE,EACdX,EACAC,EACAW,EACAP,GAEA,IAAMQ,EAAOpE,EAAiBuD,GAAUc,MAAMb,GACxCc,EACJtE,EAAiBmE,GAAcL,aAAaF,GAG9C,MAAO,CAAEQ,KAAAA,EAAME,aAAAA,EAAcC,sBAFCpE,EAAYmE,EAAc,IAAIb,qBAc9Ce,EAA0B7B,OACxC8B,EAAY9B,EAAZ8B,aACAd,EAAMhB,EAANgB,OACAQ,EAAYxB,EAAZwB,aACAP,EAAgBjB,EAAhBiB,iBACAc,EAAc/B,EAAd+B,eACAC,EAAoBhC,EAApBgC,qBAEMC,EAAMC,IAAQC,OAEdC,EACJN,EAAaO,mBAAqBpH,mCAA2BqH,WACzDC,EACJT,EAAaU,kBAAkBC,QAAU,GACzCR,EAAMH,EAAaU,kBAAkBC,QAEjCC,EACJZ,EAAaU,kBAAkBG,6BAA+B,GAC9DV,EAAMH,EAAaU,kBAAkBG,6BAEvCC,EAAmCjC,EACjCmB,EAAaU,kBAAkB5B,SAC/BkB,EAAaU,kBAAkB3B,cAFzBD,EAAQgC,EAARhC,SAAUC,EAAY+B,EAAZ/B,aAIlBgC,EAAmD9B,EACjDe,EAAaU,kBAAkB5B,SAC/BI,EACAC,GAHMG,EAAuByB,EAAvBzB,wBAAyBC,EAAawB,EAAbxB,cAKzBO,EAA0BL,EAChCO,EAAaU,kBAAkB5B,SAC/BkB,EAAaU,kBAAkB3B,aAC/BW,EACAP,GAJMW,sBAOFkB,EAAsBpD,KAAKqD,IAAItE,MACnC,KACAqD,EAAakB,SAASjD,KAAI,SAACkD,GAAO,aAAKA,SAAAA,EAASC,WAAY,MAExDC,EAAwBzD,KAAKqD,IAAItE,MACrC,KACAqD,EAAakB,SAASjD,KAAI,SAACkD,GAAO,aAAKA,SAAAA,EAASG,aAAc,MAE1DC,EAAwB3D,KAAKqD,IAAItE,MACrC,KACAqD,EAAakB,SAASjD,KAAI,SAACkD,GAAO,aAAKA,SAAAA,EAASK,cAAe,MAE3DC,EAAuB7D,KAAKqD,IAAItE,MACpC,KACAqD,EAAakB,SAASjD,KAAI,SAACkD,GACzB,aAAMA,GAAAA,EAASG,WACTH,EAAQC,UAAY,GAAKD,EAAQO,QAAUtI,qBAAauI,QACnDR,EAAQS,eAEfT,EAAQC,SAAW,GACnBD,EAAQO,QAAUtI,qBAAauI,QAExBR,EAAQC,SAAWD,EAAQU,MAAQV,EAAQW,YAE3C,EAGF,MAKPC,EAA4BnE,KAAKqD,IAAItE,MACzC,KACAqD,EAAakB,SAASjD,KAAI,SAACkD,GACzB,aAAIA,GAAAA,EAASO,OAASP,EAAQO,QAAUtI,qBAAa4I,QAC5Cb,EAAQS,qBACNT,GAAAA,EAASO,OAASP,EAAQO,QAAUtI,qBAAa6I,OACnDd,EAAQC,SAAWD,EAAQU,MAAQV,EAAQW,YAE3C,MAKPI,EAAsBlC,EAAakB,SAASiB,OAChD,SAAChB,GAAO,aAAKA,SAAAA,EAASO,QAASP,EAAQO,QAAUtI,qBAAagJ,YAE1DC,EAAsBrC,EAAakB,SAASiB,OAChD,SAAChB,GAAO,aAAKA,SAAAA,EAASO,QAASP,EAAQO,QAAUtI,qBAAakJ,aAE1DC,EAAqBvC,EAAakB,SAASiB,OAC/C,SAAChB,GAAO,aAAKA,SAAAA,EAASO,QAASP,EAAQO,QAAUtI,qBAAauI,WAG1Da,EACJxC,EAAayC,aAAevJ,2BAAmBoJ,WAC/CD,EAEIK,EACJ1C,EAAayC,aAAevJ,2BAAmByI,SAC/CY,EAIII,EACJlC,IACC1B,EAAeD,EAAWgB,GACP,IAAjBf,GAAmC,IAAbD,GAUrB8D,EACJnC,GACAG,IACC+B,GACD3C,EAAayC,aAAevJ,2BAAmBkJ,WAC9CI,EAKGK,EACJpC,GACAG,IACC+B,GACD3C,EAAayC,aAAevJ,2BAAmBkJ,WAC9CI,GACDN,IACCQ,EAECI,GAAmB,EAgBvB,OAdE9C,EAAayC,aAAevJ,2BAAmB6J,MAC/C/C,EAAayC,aAAevJ,2BAAmB8I,SAGtCQ,GAEAG,GAEAE,GAEAH,KAPTI,GAAmB,GAWd,CACLhE,SAAAA,EACAC,aAAAA,EACAO,wBAAAA,EACAC,cAAAA,EACAO,sBAAAA,EACAQ,gBAAAA,EACA0C,eAzDqB1C,IAAoBG,IAAkB+B,EA0D3D/B,cAAAA,EACAG,eAAAA,EACA+B,eAAAA,EACA3B,oBAAAA,EACAO,sBAAAA,EACAF,sBAAAA,EACAI,qBAAAA,EACAM,0BAAAA,EACAG,oBAAAA,EACAG,oBAAAA,EACAE,mBAAAA,EACAC,WAAAA,EACAE,UAAAA,EACAI,iBAAAA,EACAG,iBAhEA3C,GACAG,GACAG,GACAZ,EAAaU,kBAAkBwC,kBAC/BlD,EAAamD,YAAc,GAC3BhD,EAAMH,EAAamD,YAAclD,EA4DjC2C,mBAAAA,EACAQ,iBAnDAR,GAAsBzC,EAAMa,EAAsBd,EAoDlD2C,mBAAAA,GAsHJ,SAAgBQ,EACdC,EACAC,EACAC,GAEA,IAAMrD,EAAMC,IAAQC,OAEpBoD,EAMI1D,EAA2B,CAC7BC,aAAcsD,EAASI,KACvBxE,OAAQoE,EAASK,OAAOzE,OACxBQ,aAAc4D,EAASK,OAAOjE,aAC9BP,iBAAkBmE,EAASnE,iBAC3Bc,eAAgBqD,EAASM,QAAQ3D,eACjCC,qBAAsBoD,EAASM,QAAQ1D,uBAXvCI,EAAemD,EAAfnD,gBACAG,EAAagD,EAAbhD,cACAG,EAAc6C,EAAd7C,eACAI,EAAmByC,EAAnBzC,oBACAe,EAAyB0B,EAAzB1B,0BAUF8B,EAAmChF,EAAe0E,EAAWC,GAArD1E,EAAQ+E,EAAR/E,SAAUC,EAAY8E,EAAZ9E,aACVQ,EAAkBN,EACxBsE,EACAD,EAASK,OAAOzE,OAChBoE,EAASnE,kBAHHI,cAKAO,EAA0BL,EAChC8D,EACAC,EACAF,EAASK,OAAOjE,aAChB4D,EAASnE,kBAJHW,sBAOFgE,EACJ/E,EAAeD,EAAWgB,GACR,IAAjBf,GAAmC,IAAbD,IACtBS,EAWGwE,EACJT,EAASI,KAAKjB,aAAevJ,2BAAmBkJ,UAChDjC,EAAMa,EAAsBsC,EAASM,QAAQ1D,qBAEzC8D,EACJV,EAASI,KAAKP,YAAc,GAA6B,IAAxBnC,EAC7BsC,EAASI,KAAKP,YAAcG,EAASM,QAAQ3D,eAC7CqD,EAASI,KAAKP,YAAc,GAAKnC,EAAsB,EACvDA,EAAsBsC,EAASM,QAAQ1D,qBACvC,EAEN,OACEC,GACAmD,EAASI,KAAKO,aAAeX,EAASK,OAAOO,0BAEtC,CACLC,eAAgB5K,+BAAuB6K,OACvCC,2BACEf,EAASI,KAAKO,aAAeX,EAASK,OAAOO,2BAGjD5D,IACCG,GACD3B,EAAWC,EAAee,GAC1BP,EAEO,CACL4E,eAAgB5K,+BAAuB+K,QACvCD,2BAA4Bf,EAASI,KAAKhD,kBAAkBC,SAErDmD,GAAoBxD,IAAoBG,EAC1C,CACL0D,eAAgB5K,+BAAuBgL,SACvCF,2BAA4Bf,EAASI,KAAKhD,kBAAkBC,SAzC9DL,GACAG,GACAG,IACCkD,GACDR,EAASI,KAAKhD,kBAAkBwC,kBAChCI,EAASI,KAAKP,YAAc,GAC5BhD,EAAMmD,EAASI,KAAKP,YAAcG,EAASM,QAAQ3D,iBAqCd8D,EAC9B,CACLI,eAAgB5K,+BAAuBiL,iBACvCH,2BAA4BL,GAErBD,EACF,CACLI,eAAgB5K,+BAAuBkL,iBACvCJ,2BAA4BL,GAGvB,CACLG,eAAgB5K,+BAAuBoI,QACvC0C,2BACEf,EAASI,KAAKjB,aAAevJ,2BAAmBkJ,SAC5CL,EACAuB,EAASI,KAAKO,aAAeX,EAASM,QAAQhC,yBAK1C8C,EAAgBpB,GAC9B,IAAMnD,EAAMC,IAAQC,OAEpBsE,EASI5E,EAA2B,CAC7BC,aAAcsD,EAASI,KACvBxE,OAAQoE,EAASK,OAAOzE,OACxBQ,aAAc4D,EAASK,OAAOjE,aAC9BP,iBAAkBmE,EAASnE,iBAC3Bc,eAAgBqD,EAASM,QAAQ3D,eACjCC,qBAAsBoD,EAASM,QAAQ1D,uBAdvCI,EAAeqE,EAAfrE,gBACAG,EAAakE,EAAblE,cACAG,EAAc+D,EAAd/D,eAeF,OAdgB+D,EAAdhC,oBA+CA,EA/BExC,EACEmD,EAASI,KAAKO,aACZX,EAASK,OAAOO,4BACnB5D,IACAG,IACAG,EAEMpH,6BAAqBoL,sBACnBtE,GAAmBG,IAAkBG,EACvCpH,6BAAqBqL,mBAE5BvE,GACAG,GACAG,GACA0C,EAASI,KAAKhD,kBAAkBwC,kBAChCI,EAASI,KAAKP,aAAe,EAEtB3J,6BAAqBsL,qBA/BdH,EAAhB1B,kBAkCEK,EAASI,KAAKjB,aAAevJ,2BAAmBkJ,SAEzC5I,6BAAqBuL,uBArCZJ,EAAlB/B,oBAsCyD,IAnCtC+B,EAAnB3D,oBAoCSxH,6BAAqBwL,qBArCdL,EAAhBvB,iBAuCS5J,6BAAqByL,4BAE5B,GJ5fM/L,EAAAA,6BAAAA,iDAEVA,yBACAA,uBACAA,uBACAA,2BACAA,uBACAA,6BACAA,0BAGUC,EAAAA,qCAAAA,qEAEVA,uBACAA,2BACAA,4CAGUC,EAAAA,uBAAAA,2CAEVA,yBACAA,uBACAA,2BACAA,6BACAA,0BAGUC,EAAAA,wBAAAA,kDAEVA,uBACAA,yBACAA,2BACAA,2BACAA,yBACAA,4BAuJUC,EAAAA,gCAAAA,qDAEVA,kBACAA,mBACAA,kBACAA,oBACAA,sBACAA,oBACAA,sBACAA,sBAGUC,EAAAA,iCAAAA,kEAEVA,sBACAA,uBACAA,+CACAA,+CACAA,yBAGUC,EAAAA,+BAAAA,oFAEVA,8CACAA,iDACAA,sDACAA,kDACAA,sDKtNF,IAAM0L,EAAsB,SAACC,GAC3B,OAAQA,GACN,KAAKlM,sBAAciB,QACjB,OAAO,GACT,KAAKjB,sBAAcmM,cACjB,OAAO,EACT,KAAKnM,sBAAcoM,OAEnB,KAAKpM,sBAAcqM,QACjB,OAAO,EACT,QACE,OAAO,KAiEZ,SAAAC,IAAA,OAAAA,EAAA1I,EAAAC,IAAAC,MA7DM,SAAAoB,EACLgH,EACAK,EACAC,GAA+C,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzJ,IAAAU,eAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAII,OAF7CmI,EAAa,IAEfC,EAAmBb,EAAoBC,GAAQ5G,EAAAZ,OAElB8H,EAASe,iBAAgB,OAAlC,OAAlBR,EAAkBzH,EAAAE,KAAAF,EAAAZ,OACN8H,EAASgB,SAAST,GAAmB,OAAnDC,EAAK1H,EAAAE,KACLyH,GAA0B,EAC1BC,OAAYO,EAEZN,EAAcJ,EAAkB,QAAA,aAE7BK,EAAAJ,UAAAI,EAAOM,WAAYnB,IAAejH,EAAAZ,QAAA,MAWtC,QAVwB,IAAdwI,GAA8BD,IACvCH,EAAmBnI,KAAKC,MACrBsI,EAAUQ,UAAYV,EAAMU,YAC1BR,EAAUS,OAASX,EAAMW,SAE9BV,GAA0B,MAGtBI,EAAiB1I,KAAKiJ,OACzBZ,EAAMU,UAAYnB,GAAmBO,KAGlBD,IAAUvH,EAAAZ,QAAA,MAAA,OAAAY,EAAAC,mBAAA,QAO/B,OAHD4H,GAAeE,OACU,IAAdH,IACTA,EAAYF,GACb1H,EAAAZ,QACa8H,EAASgB,SAASL,GAAY,QAA5CH,EAAK1H,EAAAE,KAAAF,EAAAZ,QAAA,MAAA,QAAA,aAGH+H,EAAAO,UAAAP,EAAOiB,WAAYnB,IAAejH,EAAAZ,QAAA,MAAA,QAAA,KAC7BsI,EAAMU,WAAanB,IAAejH,EAAAZ,QAAA,MAGtC,MAFK4I,EAAiB3I,KAAKiJ,OACzBrB,EAAkBS,EAAMU,WAAaZ,KAGlBD,IAAUvH,EAAAZ,QAAA,MAAA,OAAAY,EAAAC,mBAAA,QAIF,OAA9B4H,GAAeG,EAAehI,EAAAZ,QAChB8H,EAASgB,SAASL,GAAY,QAA5CH,EAAK1H,EAAAE,KAAAF,EAAAZ,QAAA,MAAA,QAAA,OAAAY,EAAAC,gBAIF,CACLsI,wBAAiBnB,EAAAM,UAAAN,EAAOiB,SAAUZ,GAAmC,EAAbF,EACxDM,oBAAaR,EAAAK,UAAAL,EAAOgB,SAAUZ,EAC9Be,wBACGlB,EAAAI,UAAAJ,EAAOe,SAAUZ,EAAkC,EAAbF,GAA+B,EAAbA,IAC5D,QAAA,UAAA,OAAAvH,EAAAG,UAAAP,QACFxB,WAAAC,WCxCA,SAAAoK,IAAA,OAAAA,EAAAnK,EAAAC,IAAAC,MAtCM,SAAAoB,EACL8I,EACAC,GAA8B,IAAAC,EAAAjL,EAAAkL,EAAAC,EAAA9J,EAAA+J,EAAA3D,EAAA,OAAA7G,IAAAU,eAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAED,OAAvBwJ,EAAe,CAAC,EAAG,GAAI5I,EAAAZ,OACLsJ,EAAkBM,aACxCL,EACAC,GACD,OAWD,IATMC,EAAqB,CACzBjI,kBANIjD,EAASqC,EAAAE,MAMeU,iBAAiBqI,WAC7CvH,eAAgB/D,EAAU+D,eAAejB,WACzC4C,eAAgB1F,EAAU0F,eAAe5C,WACzCyI,gBAAiBvL,EAAUuL,gBAAgBD,YAGvCH,EAA0B,GAEvB9J,EAAI,EAAGA,EAAI4J,EAAaO,OAAQnK,IAGjCoG,EAAuB,CAC3BgE,aAHIL,EAAepL,EAAU0L,cAAcrK,IAGjBoK,YAC1BE,eAAgBP,EAAa3D,OAAOkE,eACpC3I,OAAQoI,EAAa3D,OAAOmE,aAAa9I,YAAc,IACvDU,aAAc4H,EAAa3D,OAAOoE,kBAAkB/I,YAAc,GAClEkF,0BAA2BoD,EAAa3D,OAAOO,0BAC/C8D,oBAAqBV,EAAa3D,OAAOqE,oBAAoBhJ,YAG/DqI,EAAQY,KAAKtE,GACd,OAAApF,EAAAC,gBAEM,CACL4I,mBAAAA,EACAC,QAAAA,IACD,OAAA,UAAA,OAAA9I,EAAAG,UAAAP,QACFxB,WAAAC,WCrC8D,SAEhDsL,EAAwB5L,EAAAC,EAAAC,EAAAC,EAAAkC,GAAA,OAAAwJ,EAAAxL,WAAAC,WAAA,SAAAuL,IAsBtC,OAtBsCA,EAAAtL,EAAAC,IAAAC,MAAvC,SAAAoB,EACElB,EACAC,EACAkL,EACAC,EACAlD,GAAe,OAAArI,IAAAU,eAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAAA,OAAAY,EAAAZ,OAEMyK,EAAmBE,YACtCF,EAAmBG,QAAQC,iBAC3BvL,EACAC,GACD,OAJW,OAAAqB,EAAAC,gBAAAD,EAAAE,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfC,UAAWD,EAAME,KAAKD,UACtB1D,QAAAA,EACA4D,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,YACnBgC,mBAAoBC,OACnB,OAAA,UAAA,OAAA9J,EAAAG,UAAAP,QACNxB,WAAAC,WAyBD,SAAAoM,IAFC,OAEDA,EAAAnM,EAAAC,IAAAC,MAvBO,SAAAkM,EACLhM,EACAC,EACAkL,EACAC,EACAlD,GAAe,OAAArI,IAAAU,eAAA0L,GAAA,cAAAA,EAAAxL,KAAAwL,EAAAvL,MAAA,OAEG,OAAAuL,EAAA1K,gBAaXnC,EAAiBY,EAAYC,EJlDZ,gBIqCN,IAAAgB,EAAArB,EAAAC,IAAAC,MAAG,SAAAC,EACnBqB,EACAC,GAAsB,OAAAxB,IAAAU,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA,OAAAF,EAAAE,OAETuK,EACX7J,EACAC,EACA8J,EACAC,EACAlD,GACD,OAAA,OAAA1H,EAAAe,gBAAAf,EAAAgB,MAAA,OAAA,UAAA,OAAAhB,EAAAiB,UAAA1B,OACF,gBAXiBmM,EAAAC,GAAA,OAAAlL,EAAAvB,WAAAC,iBAaqD,OAAA,UAAA,OAAAsM,EAAAxK,UAAAuK,QACxEtM,WAAAC,WAAA,SAGcyM,EAAwBC,EAAAC,EAAAC,GAAA,OAAAC,EAAA9M,WAAAC,WAAA,SAAA6M,IAkBtC,OAlBsCA,EAAA5M,EAAAC,IAAAC,MAAvC,SAAA2M,EACEzM,EACAC,EACAyM,GAAwB,OAAA7M,IAAAU,eAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,OAAA,OAAAiM,EAAAjM,OAEHgM,EAAQrB,YAC3BqB,EAAQpB,QAAQsB,kBAChB5M,EACAC,GACD,OAJW,OAAA0M,EAAApL,gBAAAoL,EAAAnL,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfkB,WAAYlB,EAAME,KAAKgB,WAAW9K,WAClC+J,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,iBAClB,OAAA,UAAA,OAAAwD,EAAAlL,UAAAgL,QACN/M,WAAAC,WAqBD,SAAAmN,IAFC,OAEDA,EAAAlN,EAAAC,IAAAC,MAnBO,SAAAiN,EACL/M,EACAC,EACAyM,GAAwB,OAAA7M,IAAAU,eAAAyM,GAAA,cAAAA,EAAAvM,KAAAuM,EAAAtM,MAAA,OAEN,OAAAsM,EAAAzL,gBAWXnC,EAAiBY,EAAYC,EJ1FZ,gBI+EN,IAAAgN,EAAArN,EAAAC,IAAAC,MAAG,SAAAoN,EACnB9L,EACAC,GAAsB,OAAAxB,IAAAU,eAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,OAAA,OAAAyM,EAAAzM,OAET0L,EACXhL,EACAC,EACAqL,GACD,OAAA,OAAAS,EAAA5L,gBAAA4L,EAAA3L,MAAA,OAAA,UAAA,OAAA2L,EAAA1L,UAAAyL,OACF,gBATiBE,EAAAC,GAAA,OAAAJ,EAAAvN,WAAAC,iBAWqD,OAAA,UAAA,OAAAqN,EAAAvL,UAAAsL,QACxErN,WAAAC,WAAA,SAGc2N,EAA0BC,EAAAC,EAAAC,GAAA,OAAAC,EAAAhO,WAAAC,WAAA,SAAA+N,IAkBxC,OAlBwCA,EAAA9N,EAAAC,IAAAC,MAAzC,SAAA6N,EACE3N,EACAC,EACAyM,GAAwB,OAAA7M,IAAAU,eAAAqN,GAAA,cAAAA,EAAAnN,KAAAmN,EAAAlN,MAAA,OAAA,OAAAkN,EAAAlN,OAEHgM,EAAQrB,YAC3BqB,EAAQpB,QAAQuC,kBAChB7N,EACAC,GACD,OAJW,OAAA2N,EAAArM,gBAAAqM,EAAApM,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfkB,WAAYlB,EAAME,KAAKgB,WAAW9K,WAClC+J,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,iBAClB,OAAA,UAAA,OAAAyE,EAAAnM,UAAAkM,QACNjO,WAAAC,WAqBD,SAAAmO,KAFC,OAEDA,GAAAlO,EAAAC,IAAAC,MAnBO,SAAAiO,EACL/N,EACAC,EACAyM,GAAwB,OAAA7M,IAAAU,eAAAyN,GAAA,cAAAA,EAAAvN,KAAAuN,EAAAtN,MAAA,OAEN,OAAAsN,EAAAzM,gBAWXnC,EAAiBY,EAAYC,EJlIZ,gBIuHN,IAAAgO,EAAArO,EAAAC,IAAAC,MAAG,SAAAoO,EACnB9M,EACAC,GAAsB,OAAAxB,IAAAU,eAAA4N,GAAA,cAAAA,EAAA1N,KAAA0N,EAAAzN,MAAA,OAAA,OAAAyN,EAAAzN,OAET4M,EACXlM,EACAC,EACAqL,GACD,OAAA,OAAAyB,EAAA5M,gBAAA4M,EAAA3M,MAAA,OAAA,UAAA,OAAA2M,EAAA1M,UAAAyM,OACF,gBATiBE,EAAAC,GAAA,OAAAJ,EAAAvO,WAAAC,iBAWqD,OAAA,UAAA,OAAAqO,EAAAvM,UAAAsM,QACxErO,WAAAC,WAAA,SAGc2O,GAA8BC,EAAAC,EAAAC,GAAA,OAAAC,GAAAhP,WAAAC,WAAA,SAAA+O,KAkB5C,OAlB4CA,GAAA9O,EAAAC,IAAAC,MAA7C,SAAA6O,EACE3O,EACAC,EACA2O,GAAuC,OAAA/O,IAAAU,eAAAsO,GAAA,cAAAA,EAAApO,KAAAoO,EAAAnO,MAAA,OAAA,OAAAmO,EAAAnO,OAElBkO,EAAcvD,YACjCuD,EAActD,QAAQwD,sBACtB9O,EACAC,GACD,OAJW,OAAA4O,EAAAtN,gBAAAsN,EAAArN,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfkB,WAAYlB,EAAME,KAAKgB,WAAW9K,WAClC+J,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,iBAClB,OAAA,UAAA,OAAA0F,EAAApN,UAAAkN,QACNjP,WAAAC,WAqBD,SAAAoP,KAFC,OAEDA,GAAAnP,EAAAC,IAAAC,MAnBO,SAAAkP,EACLhP,EACAC,EACA2O,GAAuC,OAAA/O,IAAAU,eAAA0O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAAvO,MAAA,OAErB,OAAAuO,EAAA1N,gBAWXnC,EAAiBY,EAAYC,EJ1KZ,gBI+JN,IAAAiP,EAAAtP,EAAAC,IAAAC,MAAG,SAAAqP,EACnB/N,EACAC,GAAsB,OAAAxB,IAAAU,eAAA6O,GAAA,cAAAA,EAAA3O,KAAA2O,EAAA1O,MAAA,OAAA,OAAA0O,EAAA1O,OAET4N,GACXlN,EACAC,EACAuN,GACD,OAAA,OAAAQ,EAAA7N,gBAAA6N,EAAA5N,MAAA,OAAA,UAAA,OAAA4N,EAAA3N,UAAA0N,OACF,gBATiBE,EAAAC,GAAA,OAAAJ,EAAAxP,WAAAC,iBAWqD,OAAA,UAAA,OAAAsP,EAAAxN,UAAAuN,QACxEtP,WAAAC,WAAA,SAGc4P,GAA6BC,EAAAC,EAAAC,GAAA,OAAAC,GAAAjQ,WAAAC,WAAA,SAAAgQ,KAkB3C,OAlB2CA,GAAA/P,EAAAC,IAAAC,MAA5C,SAAA8P,EACE5P,EACAC,EACA2O,GAAuC,OAAA/O,IAAAU,eAAAsP,GAAA,cAAAA,EAAApP,KAAAoP,EAAAnP,MAAA,OAAA,OAAAmP,EAAAnP,OAElBkO,EAAcvD,YACjCuD,EAActD,QAAQwE,sBACtB9P,EACAC,GACD,OAJW,OAAA4P,EAAAtO,gBAAAsO,EAAArO,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfkB,WAAYlB,EAAME,KAAKgB,WAAW9K,WAClC+J,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,iBAClB,OAAA,UAAA,OAAA0G,EAAApO,UAAAmO,QACNlQ,WAAAC,WAqBD,SAAAoQ,KAFC,OAEDA,GAAAnQ,EAAAC,IAAAC,MAnBO,SAAAkQ,EACLhQ,EACAC,EACA2O,GAAuC,OAAA/O,IAAAU,eAAA0P,GAAA,cAAAA,EAAAxP,KAAAwP,EAAAvP,MAAA,OAErB,OAAAuP,EAAA1O,gBAWXnC,EAAiBY,EAAYC,EJlNZ,gBIuMN,IAAAiQ,EAAAtQ,EAAAC,IAAAC,MAAG,SAAAqQ,EACnB/O,EACAC,GAAsB,OAAAxB,IAAAU,eAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OAAA,OAAA0P,EAAA1P,OAET6O,GACXnO,EACAC,EACAuN,GACD,OAAA,OAAAwB,EAAA7O,gBAAA6O,EAAA5O,MAAA,OAAA,UAAA,OAAA4O,EAAA3O,UAAA0O,OACF,gBATiBE,EAAAC,GAAA,OAAAJ,EAAAxQ,WAAAC,iBAWqD,OAAA,UAAA,OAAAsQ,EAAAxO,UAAAuO,QACxEtQ,WAAAC,WAAA,SAGc4Q,GAAuBC,EAAAC,EAAAC,GAAA,OAAAC,GAAAjR,WAAAC,WAAA,SAAAgR,KAkBrC,OAlBqCA,GAAA/Q,EAAAC,IAAAC,MAAtC,SAAA8Q,EACE5Q,EACAC,EACAyM,GAAwB,OAAA7M,IAAAU,eAAAsQ,GAAA,cAAAA,EAAApQ,KAAAoQ,EAAAnQ,MAAA,OAAA,OAAAmQ,EAAAnQ,OAEHgM,EAAQrB,YAC3BqB,EAAQpB,QAAQwF,iBAChB9Q,EACAC,GACD,OAJW,OAAA4Q,EAAAtP,gBAAAsP,EAAArP,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfkB,WAAYlB,EAAME,KAAKgB,WAAW9K,WAClC+J,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,iBAClB,OAAA,UAAA,OAAA0H,EAAApP,UAAAmP,QACNlR,WAAAC,WAqBD,SAAAoR,KAFC,OAEDA,GAAAnR,EAAAC,IAAAC,MAnBO,SAAAkR,EACLhR,EACAC,EACAyM,GAAwB,OAAA7M,IAAAU,eAAA0Q,GAAA,cAAAA,EAAAxQ,KAAAwQ,EAAAvQ,MAAA,OAEN,OAAAuQ,EAAA1P,gBAWXnC,EAAiBY,EAAYC,EJ1PZ,gBI+ON,IAAAiR,EAAAtR,EAAAC,IAAAC,MAAG,SAAAqR,EACnB/P,EACAC,GAAsB,OAAAxB,IAAAU,eAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,OAAA,OAAA0Q,EAAA1Q,OAET6P,GACXnP,EACAC,EACAqL,GACD,OAAA,OAAA0E,EAAA7P,gBAAA6P,EAAA5P,MAAA,OAAA,UAAA,OAAA4P,EAAA3P,UAAA0P,OACF,gBATiBE,EAAAC,GAAA,OAAAJ,EAAAxR,WAAAC,iBAWqD,OAAA,UAAA,OAAAsR,EAAAxP,UAAAuP,QACxEtR,WAAAC,WAAA,SAGc4R,GAAuBC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAAnS,WAAAC,WAAA,SAAAkS,KAsBrC,OAtBqCA,GAAAjS,EAAAC,IAAAC,MAAtC,SAAAgS,EACE9R,EACAC,EACAkL,EACAC,EACAlD,GAAe,OAAArI,IAAAU,eAAAwR,GAAA,cAAAA,EAAAtR,KAAAsR,EAAArR,MAAA,OAAA,OAAAqR,EAAArR,OAEMyK,EAAmBE,YACtCF,EAAmBG,QAAQ0G,gBAC3BhS,EACAC,GACD,OAJW,OAAA8R,EAAAxQ,gBAAAwQ,EAAAvQ,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfC,UAAWD,EAAME,KAAKD,UACtB1D,QAAAA,EACA4D,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,YACnBgC,mBAAoBC,OACnB,OAAA,UAAA,OAAA2G,EAAAtQ,UAAAqQ,QACNpS,WAAAC,WAyBD,SAAAsS,KAFC,OAEDA,GAAArS,EAAAC,IAAAC,MAvBO,SAAAoS,EACLlS,EACAC,EACAkL,EACAC,EACAlD,GAAe,OAAArI,IAAAU,eAAA4R,GAAA,cAAAA,EAAA1R,KAAA0R,EAAAzR,MAAA,OAEG,OAAAyR,EAAA5Q,gBAaXnC,EAAiBY,EAAYC,EJ1SZ,gBI6RN,IAAAmS,EAAAxS,EAAAC,IAAAC,MAAG,SAAAuS,EACnBjR,EACAC,GAAsB,OAAAxB,IAAAU,eAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAA5R,MAAA,OAAA,OAAA4R,EAAA5R,OAET6Q,GACXnQ,EACAC,EACA8J,EACAC,EACAlD,GACD,OAAA,OAAAoK,EAAA/Q,gBAAA+Q,EAAA9Q,MAAA,OAAA,UAAA,OAAA8Q,EAAA7Q,UAAA4Q,OACF,gBAXiBE,EAAAC,GAAA,OAAAJ,EAAA1S,WAAAC,iBAaqD,OAAA,UAAA,OAAAwS,EAAA1Q,UAAAyQ,QACxExS,WAAAC,WAAA,SAGc8S,GAAyBC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAArT,WAAAC,WAAA,SAAAoT,KAsBvC,OAtBuCA,GAAAnT,EAAAC,IAAAC,MAAxC,SAAAkT,EACEhT,EACAC,EACAkL,EACAC,EACAlD,GAAe,OAAArI,IAAAU,eAAA0S,GAAA,cAAAA,EAAAxS,KAAAwS,EAAAvS,MAAA,OAAA,OAAAuS,EAAAvS,OAEMyK,EAAmBE,YACtCF,EAAmBG,QAAQ4H,kBAC3BlT,EACAC,GACD,OAJW,OAAAgT,EAAA1R,gBAAA0R,EAAAzR,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfC,UAAWD,EAAME,KAAKD,UACtB1D,QAAAA,EACA4D,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,YACnBgC,mBAAoBC,OACnB,OAAA,UAAA,OAAA6H,EAAAxR,UAAAuR,QACNtT,WAAAC,WAuBA,SAAAwT,KAAA,OAAAA,GAAAvT,EAAAC,IAAAC,MArBM,SAAAsT,EACLpT,EACAC,EACAkL,EACAC,EACAlD,GAAe,OAAArI,IAAAU,eAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,OAEG,OAAA2S,EAAA9R,gBAaXnC,EAAiBY,EAAYC,EJ1VZ,gBI6UN,IAAAqT,EAAA1T,EAAAC,IAAAC,MAAG,SAAAyT,EACnBnS,EACAC,GAAsB,OAAAxB,IAAAU,eAAAiT,GAAA,cAAAA,EAAA/S,KAAA+S,EAAA9S,MAAA,OAAA,OAAA8S,EAAA9S,OAET+R,GACXrR,EACAC,EACA8J,EACAC,EACAlD,GACD,OAAA,OAAAsL,EAAAjS,gBAAAiS,EAAAhS,MAAA,OAAA,UAAA,OAAAgS,EAAA/R,UAAA8R,OACF,gBAXiBE,EAAAC,GAAA,OAAAJ,EAAA5T,WAAAC,iBAaqD,OAAA,UAAA,OAAA0T,EAAA5R,UAAA2R,QACxE1T,WAAAC,oBCnUegU,GACdC,EACAnQ,GAEA,MAAO,CACLmQ,GAAIA,EACJ/R,SAAU4B,EAAkBV,aAAalB,SAAS0I,WAClDzI,aAAc2B,EAAkBV,aAAajB,aAAayI,WAC1DsJ,UAAWpQ,EAAkBV,aAAa8Q,UAC1CnQ,QAASD,EAAkBV,aAAaW,QACxCoQ,+BACErQ,EAAkBV,aAAa+Q,+BAA+B/R,WAChE6B,6BACEH,EAAkBV,aAAaa,6BACjCmQ,mBACEtQ,SAAAA,EAAmBuQ,WAAWC,sBAC9BjV,SAAOC,UAAUC,SACnBgV,SAAUzQ,EAAkByQ,SAC5BjO,iBAAkBxC,EAAkBV,aAAakD,iBACjDkO,aAAc1Q,EAAkBV,aAAaqR,oBAAoBrS,WACjEsS,UAAW,CACTC,QAAS7Q,EAAkB4Q,UAAUC,QACrCC,YAAa9Q,EAAkB4Q,UAAUE,YAAYhK,YAEvDiK,aAAc/Q,EAAkB+Q,aAChCC,iBAAkBhR,EAAkBgR,2BC7CzBC,GAAarV,EAAAC,EAAAC,EAAAC,GAAA,OAAAmV,GAAAjV,WAAAC,WAAA,SAAAgV,KA0B3B,OA1B2BA,GAAA/U,EAAAC,IAAAC,MAA5B,SAAAoB,EACE0N,EACA5O,EACAC,EACAiI,GAAe,OAAArI,IAAAU,eAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAAA,OAAAY,EAAAZ,OAEMkO,EAAcvD,YACjCuD,EAActD,QAAQsJ,cACtB5U,EACAC,GACD,OAJW,OAAAqB,EAAAC,gBAAAD,EAAAE,KAOTgK,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEvC,YAAcsC,EAAEtC,eACjCnI,KAAI,SAAC2K,GAAK,MAAM,CACfkB,WAAYlB,EAAME,KAAKgB,WAAW9K,WAClC8S,QAASlJ,EAAME,KAAKiJ,MAAMvK,WAC1B+J,QAAS3I,EAAME,KAAKyI,QACpBC,YAAa9V,EACXkN,EAAME,KAAK0I,YAAYhK,WACvB,IACAxI,WACF+J,gBAAiBH,EAAMG,gBACvB3C,YAAawC,EAAMxC,YACnBjB,QAAAA,OACC,OAAA,UAAA,OAAA5G,EAAAG,UAAAP,QACNxB,WAAAC,WAsBA,SAAAoV,KAAA,OAAAA,GAAAnV,EAAAC,IAAAC,MApBM,SAAAkM,EACL/L,EACAD,EACAE,EACA0O,EACA1G,GAAe,OAAArI,IAAAU,eAAA0L,GAAA,cAAAA,EAAAxL,KAAAwL,EAAAvL,MAAA,OAEG,OAAAuL,EAAA1K,gBAYXnC,EAAiBY,EAAYC,EAAUC,aAZ5B,IAAAe,EAAArB,EAAAC,IAAAC,MAAG,SAAAC,EACnBqB,EACAC,GAAsB,OAAAxB,IAAAU,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA,OAAAF,EAAAE,OAETgU,GACX9F,EACAxN,EACAC,EACA6G,GACD,OAAA,OAAA1H,EAAAe,gBAAAf,EAAAgB,MAAA,OAAA,UAAA,OAAAhB,EAAAiB,UAAA1B,OACF,gBAViBiV,EAAA3I,GAAA,OAAApL,EAAAvB,WAAAC,iBAYqD,OAAA,UAAA,OAAAsM,EAAAxK,UAAAuK,QACxEtM,WAAAC,oBC5CesV,GAAQnW,EAAcoW,GACpC,OAAUA,MAAWpW,EAIvB,IAAMqW,GAA6B,GAE7BC,GAAoB,CACxB,qEACApW,SAAOC,UAAUC,UAiElB,SAAAmW,KAAA,OAAAA,GAAAzV,EAAAC,IAAAC,MA9DM,SAAAoB,EACLpC,EACAoW,EACAI,EACAC,GAAkB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApP,EAAA,OAAA5G,IAAAU,eAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAIV,YANRwU,IAAAA,EAhByB,wBAoBnBM,EAAW1W,EAAKgX,WAAW,MAC7BC,SAAOC,OAAOC,OAAOC,YAAYpX,EAAKqX,MAAM,GAAM,QAClDrX,GAEAqW,GAASK,IAASlU,EAAAZ,OAAA,MAAA,OAAAY,EAAAC,gBAAS4T,GAASK,IAAS,OAAA,IAE7CJ,GAAkBgB,MAAK,SAACC,GAAC,OAAKvX,IAASuX,MAAE/U,EAAAZ,QAAA,MAAA,IACrC4U,GAAYhU,EAAAZ,OAAA,MAChB4U,EAAaxW,EAAMyW,GAAWjU,EAAAZ,QAAA,MAAA,OAAA,MAExB4V,MAAM,wCAAuC,QAAAhV,EAAAZ,QAAA,MAAA,QAAA,OAAAY,EAAAZ,QAGhB6V,MAAMtB,GAAQO,EAAUN,IAAS,QAApD,IAAZO,EAAYnU,EAAAE,MAEAgV,IAAElV,EAAAZ,QAAA,MAAA,IACZ4U,GAAYhU,EAAAZ,QAAA,MAChB4U,EAAaxW,GAAMwC,EAAAZ,QAAA,MAAA,QAAA,MAEb4V,MAAM,wCAAuC,QAIrB,OAA5BZ,EAAQD,EAAaC,QAAOpU,EAAAb,QAAAa,EAAAZ,QAES+U,EAAagB,OAAM,QAA9Cb,EAEMc,GAFdf,EAAQrU,EAAAE,MAEsBmV,aAEpCxB,GAASK,GAAY,CACnBoB,MAAOjB,EAASiB,MAChBC,IAAKlB,EAASkB,IACdC,iBAAkBhY,EAClBiY,OAAQpB,EAASoB,OACjBC,YAAarB,EAASqB,YACtBC,iBAAkBtB,EAASsB,iBAC3BzB,SAAAA,EACAmB,YAVaf,EAAPsB,SAWN5V,EAAAZ,QAAA,MAAA,QAAA,OAAAY,EAAAb,QAAAa,EAAA6V,GAAA7V,YAAAA,EAAAZ,QAEiBgV,EAAM0B,OAAM,QAArBvB,EACgBa,EADhBpV,EAAAE,MAEV2T,GAASK,GAAY,CACnBoB,OAFenQ,EAAIoP,EAAJpP,MAEHmQ,MACZC,IAAKpQ,EAAKoQ,IACVC,iBAAkBhY,EAClBiY,OAAQtQ,EAAKsQ,OACbC,YAAavQ,EAAKuQ,YAClBC,iBAAkBxQ,EAAKwQ,iBACvBzB,SAAAA,EACAmB,YATad,EAAPqB,SAUN,QAAA,OAAA5V,EAAAC,gBAIC4T,GAASK,IAAS,QAAA,UAAA,OAAAlU,EAAAG,UAAAP,uBAC1BxB,WAAAC,iCX+C4B,SAC3B0X,EACAC,GAEA,MAAO,CACLD,UAAAA,EACA1Z,eAAgBA,EAAe2Z,GAC/B9a,cAAeA,EAAc8a,GAC7B/Z,oBAAqBA,EAAoB+Z,GACzCrZ,sBAAuBA,EAAsBqZ,GAC7Cpa,yBAA0BA,EAAyBoa,GACnDpZ,2BAA4BA,EAA2BoZ,GAEvDC,WAAY3Z,EAAoB0Z,GAChCnZ,cAAAA,uBI/IsB,8EC0gBKkI,GAC7B,IAAAmR,EAKI1U,EAA2B,CAC7BC,aAAcsD,EAASI,KACvBxE,OAAQoE,EAASK,OAAOzE,OACxBQ,aAAc4D,EAASK,OAAOjE,aAC9BP,iBAAkBmE,EAASnE,iBAC3Bc,eAAgBqD,EAASM,QAAQ3D,eACjCC,qBAAsBoD,EAASM,QAAQ1D,uBAVvCpB,EAAQ2V,EAAR3V,SACAQ,EAAuBmV,EAAvBnV,wBACAP,EAAY0V,EAAZ1V,aACAe,EAAqB2U,EAArB3U,sBAUI4U,EArPR,SAA2BpR,GACzB,IAAAqR,EASI5U,EAA2B,CAC7BC,aAAcsD,EAASI,KACvBxE,OAAQoE,EAASK,OAAOzE,OACxBQ,aAAc4D,EAASK,OAAOjE,aAC9BP,iBAAkBmE,EAASnE,iBAC3Bc,eAAgBqD,EAASM,QAAQ3D,eACjCC,qBAAsBoD,EAASM,QAAQ1D,uBAdvCO,EAAakU,EAAblU,cACAH,EAAeqU,EAAfrU,gBACAoC,EAASiS,EAATjS,UACArB,EAAqBsT,EAArBtT,sBACAE,EAAqBoT,EAArBpT,sBACAE,EAAoBkT,EAApBlT,qBACAc,EAAkBoS,EAAlBpS,mBACAC,EAAUmS,EAAVnS,WAUF,OAAIc,EAAS5B,QAAUrI,sBAAc2I,SAAYU,GAAcF,EAG7Dc,EAASI,KAAKnD,qBACZpH,mCAA2BqH,YAC5BkC,GACAF,GAMD1G,EAAUwH,EAASI,KAAKkR,mBAAmB5Y,SAC1CsE,GACAoC,GACAF,EAGS/B,IAAiBH,GAAoBoC,GAAcF,EAG7DlC,GACAG,GACA6C,EAAS5B,QAAUrI,sBAAc+I,WAChCM,IACAF,EAEMc,EAASI,KAAKhD,kBAAkBC,QAAU,EAC7C2C,EAASI,KAAKhD,kBAAkBC,QAChC2C,EAASI,KAAKO,aAAeX,EAASK,OAAOO,0BACxCZ,EAAS5B,QAAUrI,sBAAckL,SACnCjB,EAASI,KAAKhD,kBAAkBC,QAC9B2C,EAAS5B,QAAUrI,sBAAc+I,SACnCf,EACEiC,EAAS5B,QAAUrI,sBAAcwb,SACnCtT,EAAwB+B,EAASI,KAAKoR,WACzCvT,EACA+B,EAASI,KAAKoR,WAElBxR,EAASI,KAAKjB,aAAevJ,2BAAmBkJ,UAChDG,EAEOd,EAEA6B,EAASI,KAAKO,aAAeX,EAASM,QAAQhC,eAzB9C0B,EAASI,KAAKhD,kBAAkBoQ,UAFhCxN,EAASI,KAAKqR,qBARnBzR,EAASI,KAAKO,aAAeX,EAASK,OAAOO,0BARxCZ,EAASI,KAAKO,aAiOA+Q,CAAkB1R,GACzC2R,EAAuD5R,EACrDC,EACAA,EAASI,KAAKhD,kBAAkB5B,SAChCwE,EAASI,KAAKhD,kBAAkB3B,cAH1BoF,EAAc8Q,EAAd9Q,eAAgBE,EAA0B4Q,EAA1B5Q,2BAKlB6Q,EAAexQ,EAAgBpB,GAE/B6R,EAAW,IAAI1Z,YAAU6H,EAASI,KAAKhD,kBAAkB5B,UAAUsW,KACvE9R,EAASI,KAAKhD,kBAAkB3B,cAG5BsW,EAAmB/R,EAASgS,SAC/BrX,KAAI,SAACsX,GAAO,OAAKha,EAAiBga,EAAQC,YAAYxW,cACtDyW,QAAO,SAACC,EAAKC,GAAK,OAAKD,EAAMC,IAAO,GAEjCnE,EAAclO,EAASgS,SAC1BrX,KAAI,SAACsX,GAAO,OAAKha,EAAiBga,EAAQI,OAAO3W,cACjDyW,QAAO,SAACC,EAAKC,GAAK,OAAKD,EAAMC,IAAO,GAEjCC,EAAetS,EAASgS,SAExBO,EACJvW,EAA0BP,EAAee,EACrCR,EAA0BP,EAC1BA,EAAee,EACfgW,EACS,IAAbhX,EAAiB,EAAIA,EAAWgB,EAelC,MAAO,CACLiW,WAdiBZ,EAASa,GAAG,GAC3B,IAAIva,YAAUqD,GACXmX,UAAUJ,GACVxW,aAAa,KACbL,WACH,EAUFF,SAAAA,EACAoX,eAVqBf,EAASa,GAAG,GAC/B,IAAIva,YAAUsD,GACXkX,UAAUH,EAAuB,EAAIA,EAAuB,GAC5DzW,aAAa,KACbL,WACH,EAMFD,aAAAA,EACAK,eAAgBE,EAChBO,aAAcC,EACd+V,iBAAAA,EACAC,qBAAAA,EACApB,eAAAA,EACAvQ,eAAAA,EACAE,2BAAAA,EACA6Q,aAAAA,EACAG,iBAAAA,EACA7D,YAAAA,EACA2E,WAAYza,EACV4H,EAASI,KAAKhD,kBAAkB4Q,UAAUE,YAC1C,IACAxS,WACF4W,aAAAA,gGClkBJ,SAA+CtZ,EAAAC,EAAAC,GAAA,OAAA+I,EAAA5I,WAAAC,uCFlB/C,SACEwZ,EACA/X,EACAC,EACA+X,GAEA,IAAMnZ,EACJoB,GAAkBA,EAAiB,GAAKA,EAAiB8X,EACrD9X,EACE+X,GACFC,SAASD,IACTA,EAAkBhY,GAClBgY,EAAkBD,EAClBC,EAAkB,EAClBD,EAAe/X,EAhBG,KAiBlBA,EAjBkB,KAkBlB+X,EAaN,MAAO,CAAEnZ,WAVLoZ,GACFC,SAASD,IACTA,EAAkBhY,GAClBgY,EAAkBD,GAClBC,EAAkBnZ,EACdmZ,EACAhY,EAAmB+X,EACnB/X,EACA+X,EA7BkB,KA+BHlZ,SAAAA,qCKmEvB,SACEqZ,EACAC,EACAC,EACAC,GAIA,IAFA,IAAMC,EAAiC,GAAGC,aAGxC,IAAMC,EAAUN,EAAsBhZ,GAEhCmD,EACJ8V,EAA4BM,MAC1B,SAACxT,GAAQ,OACPA,EAAStD,aAAa6Q,GAAG7R,aAAe6X,EAAQhG,GAAG7R,eAClDwX,EAA4BjZ,GAE7ByC,EAAe,CACnB6Q,GAAIgG,EAAQhG,GAAG7R,WACf6I,uBACGnH,SAAAA,EAAmBuQ,WAAWpJ,kBAC9BgP,EAAQ7W,aAAa6H,eACxB5D,cAAe4S,EAAQ7W,aAAaiE,aACpC0D,aAAckP,EAAQ7W,aAAa2H,YACnClF,YAAaoU,EAAQ7W,aAAa0B,MAClCyB,aAAc0T,EAAQ7W,aAAamD,YACnCsP,SAAUoE,EAAQ7W,aAAayS,SAC/BsE,gBAAiBF,EAAQ7W,aAAakB,SAASjD,KAAI,SAACkD,GAClD,MAAO,CACL0P,GAAI1P,EAAQ0H,UACZ1D,QAAShE,EAAQ6V,MAAMhY,WACvBoJ,mBAAoBjH,EAAQiH,uBAGhCwM,kBAAmBiC,EAAQ7W,aAAa4U,kBACxCqC,QAASJ,EAAQ7W,aAAaiX,QAC9BnC,WAAY+B,EAAQ7W,aAAakX,gBACjCnC,qBAAsB8B,EAAQ7W,aAAa+U,qBAC3CoC,cAAeN,EAAQM,cAAcnY,WACrC0B,kBAAmBkQ,GACjBiG,EAAQhG,GAAG7R,WACX0B,GAEFgW,YAAaA,GAGfC,EAAc1O,KAAKjI,IAtCZzC,EAAI,EAAGA,EAAIkZ,EAAI/O,OAAQnK,IAAGqZ,IAyCnC,OAAOD,6FFhJ8Bra,EAAAC,GAAA,OAAAyK,EAAArK,WAAAC,mEC2BCwa,EAAAC,EAAAC,EAAAC,EAAAtF,GAAA,OAAAjJ,EAAArM,WAAAC,iDAwSC4a,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAxH,GAAAzT,WAAAC,+CAhDFib,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA/I,GAAAvS,WAAAC,yCApKvC,SAA0Csb,EAAAC,EAAAC,GAAA,OAAArN,GAAApO,WAAAC,6CAwC1C,SAA8Cyb,EAAAC,EAAAC,GAAA,OAAAvM,GAAArP,WAAAC,uCAhF9C,SAAwC4b,EAAAC,EAAAC,GAAA,OAAA3O,EAAApN,WAAAC,wCGtDxC,SAAyCN,EAAAC,EAAAC,EAAAC,GAAA,OAAA6V,GAAA3V,WAAAC,sCHsNzC,SAAuC+b,EAAAC,EAAAC,GAAA,OAAA7K,GAAArR,WAAAC,8CHWPsN,OAAMxG,EAAIoV,0EAAAC,CAAA7O,GAAAA,IACxC8O,EAYIjZ,EAA2B2D,GAX7B5E,EAAQka,EAARla,SACAC,EAAYia,EAAZja,aACAQ,EAAayZ,EAAbzZ,cACAO,EAAqBkZ,EAArBlZ,sBAEAW,EAAauY,EAAbvY,cACAkC,EAAcqW,EAAdrW,eACAD,EAASsW,EAATtW,UACAR,EAAmB8W,EAAnB9W,oBACAM,EAAUwW,EAAVxW,WACAK,EAAkBmW,EAAlBnW,mBAGF,OACGL,GACDkB,EAAK1D,aAAaO,qBAChBpH,mCAA2BqH,YAC7BkD,EAAK1D,aAAayC,YAAcvJ,2BAAmBkL,OAE5C/K,sBAAc2I,QAfPgX,EAAdhW,gBAkBAlH,EAAU4H,EAAK1D,aAAa4U,mBAAmB5Y,QAExC3C,sBAAc+K,OAErB3D,IACC+B,GACD1D,EAAWC,EAAee,GAC1BP,IACC2C,IACAQ,EAEMrJ,sBAAciL,QACZ3B,IAAmBH,EACrBnJ,sBAAckL,SACZ/B,EACFnJ,sBAAcwb,SACZhS,EACFxJ,sBAAc+I,SAEd/I,sBAAcsI,8EG9FzB,SAA6CsX,EAAAC,EAAAC,GAAA,OAAAnM,GAAArQ,WAAAC,uCElKd+B,EAAAyY,EAAAC,EAAAC,EAAAC,GAAA,OAAAvF,GAAArV,WAAAC,2DDrBe0G,GAC5C,IAAMnD,EAAMC,IAAQC,OACpB,OAA6C,IAAzCiD,EAAS5C,kBAAkBoQ,UACtB3X,mCAA2BqH,WACzBL,GAAOmD,EAAS5C,kBAAkBC,QACpCxH,mCAA2BiL,OACqC,IAA9Dd,EAAS5C,kBAAkBqQ,+BAC7B5X,mCAA2BigB,SAE3BjgB,mCAA2BkgB,wFEdX,kDTMD1d,EAAmBC,GAC3C,OAAOF,EAAYC,EAAGC,GAAU4L,SAAS,4JOwC3C,SACE8R,EACA9C,EACAC,GAEA,IAAME,EAAiC,GAqCvC,OAnCAF,EAAI8C,SAAQ,SAAC1I,GACX,IAAMgG,EAAUyC,EAAUxC,MAAK,SAACxT,GAAQ,aAAKA,SAAAA,EAAUuN,MAAOA,KAC9D,GAAIgG,EAAS,CACX,IAAMnW,EACJ8V,EAA4BM,MAC1B,SAACxT,GAAQ,OAAKA,EAAStD,aAAa6Q,GAAG7R,aAAe6X,EAAQhG,OAC3D2F,EAA4B,GAE7BxW,EAAe,CACnB6Q,GAAIgG,EAAQhG,GACZhJ,uBACGnH,SAAAA,EAAmBuQ,WAAWpJ,iBAC/BgP,EAAQhP,eACV5D,aAAc4S,EAAQ5S,aACtB0D,YAAakP,EAAQlP,YACrBlF,WAAYoU,EAAQpU,WACpBU,YAAa0T,EAAQ1T,YACrBsP,SAAUoE,EAAQpE,SAClBsE,gBAAiBF,EAAQE,gBACzBnC,kBAAmBiC,EAAQjC,kBAC3BqC,QAASJ,EAAQI,QACjBnC,WAAY+B,EAAQ/B,WACpBC,qBAAsB8B,EAAQ9B,qBAC9BoC,cAAeN,EAAQM,cACvBzW,kBAAmBkQ,GACjBiG,EAAQhG,GACRnQ,GAEFgW,UAAWG,EAAQH,WAGrBC,EAAc1O,KAAKjI,OAIhB2W"}