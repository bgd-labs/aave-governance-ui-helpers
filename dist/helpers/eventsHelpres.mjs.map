{"version":3,"sources":["../../src/helpers/eventsHelpres.ts"],"sourcesContent":["export const blockLimit = 1023;\n\nexport function getBlocksForEvents(\n  currentBlock: number,\n  startBlockNumber: number,\n  endBlockNumber: number | undefined,\n  lastBlockNumber: number | undefined,\n): { startBlock: number; endBlock: number } {\n  const endBlock =\n    endBlockNumber && endBlockNumber > 0 && endBlockNumber < currentBlock\n      ? endBlockNumber\n      : !!lastBlockNumber &&\n        isFinite(lastBlockNumber) &&\n        lastBlockNumber > startBlockNumber &&\n        lastBlockNumber < currentBlock\n      ? lastBlockNumber + 1\n      : currentBlock > startBlockNumber + blockLimit\n      ? startBlockNumber + blockLimit\n      : currentBlock;\n\n  const startBlock =\n    !!lastBlockNumber &&\n    isFinite(lastBlockNumber) &&\n    lastBlockNumber > startBlockNumber &&\n    lastBlockNumber < currentBlock &&\n    lastBlockNumber < endBlock\n      ? lastBlockNumber\n      : startBlockNumber < currentBlock\n      ? startBlockNumber\n      : currentBlock - blockLimit;\n\n  return { startBlock, endBlock };\n}\n\nexport async function getEventsBySteps<T>(\n  startBlock: number,\n  endBlock: number,\n  blockLimit: number,\n  callbackFunc: (startBlock: number, endBlock: number) => Promise<T>,\n) {\n  const blockSteps = Math.ceil((endBlock - startBlock) / blockLimit);\n\n  const eventsCountArray = new Array(blockSteps);\n  for (let i = 0; i < blockSteps; i++) {\n    eventsCountArray[i] = i;\n  }\n\n  const results = await Promise.all(\n    eventsCountArray.map(async (count) => {\n      const startBlockNumber = startBlock + blockLimit * count;\n      const endBlockNumber = startBlock + (blockLimit * count + blockLimit);\n\n      return await callbackFunc(\n        startBlockNumber,\n        endBlock > endBlockNumber ? endBlockNumber : endBlock,\n      );\n    }),\n  );\n\n  return results.flat();\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,aAAa;AAEnB,SAAS,mBACd,cACA,kBACA,gBACA,iBAC0C;AAC1C,QAAM,WACJ,kBAAkB,iBAAiB,KAAK,iBAAiB,eACrD,iBACA,CAAC,CAAC,mBACF,SAAS,eAAe,KACxB,kBAAkB,oBAClB,kBAAkB,eAClB,kBAAkB,IAClB,eAAe,mBAAmB,aAClC,mBAAmB,aACnB;AAEN,QAAM,aACJ,CAAC,CAAC,mBACF,SAAS,eAAe,KACxB,kBAAkB,oBAClB,kBAAkB,gBAClB,kBAAkB,WACd,kBACA,mBAAmB,eACnB,mBACA,eAAe;AAErB,SAAO,EAAE,YAAY,SAAS;AAChC;AAEA,SAAsB,iBACpB,YACA,UACAA,aACA,cACA;AAAA;AACA,UAAM,aAAa,KAAK,MAAM,WAAW,cAAcA,WAAU;AAEjE,UAAM,mBAAmB,IAAI,MAAM,UAAU;AAC7C,aAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,uBAAiB,CAAC,IAAI;AAAA,IACxB;AAEA,UAAM,UAAU,MAAM,QAAQ;AAAA,MAC5B,iBAAiB,IAAI,CAAO,UAAU;AACpC,cAAM,mBAAmB,aAAaA,cAAa;AACnD,cAAM,iBAAiB,cAAcA,cAAa,QAAQA;AAE1D,eAAO,MAAM;AAAA,UACX;AAAA,UACA,WAAW,iBAAiB,iBAAiB;AAAA,QAC/C;AAAA,MACF,EAAC;AAAA,IACH;AAEA,WAAO,QAAQ,KAAK;AAAA,EACtB;AAAA;","names":["blockLimit"]}